# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TimewhZoneInfo {
  whZoneName: String
  gmtOffset: String
  gmtOffsetName: String
  abbreviation: String
  tzName: String
}

type Town {
  townId: ID
  townNo: String
  townName: String
  districtsId: String
  districts: Districts
  tags: String
}

type Districts {
  districtsId: ID
  districtsNo: String
  districtsName: String
  latitude: String
  longitude: String
  wikiDataId: String
  provinceId: String
  countryId: String
  province: Province
  country: Country
  town(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Town!]
  tags: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Province {
  provinceId: ID
  provinceNo: String
  provinceName: String
  type: String
  latitude: String
  longitude: String
  countryId: String
  country: Country
  districts(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Districts!]
  tags: String
}

type TranslationInfo {
  translationKey: String
  translationBase: String
  translate: String
}

type TranslationOption {
  translationOptionId: ID
  languageId: String
  name: String
  baseLanguageId: String
  labels: [TranslationInfo!]
  messages: [TranslationInfo!]
  countries: [TranslationInfo!]
  provinces: [TranslationInfo!]
  districts: [TranslationInfo!]
  status: [TranslationInfo!]
  version: String
  releaseDate: Date
  releaseNote: String
  credit: String
  language: Language
  baseLanguage: Language
  rowCode: String
  tags: String
}

type ContactInfo {
  telephone: String
  mobile: String
  email: String
}

type PurchasePreferenceInfo {
  Field0: Float
}

type SalePreferenceInfo {
  Field0: Float
}

type InventoryPreferenceInfo {
  Field0: String
}

type SysPreferenceInfo {
  purchasePreference: PurchasePreferenceInfo
  salePreference: SalePreferenceInfo
  inventoryPreference: InventoryPreferenceInfo
}

type PdAttribute {
  attributeId: ID
  bizId: String
  attributeNo: String
  attributeName: String
  biz: Biz
  tags: String
}

type PdAttributeVariantInfo {
  variantName: String
  codePart: String
  descPart: String
}

type PdAttributeInfo {
  attributeId: String
  attribute: PdAttribute
  pdVariants: [PdAttributeVariantInfo!]
}

type PdGeneratedVariantInfo {
  pdId: String
  pdNo: String
  pdName: String
  use: Boolean
}

type PdVariantInfo {
  attributes: [PdAttributeInfo!]
  generatedVariants: [PdGeneratedVariantInfo!]
}

type PdLotSnInfo {
  useLot: Boolean
  useSn: Boolean
  lotMask: String
  snMask: String
  whShelfLife: Float
  retestInterval: Float
}

type PdPackageInfo {
  pdId: String
  pd: Pd
  qty: Float
}

type PdBundleInfo {
  pdId: String
  pd: Pd
  qty: Float
}

type PackagingType {
  packagingTypeId: ID
  packagingTypeNo: String
  packagingTypeName: String
  bizId: String
  biz: Biz
  pdUom(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdUom!]
  tags: String
}

type DimensionInfo {
  whidth: Float
  length: Float
  height: Float
}

type StrictStorageTypeInfo {
  whStorageTypeId: String
  maxUnit: Float
}

type SuppGroup {
  suppGroupId: ID
  bizId: String
  suppGroupNo: String
  suppGroupName: String
  biz: Biz
  supp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Supp!]
  tags: String
}

type StairstepPriceInfo {
  fromQty: Float
  toQty: Float
  unitPrice: Float
}

type SpdStorage {
  spdStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  spdId: String
  ohQty: Float
  ropQty: Float
  status: String
  biz: Biz
  branch: Branch
  wh: Wh
  whStorage: WhStorage
  spd: Spd
  rowCode: String
  rowDesc: String
  tags: String
}

type Spd {
  spdId: ID
  bizId: String
  suppId: String
  pdId: String
  spdNo: String
  spdName: String
  ohQty: Float
  unitPrice: Float
  pdUomId: String
  usePriceIncludeTax: Boolean
  minOrderQty: Float
  stairstepPrice: [StairstepPriceInfo!]
  cnvFactor: Float
  biz: Biz
  supp: Supp
  pd: Pd
  pdUom: PdUom
  spdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SpdStorage!]
  tags: String
}

type PdStorageRpnPrefInfo {
  rpnType: String
  rpnBranchId: String
  rpnWhId: String
  rpnZoneId: String
  rpnAisleId: String
  rpnRackId: String
  rpnShelfId: String
  rpnStorageId: String
  rpnControllerId: String
  ropQty: Float
  maxQty: Float
  minQty: Float
}

type WhPrefInfo {
  defaultZoneId: String
  defaultAisleId: String
  defaultRackId: String
  defaultShelfId: String
  defaultStorageId: String
  receivingStorageId: String
  pickingStorageId: String
  packingStorageId: String
  shippingStorageId: String
}

type WhRpnPrefInfo {
  rpnType: String
  rpnBranchId: String
  rpnWhId: String
  rpnControllerId: String
  ropQty: Float
  maxQty: Float
  minQty: Float
}

type PdBranchRpnPrefInfo {
  rpnType: String
  rpnBranchId: String
  rpnControllerId: String
  ropQty: Float
  maxQty: Float
  minQty: Float
}

type PdSuProfile {
  pdSuProfileId: ID
  bizId: String
  pdId: String
  suTypeId: String
  pdUomId: String
  qtyPerSu: Float
  dimension: DimensionInfo
  strictStorageType: [StrictStorageTypeInfo!]
  secondayUomId: String
  biz: Biz
  pd: Pd
  suType: SuType
  pdUom: PdUom
  secondayUom: PdUom
  rowCode: String
  rowDesc: String
  tags: String
}

type SuType {
  suTypeId: ID
  bizId: String
  suTypeNo: String
  suTypeName: String
  biz: Biz
  pdSuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSuProfile!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  tags: String
}

type PdSalesInfo {
  itemId: String
  pdId: String
  pd: Pd
  spdId: String
  spd: Spd
  orderedQty: Float
  pdUomId: String
  pdUom: PdUom
  unitPrice: Float
  totalPrice: Float
  applyHu: Boolean
  huTypeId: String
  huType: HuType
  qtyPerHu: Float
  numOfHu: Float
  allocatedQty: Float
  deliveredQty: Float
  invoicedQty: Float
  returnedQty: Float
  status: String
  allowPartialShipment: Boolean
  baseUnitOrderedQty: Float
  cnvFactor: Float
  allocated: Boolean
  deliverable: Boolean
  refOresvId: String
  refOresvNo: String
  refOresvItemId: String
  refOresvStatus: String
  pdBranchId: String
  ffmBranchId: String
  ffmWhId: String
}

type PdGroup {
  pdGroupId: ID
  bizId: String
  pdGroupNo: String
  pdGroupName: String
  biz: Biz
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  pdCate(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdCate!]
  tags: String
}

type Brand {
  brandId: ID
  bizId: String
  brandNo: String
  brandName: String
  biz: Biz
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  tags: String
}

type Color {
  colorId: ID
  bizId: String
  colorNo: String
  colorName: String
  biz: Biz
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  tags: String
}

type AssetCascadePriceInfo {
  numOfPeriods: Float
  rtp: Float
  price1: Float
  price2: Float
  price3: Float
  price4: Float
  price5: Float
}

type AttachedDocInfo {
  citizenCard: Boolean
  houseRegistration: Boolean
  bankBook: Boolean
  legalEntityRegister: Boolean
  vatRegister: Boolean
  constructionContract: Boolean
  purchaseContract: Boolean
  grtContract: Boolean
}

type DiscGroup {
  discGroupId: ID
  bizId: String
  code: String
  name: String
  priceType: String
  discRate: Float
  rounded: Float
  biz: Biz
  cust(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cust!]
  custGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CustGroup!]
  tags: String
}

type PriceGroup {
  priceGroupId: ID
  bizId: String
  priceGroupNo: String
  priceGroupName: String
  biz: Biz
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  priceBook(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBook!]
  tags: String
}

type PriceBookCascade {
  priceBookCascadeId: ID
  bizId: String
  priceBookItemId: String
  fromQty: Float
  toQty: Float
  discRate: Float
  unitPrice: Float
  useType: String
  biz: Biz
  priceBookItem: PriceBookItem
  rowDesc: String
  tags: String
}

type PriceBookItem {
  priceBookItemId: ID
  bizId: String
  priceBookId: String
  pdId: String
  stdPrice: Float
  unitPrice: Float
  biz: Biz
  priceBook: PriceBook
  pd: Pd
  priceBookCascade(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookCascade!]
  rowCode: String
  rowDesc: String
  tags: String
}

type PriceBook {
  priceBookId: ID
  priceBookNo: String
  priceBookName: String
  bizId: String
  priceGroupId: String
  inEffectiveDate: Date
  outEffectiveDate: Date
  custGroupId: String
  custSubgroupId: Float
  biz: Biz
  priceGroup: PriceGroup
  custGroup: CustGroup
  priceBookItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookItem!]
  tags: String
}

type CustGroup {
  custGroupId: ID
  bizId: String
  custGroupNo: String
  custGroupName: String
  discGroupId: String
  discGroup: DiscGroup
  biz: Biz
  cust(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cust!]
  priceBook(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBook!]
  tags: String
}

type CpdStorage {
  cpdStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  cpdId: String
  ohQty: Float
  ropQty: Float
  status: String
  biz: Biz
  branch: Branch
  wh: Wh
  whStorage: WhStorage
  cpd: Cpd
  rowCode: String
  rowDesc: String
  tags: String
}

type Cpd {
  cpdId: ID
  bizId: String
  custId: String
  pdId: String
  cpdNo: String
  cpdName: String
  ohQty: Float
  unitPrice: Float
  usePriceIncludeTax: Boolean
  uomId: String
  cnvFactor: Float
  cust: Cust
  pd: Pd
  biz: Biz
  uom: Uom
  cpdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CpdStorage!]
  tags: String
}

type DocShip {
  docShipId: ID
  bizId: String
  branchId: String
  docNo: String
  docSuffix: String
  docDate: Date
  custId: String
  docSoId: String
  refNo: String
  status: String
  wfStatus: String
  whId: String
  biz: Biz
  cust: Cust
  branch: Branch
  docSo: DocSo
  wh: Wh
  docAriv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocAriv!]
  rowDesc: String
  tags: String
}

type DocAriv {
  docArivId: ID
  bizId: String
  docNo: String
  docDate: Date
  custId: String
  custName: String
  billtoAddr: AddrInfo
  shiptoAddr: AddrInfo
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  docShipId: String
  branchId: String
  wfStatus: String
  cust: Cust
  biz: Biz
  docShip: DocShip
  branch: Branch
  tags: String
}

type ChequeType {
  chequeTypeId: ID
  bizId: String
  chequeTypeNo: String
  chequeTypeName: String
  biz: Biz
  chequeDisbursed(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeDisbursed!]
  chequeReceived(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeReceived!]
  tags: String
}

type ChequeReceived {
  chequeReceivedId: ID
  bizId: String
  chequeNo: String
  chequeDate: Date
  chequeAmt: Float
  chequeTypeId: String
  bankId: String
  bankBranch: String
  payerName: String
  note: String
  status: String
  custId: String
  suppId: String
  receiveDate: Date
  depositDate: Date
  returnDate: Date
  redepositDate: Date
  voidDate: Date
  bank: Bank
  chequeType: ChequeType
  cust: Cust
  biz: Biz
  supp: Supp
  tags: String
}

type BankAccountType {
  bankAccountTypeId: ID
  bizId: String
  bankAccountTypeNo: String
  bankAccountTypeName: String
  biz: Biz
  bankAccount(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BankAccount!]
  tags: String
}

type BankAccount {
  bankAccountId: ID
  bizId: String
  bankAccountNo: String
  bankAccountName: String
  bankAccountTypeId: String
  bankId: String
  branchName: String
  status: String
  bankAccountType: BankAccountType
  bank: Bank
  biz: Biz
  tags: String
}

type Bank {
  bankId: ID
  bizId: String
  bankNo: String
  bankName: String
  biz: Biz
  chequeDisbursed(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeDisbursed!]
  chequeReceived(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeReceived!]
  bankAccount(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BankAccount!]
  tags: String
}

type ChequeDisbursed {
  chequeDisbursedId: ID
  bizId: String
  chequeNo: String
  chequeDate: Date
  chequeAmt: Float
  chequeTypeId: String
  bankId: String
  docPaymentItemId: Float
  payeeName: String
  note: String
  status: String
  custId: String
  suppId: String
  bank: Bank
  chequeType: ChequeType
  cust: Cust
  biz: Biz
  supp: Supp
  tags: String
}

type PosDevice {
  posDeviceId: ID
  bizId: String
  branchId: String
  posDeviceNo: String
  posDeviceName: String
  brand: String
  model: String
  sn: String
  posType: String
  biz: Biz
  branch: Branch
  docPos(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPos!]
  tags: String
}

type DocPos {
  docPosId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  custId: String
  subtotalAmt: Float
  discAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  posDeviceId: String
  wfStatus: String
  biz: Biz
  cust: Cust
  posDevice: PosDevice
  branch: Branch
  wh: Wh
  rowDesc: String
  tags: String
}

type DocCrj {
  docCrjId: ID
  bizId: String
  docNo: String
  docDate: Date
  custId: String
  payerName: String
  payeeName: String
  subtotalAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  branchId: String
  cust: Cust
  biz: Biz
  branch: Branch
  tags: String
}

type BankTransferInfo {
  fromBankId: String
  fromBank: Bank
  bankAccountId: String
  bankAccount: Bank
  transferDate: Date
  slipImgUrl: String
  transferAmt: Float
  note: String
}

type PaymentGateway {
  paymentGatewayId: ID
  bizId: String
  paymentGatewayNo: String
  paymentGatewayName: String
  biz: Biz
  tags: String
}

type PaymentGatewayInfo {
  paymentGatewayId: String
  paymentGateway: PaymentGateway
  paymentDate: Date
  slipImgUrl: String
  paidAmt: Float
  note: String
}

type CardType {
  cardTypeId: ID
  cardTypeNo: String
  cardTypeName: String
  tags: String
}

type CreditCardInfo {
  cardTypeId: String
  cardType: CardType
  cardNo: String
  cardHolderName: String
  slipNo: String
  paidAmt: Float
  note: String
}

type ChequeInfo {
  chequeNo: String
  chequeDate: Date
  chequeAmt: Float
  chequeTypeId: String
  chequeType: ChequeType
  payerName: String
  bankId: String
  bank: Bank
  bankBranch: String
  note: String
}

type PaymentChannel {
  paymentChannelId: ID
  paymentChannelNo: String
  paymentChannelName: String
  channelType: String
  docReceipt(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocReceipt!]
  tags: String
}

type DocReceipt {
  docReceiptId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  custId: String
  paymentChannelId: String
  refSrc: String
  refId: String
  addr: AddrInfo
  bankTransfer: [BankTransferInfo!]
  paymentGateway: [PaymentGatewayInfo!]
  creditCard: [CreditCardInfo!]
  cheque: [ChequeInfo!]
  status: String
  cashAmt: Float
  subtotalAmt: Float
  taxRate: Float
  taxAmt: Float
  discRate: Float
  discAmt: Float
  totalAmt: Float
  totalReceiptAmt: Float
  cust: Cust
  biz: Biz
  branch: Branch
  paymentChannel: PaymentChannel
  rowDesc: String
  tags: String
}

type DocDso {
  docDsoId: ID
  bizId: String
  docNo: String
  docDate: Date
  dueDate: Date
  suppId: String
  billtoAddr: AddrInfo
  custId: String
  shiptoAddr: AddrInfo
  subtotalAmt: Float
  discAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  wfStatus: String
  branchId: String
  biz: Biz
  supp: Supp
  cust: Cust
  branch: Branch
  rowDesc: String
  tags: String
}

type Neighbourhood {
  neighbourhoodId: ID
  bizId: String
  branchId: String
  neighbourhoodNo: String
  neighbourhoodName: String
  whAisleId: String
  whId: String
  whAisle: WhAisle
  wh: Wh
  biz: Biz
  branch: Branch
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  tags: String
}

type WhShelf {
  whShelfId: ID
  bizId: String
  branchId: String
  whShelfNo: String
  whShelfName: String
  rackShelfNo: String
  whRackId: String
  binQty: Float
  binPrefix: String
  whStorageRestrictionId: String
  whId: String
  whZoneId: String
  whAisleId: String
  whRack: WhRack
  biz: Biz
  whStorageRestriction: WhStorageRestriction
  wh: Wh
  whZone: WhZone
  branch: Branch
  whAisle: WhAisle
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  rpnPlanByRpnShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type PdHu {
  pdHuId: ID
  bizId: String
  branchId: String
  whId: String
  whHuId: String
  pdId: String
  huQty: Float
  pdUomId: String
  cnvFactor: Float
  ohQty: Float
  allocatedQty: Float
  pdLotId: String
  pdWhId: String
  pdStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  whStorageId: String
  parentId: String
  refHuNo: String
  refPdNo: String
  refPdName: String
  refLotNo: String
  refStorageNo: String
  biz: Biz
  whHu: WhHu
  pd: Pd
  pdLot: PdLot
  pdWh: PdWh
  pdStorage: PdStorage
  pdUom: PdUom
  whZone: WhZone
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  whStorage: WhStorage
  parent: PdHu
  branch: Branch
  wh: Wh
  pdHuByParent(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  tags: String
}

type WhAisle {
  whAisleId: ID
  bizId: String
  branchId: String
  whAisleNo: String
  whAisleName: String
  whId: String
  whZoneId: String
  whRackQty: Float
  whRackPrefix: String
  whShelfPerWhRackQty: Float
  whStorageRestrictionId: String
  wh: Wh
  whZone: WhZone
  biz: Biz
  whStorageRestriction: WhStorageRestriction
  branch: Branch
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  whRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  neighbourhood(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Neighbourhood!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  rpnPlanByRpnAisle(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type WhRack {
  whRackId: ID
  bizId: String
  branchId: String
  whRackNo: String
  whRackName: String
  whAisleId: String
  whId: String
  whShelfQty: Float
  whShelfPrefix: String
  binPerWhShelfQty: Float
  whStorageRestrictionId: String
  whZoneId: String
  whAisle: WhAisle
  wh: Wh
  biz: Biz
  whStorageRestriction: WhStorageRestriction
  whZone: WhZone
  branch: Branch
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  rpnPlanByRpnRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type SalesChannel {
  salesChannelId: ID
  bizId: String
  salesChannelNo: String
  salesChannelName: String
  biz: Biz
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type PdOresvStorageInfo {
  whStorageId: Float
  allocatedQty: Float
}

type PdOresvItemInfo {
  itemId: String
  pdId: String
  refDocType: String
  refDocId: String
  refDocNo: String
  refPartnerName: String
  refItemId: String
  refOrderedQty: Float
  qtyToResv: Float
  resvWhId: String
  resvZoneId: String
  resvAisleId: String
  resvRackId: String
  resvShelfId: String
  resvStorageId: String
  resvStorage: [PdOresvStorageInfo!]
  status: String
}

type DocOresv {
  docResvId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  resvTypeId: String
  refDocType: String
  refDocId: String
  refDocNo: String
  refPartnerName: String
  inEffective: Date
  outEffective: Date
  status: String
  items: [PdOresvItemInfo!]
  biz: Biz
  branch: Branch
  wh: Wh
  resvType: ResvType
  tags: String
}

type ResvType {
  resvTypeId: ID
  bizId: String
  resvTypeNo: String
  resvTypeName: String
  biz: Biz
  docOresv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocOresv!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type PdResv {
  pdResvId: ID
  bizId: String
  branchId: String
  whId: String
  salesChannelId: String
  pdId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  whStorageId: String
  whHuId: String
  whSuId: String
  custId: String
  docSoId: String
  itemId: Float
  resvQty: Float
  resvTypeId: String
  biz: Biz
  branch: Branch
  wh: Wh
  pd: Pd
  whZone: WhZone
  whRack: WhRack
  whAisle: WhAisle
  whShelf: WhShelf
  whStorage: WhStorage
  whHu: WhHu
  whSu: WhSu
  salesChannel: SalesChannel
  cust: Cust
  docSo: DocSo
  resvType: ResvType
  rowCode: String
  rowDesc: String
  tags: String
}

type Cust {
  custId: ID
  bizId: String
  custNo: String
  custName: String
  addr: AddrInfo
  contact: ContactInfo
  custGroupId: String
  discGroupId: String
  logoUrl: String
  lotNoPart: String
  snNoPart: String
  biz: Biz
  custGroup: CustGroup
  discGroup: DiscGroup
  cpd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cpd!]
  docAriv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocAriv!]
  chequeDisbursed(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeDisbursed!]
  chequeReceived(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeReceived!]
  docShip(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocShip!]
  docPos(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPos!]
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  docCrj(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocCrj!]
  docReceipt(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocReceipt!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  docDso(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocDso!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type DeliveryMethod {
  deliveryMethodId: ID
  bizId: String
  deliveryMethodNo: String
  deliveryMethodName: String
  biz: Biz
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  tags: String
}

type RentalType {
  rentalTypeId: ID
  bizId: String
  rentalTypeNo: String
  rentalTypeName: String
  biz: Biz
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  tags: String
}

type PaymentCondition {
  paymentConditionId: ID
  bizId: String
  paymentConditionNo: String
  paymentConditionName: String
  biz: Biz
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  tags: String
}

type DocArr {
  docArrId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  docArcId: String
  stotalRtp: Float
  taxRate: Float
  taxAmt: Float
  gtotalRtp: Float
  gtotalGrtAmt: Float
  lostTotalAmt: Float
  damagedTotalAmt: Float
  status: String
  docArc: DocArc
  biz: Biz
  branch: Branch
  wh: Wh
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  rowDesc: String
  tags: String
}

type DocArrItem {
  docArrItemId: ID
  bizId: String
  docArrId: String
  assetId: String
  rentalPeriod: Float
  periodId: String
  rentedQty: Float
  rtp: Float
  totalRtp: Float
  grtAmt: Float
  totalGrtAmt: Float
  schdrd: Date
  returnedDate: Date
  returnedQty: Float
  dayDelayed: Float
  note: String
  status: String
  assetWhStorageId: String
  branchId: String
  docArcItemId: String
  lostQty: Float
  pcfLost: Float
  lostTotalAmt: Float
  damagedQty: Float
  pcfDamaged: Float
  damagedTotalAmt: Float
  pcfDelayed: Float
  delayedTotalAmt: Float
  uomId: String
  docArr: DocArr
  biz: Biz
  asset: Asset
  period: Period
  assetWhStorage: AssetStorage
  branch: Branch
  uom: Uom
  docArcItem: DocArcItem
  rowCode: String
  rowDesc: String
  tags: String
}

type AssetStorage {
  assetStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  assetId: String
  ohQty: Float
  asset: Asset
  whStorage: WhStorage
  biz: Biz
  branch: Branch
  wh: Wh
  docArcItemByAssetWhStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  docArrItemByAssetWhStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  rowCode: String
  rowDesc: String
  tags: String
}

type DocArcItem {
  docArcItemId: ID
  bizId: String
  branchId: String
  docArcId: String
  assetId: String
  rentalPeriod: Float
  periodId: String
  rentedQty: Float
  rtp: Float
  totalRtp: Float
  grtAmt: Float
  totalGrtAmt: Float
  shippedQty: Float
  assetWhStorageId: String
  schdrd: Date
  returnedDate: Date
  returnedQty: Float
  dayDelayed: Float
  pcfDelayed: Float
  delayedTotalAmt: Float
  lostQty: Float
  pcfLost: Float
  lostTotalAmt: Float
  damagedQty: Float
  pcfDamaged: Float
  damagedTotalAmt: Float
  note: String
  status: String
  uomId: String
  docArc: DocArc
  period: Period
  biz: Biz
  asset: Asset
  assetWhStorage: AssetStorage
  branch: Branch
  uom: Uom
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  rowCode: String
  rowDesc: String
  tags: String
}

type DocArc {
  docArcId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  custId: String
  rentalTypeId: String
  periodId: String
  rentalPeriod: Float
  deliveryMethodId: String
  paymentConditionId: String
  renterAddr: AddrInfo
  workSite: AddrInfo
  attachedDoc: AttachedDocInfo
  contact: ContactInfo
  rentalPurpose: String
  startDate: Date
  endDate: Date
  stotalRtp: Float
  discRate: Float
  discAmt: Float
  stotalAfd: Float
  taxRate: Float
  taxAmt: Float
  gtotalRtp: Float
  gtotalGrtAmt: Float
  note: String
  assessedGrtAmt: Float
  receiveGrtAmt: Float
  deliveryCharges: Float
  applyVat: Boolean
  excludeVat: Boolean
  status: String
  cust: Cust
  period: Period
  biz: Biz
  deliveryMethod: DeliveryMethod
  rentalType: RentalType
  paymentCondition: PaymentCondition
  branch: Branch
  wh: Wh
  docArcItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  docArr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArr!]
  rowDesc: String
  tags: String
}

type Period {
  periodId: ID
  bizId: String
  periodNo: String
  periodName: String
  biz: Biz
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  docArcItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  rtp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Rtp!]
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  tags: String
}

type Rtp {
  rtpId: ID
  bizId: String
  assetId: String
  periodId: String
  priceIncludeTax: Boolean
  rtp: Float
  grtAmt: Float
  price1: Float
  price2: Float
  price3: Float
  price4: Float
  price5: Float
  remark: String
  cascadedRtp: [AssetCascadePriceInfo!]
  period: Period
  biz: Biz
  asset: Asset
  rowCode: String
  rowDesc: String
  tags: String
}

type DocNar {
  docNarId: ID
  bizId: String
  docNo: String
  docDate: Date
  docName: String
  status: String
  branchId: String
  wfStatus: String
  branch: Branch
  biz: Biz
  docNarItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNarItem!]
  tags: String
}

type DocNarItem {
  docNarItemId: ID
  bizId: String
  docNarId: String
  assetId: String
  receivedQty: Float
  branchId: String
  status: String
  wfStatus: String
  uomId: String
  asset: Asset
  docNar: DocNar
  biz: Biz
  branch: Branch
  uom: Uom
  rowCode: String
  rowDesc: String
  tags: String
}

type AssetBranch {
  assetBranchId: ID
  bizId: String
  branchId: String
  assetId: String
  ohQty: Float
  orQty: Float
  asset: Asset
  branch: Branch
  biz: Biz
  rowCode: String
  rowDesc: String
  tags: String
}

type AssetWh {
  assetWhId: ID
  bizId: String
  branchId: String
  assetId: String
  whId: String
  ohQty: Float
  biz: Biz
  branch: Branch
  asset: Asset
  wh: Wh
  rowCode: String
  rowDesc: String
  tags: String
}

type Asset {
  assetId: ID
  bizId: String
  assetNo: String
  assetName: String
  ohQty: Float
  orQty: Float
  pcfLost: Float
  pcfDamaged: Float
  status: String
  pdCateId: String
  pdSubcateId: String
  brandId: String
  colorId: String
  remark: String
  defaultImgUrl: String
  defaultWhId: String
  defaultWhStorageId: String
  pdId: String
  uomId: String
  uom: Uom
  biz: Biz
  pdCate: PdCate
  pdSubcate: PdSubcate
  brand: Brand
  color: Color
  defaultWhStorage: WhStorage
  defaultWh: Wh
  pd: Pd
  rtp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Rtp!]
  docArcItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  assetStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetStorage!]
  docNarItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNarItem!]
  assetBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetBranch!]
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  assetWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetWh!]
  tags: String
}

type PdSubcate {
  pdSubcateId: ID
  bizId: String
  pdSubcateNo: String
  pdSubcateName: String
  pdCateId: String
  pdCate: PdCate
  biz: Biz
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  tags: String
}

type PdCate {
  pdCateId: ID
  bizId: String
  pdCateNo: String
  pdCateName: String
  pdGroupId: String
  biz: Biz
  pdGroup: PdGroup
  pdSubcate(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSubcate!]
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  tags: String
}

type CateCountInfo {
  pdCateId: String
  pdCate: PdCate
  cateName: String
  numOfItem: Float
}

type Dsp {
  dspId: ID
  dspNo: String
  dspName: String
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  tags: String
}

type ShippingCarrier {
  shippingCarrierId: ID
  carrierNo: String
  carrierName: String
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  tags: String
}

type DocSo {
  docSoId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  dueDate: Date
  custId: String
  billtoAddr: AddrInfo
  shiptoAddr: AddrInfo
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  salesChannelId: String
  wfStatus: String
  whId: String
  allowPartialShipment: Boolean
  allowPartialItemShipment: Boolean
  allocated: Boolean
  allocatedStatus: String
  priority: String
  dspId: String
  deliverable: Boolean
  items: [PdSalesInfo!]
  shippingCarrierId: String
  numOfItem: Float
  numOfCate: Float
  cateCount: [CateCountInfo!]
  paymentMethodId: String
  paymentStatus: String
  partnerName: String
  biz: Biz
  cust: Cust
  branch: Branch
  salesChannel: SalesChannel
  wh: Wh
  dsp: Dsp
  shippingCarrier: ShippingCarrier
  paymentMethod: PaymentMethod
  docShip(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocShip!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type PaymentMethod {
  paymentMethodId: ID
  bizId: String
  paymentMethodNo: String
  paymentMethodName: String
  applyImmediately: Boolean
  biz: Biz
  whStorageRestriction(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorageRestriction!]
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  tags: String
}

type WhStorageType {
  whStorageTypeId: ID
  bizId: String
  storageTypeNo: String
  storageTypeName: String
  movable: Boolean
  whStorageRestrictionId: String
  dimension: DimensionInfo
  biz: Biz
  whStorageRestriction: WhStorageRestriction
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  tags: String
}

type WhStorageRestriction {
  whStorageRestrictionId: ID
  restrictionNo: String
  restrictionName: String
  allowIssue: Boolean
  allowReceive: Boolean
  allowPick: Boolean
  allowTransfer: Boolean
  bizId: String
  paymentMethodId: String
  biz: Biz
  paymentMethod: PaymentMethod
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  whRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  whZone(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhZone!]
  whAisle(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhAisle!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  whStorageType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorageType!]
  tags: String
}

type WhZone {
  whZoneId: ID
  bizId: String
  branchId: String
  whZoneNo: String
  whZoneName: String
  whId: String
  whAisleQty: Float
  whAislePrefix: String
  whRackPerWhAisleQty: Float
  whShelfPerWhRackQty: Float
  binPerSelfQty: Float
  whStorageRestrictionId: String
  wh: Wh
  biz: Biz
  whStorageRestriction: WhStorageRestriction
  branch: Branch
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  whAisle(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhAisle!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  whRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  rpnPlanByRpnZone(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type TaskPdOrdInfo {
  finalSuId: String
  transportSuId: String
  qtyToPick: Float
  pickedQty: Float
  docId: String
  itemId: String
  itemIndex: Float
  docNo: String
  partnerName: String
}

type TaskPdInfo {
  pdId: String
  qtyToPick: Float
  pickedQty: Float
  transportSuId: String
  fromZoneId: String
  fromAisleId: String
  fromRackId: String
  fromShelfId: String
  fromStorageId: String
  status: String
  ord: [TaskPdOrdInfo!]
}

type TaskRouteInfo {
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
}

type TaskStorageInfo {
  pdId: String
  pdStorageId: String
  qtyToPick: Float
  pickedQty: Float
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  pdNo: String
  pdName: String
  zoneNo: String
  aisleNo: String
  rackNo: String
  shelfNo: String
  storageNo: String
}

type PickOrdItemInfo {
  pdId: String
  pd: Pd
  orderedQty: Float
  pdUomId: String
  pdUom: PdUom
  qtyToPick: Float
  pickedQty: Float
  status: String
  itemIndex: Float
  itemId: String
  fromWhId: String
  fromZoneId: String
  fromAisleId: String
  fromRackId: String
  fromShelfId: String
  fromStorageId: String
  fromLotId: String
}

type PickOrdInfo {
  docId: String
  docNo: String
  docDate: Date
  docType: String
  dueDate: Date
  partnerName: String
  numOfItem: Float
  finalSuId: String
  items: [PickOrdItemInfo!]
  status: String
}

type PickPdItemInfo {
  docId: String
  docNo: String
  partnerName: String
  qtyToPick: Float
  pickedQty: Float
  itemId: String
  itemIndex: Float
  numOfItem: Float
}

type InventoryExceptionInfo {
  exceptionCode: String
  exceptionMessage: String
  exceptionQty: Float
  exceptionResolved: Boolean
}

type PickPdInfo {
  pdId: String
  pd: Pd
  qtyToPick: Float
  pickedQty: Float
  srcCount: Float
  srcDoc: [PickPdItemInfo!]
  exception: InventoryExceptionInfo
  fromZoneId: String
  fromAisleId: String
  fromRackId: String
  fromShelfId: String
  fromStorageId: String
  fromWhId: String
  rpnType: String
  maxQty: Float
  ropQty: Float
  qtyPerKanban: Float
  numOfKanban: Float
  status: String
}

type PffmOrdInfo {
  docId: String
  docNo: String
  docDate: Date
  docType: String
  dueDate: Date
  partnerName: String
  numOfItem: Float
}

type PffmPdOrdInfo {
  docId: String
  docNo: String
  partnerName: String
  itemIndex: Float
  itemId: String
  orderedQty: Float
  priority: String
  orderValue: Float
  paymentMethodId: String
  paymentStatus: String
  numOfItem: Float
}

type PffmPdInfo {
  pdId: String
  orderedQty: Float
  srcCount: Float
  srcDoc: [PffmPdOrdInfo!]
  exception: InventoryExceptionInfo
}

type DocPffm {
  docPffmId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  status: String
  order: [PffmOrdInfo!]
  pd: [PffmPdInfo!]
  biz: Biz
  branch: Branch
  docPick(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPick!]
  rowDesc: String
  tags: String
}

type DocPick {
  docPickId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  pickingType: String
  whControllerId: String
  status: String
  docPffmId: String
  ord: [PickOrdInfo!]
  pd: [PickPdInfo!]
  biz: Biz
  branch: Branch
  wh: Wh
  whController: WhController
  docPffm: DocPffm
  docTask(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  docPackSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPackSu!]
  rowDesc: String
  tags: String
}

type WorkShift {
  workShiftId: ID
  bizId: String
  shiftNo: Float
  shiftName: Float
  startTime: Date
  endTime: Date
  biz: Biz
  whStaff(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStaff!]
  tags: String
}

type WhStaff {
  whStaffId: ID
  bizId: String
  branchId: String
  whId: String
  staffNo: String
  staffName: String
  workShiftId: String
  biz: Biz
  wh: Wh
  workShift: WorkShift
  branch: Branch
  docTask(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  tags: String
}

type DocTask {
  docTaskId: ID
  bizId: String
  branchId: String
  whId: String
  docPickId: String
  docNo: String
  docDate: Date
  refDocId: String
  refDocNo: String
  whStaffId: String
  finalSuId: String
  transportSuId: String
  whControllerId: String
  pickingType: String
  routeLevel: String
  status: String
  pd: [TaskPdInfo!]
  route: [TaskRouteInfo!]
  storage: [TaskStorageInfo!]
  docPick: DocPick
  whStaff: WhStaff
  transportSu: WhSu
  biz: Biz
  branch: Branch
  wh: Wh
  whController: WhController
  finalSu: WhSu
  docPackSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPackSu!]
  rowDesc: String
  tags: String
}

type DocPackSu {
  docPackSuId: ID
  bizId: String
  branchId: String
  docPickId: String
  docPickOrdId: Float
  whSuId: String
  docTaskId: String
  refSuNo: String
  refDocNo: String
  whSu: WhSu
  docTask: DocTask
  docPick: DocPick
  biz: Biz
  branch: Branch
  rowDesc: String
  tags: String
}

type WhSu {
  whSuId: ID
  bizId: String
  branchId: String
  suNo: String
  status: String
  suTypeId: String
  whId: String
  whStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  parentSuId: String
  inPicking: Boolean
  multipleOrder: Boolean
  biz: Biz
  wh: Wh
  whStorage: WhStorage
  suType: SuType
  whZone: WhZone
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  parentSu: WhSu
  branch: Branch
  containSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  docPackSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPackSu!]
  docTaskByTransportSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  rowDesc: String
  tags: String
}

type PdSu {
  pdSuId: ID
  bizId: String
  branchId: String
  whId: String
  whSuId: String
  pdId: String
  suQty: Float
  pdUomId: String
  cnvFactor: Float
  ohQty: Float
  allocatedQty: Float
  pdLotId: String
  pdWhId: String
  pdStorageId: String
  whStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  parentId: String
  refSuNo: String
  refPdNo: String
  refPdName: String
  refLotNo: String
  refStorageNo: String
  whSu: WhSu
  biz: Biz
  pd: Pd
  pdUom: PdUom
  pdLot: PdLot
  pdWh: PdWh
  pdStorage: PdStorage
  whStorage: WhStorage
  whZone: WhZone
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  branch: Branch
  wh: Wh
  parent: PdSu
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  pdSuByParent(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  tags: String
}

type InvTrn {
  invTrnId: ID
  bizId: String
  branchId: String
  whId: String
  pdId: String
  pdStorageId: String
  pdLotId: String
  trnDate: Date
  trnSrc: String
  trnType: String
  refDocId: String
  refItemId: String
  qty: Float
  pdUomId: String
  cnvFactor: Float
  prevQty: Float
  trnQty: Float
  ohQty: Float
  uomId: String
  sn: String
  status: String
  refPdNo: String
  refPdName: String
  refSuNo: String
  refLotNo: String
  refStorageNo: String
  redDocNo: String
  whStorageId: String
  pdBranchId: String
  pdWhId: String
  pdLotStorageId: String
  pdSuId: String
  biz: Biz
  branch: Branch
  wh: Wh
  whStorage: WhStorage
  pd: Pd
  pdLot: PdLot
  pdLotStorage: PdLotStorage
  pdStorage: PdStorage
  pdWh: PdWh
  uom: Uom
  pdBranch: PdBranch
  pdSu: PdSu
  pdUom: PdUom
  tags: String
}

type PdBranch {
  pdBranchId: ID
  bizId: String
  branchId: String
  pdId: String
  ohQty: Float
  onOrderQty: Float
  onTransitQty: Float
  allocatedQty: Float
  defaultWhId: Float
  defaultPdWhId: Float
  status: String
  allowNegativeQty: Boolean
  pdNo: String
  pdName: String
  pickFromAvailableStorage: Boolean
  ffmBranchId: String
  ffmWhId: String
  rpnPref: PdBranchRpnPrefInfo
  pd: Pd
  branch: Branch
  biz: Biz
  ffmBranch: Branch
  ffmWh: Wh
  pdWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdWh!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  tags: String
}

type PdWh {
  pdWhId: ID
  bizId: String
  branchId: String
  whId: String
  pdBranchId: String
  pdId: String
  ohQty: Float
  onOrderQty: Float
  inTransitOutQty: Float
  inTransitInQty: Float
  allocatedQty: Float
  ropQty: Float
  ropSwitch: Boolean
  minQty: Float
  maxQty: Float
  status: String
  allowNegativeQty: Boolean
  refPdNo: String
  refPdName: String
  refWhNo: String
  refWhName: String
  whPref: WhPrefInfo
  rpnPref: WhRpnPrefInfo
  biz: Biz
  branch: Branch
  wh: Wh
  pd: Pd
  pdBranch: PdBranch
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  tags: String
}

type PdStorageBal {
  pdStorageBalId: ID
  bizId: String
  pdStorageId: String
  pdId: String
  beginingOhQty: Float
  endingOhQty: Float
  pd: Pd
  pdStorage: PdStorage
  biz: Biz
  rowCode: String
  rowDesc: String
  tags: String
}

type PdStorage {
  pdStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  pdId: String
  pdWhId: String
  pdBranchId: String
  ohQty: Float
  allocatedQty: Float
  allowNegativeQty: Boolean
  status: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  whStorageRestrictionId: String
  refPdNo: String
  refPdName: String
  refStorageNo: String
  refStorageName: String
  pickable: Boolean
  qtyToPick: Float
  rpnPref: PdStorageRpnPrefInfo
  allowOnlySu: String
  subQty: Float
  pd: Pd
  whStorage: WhStorage
  biz: Biz
  branch: Branch
  wh: Wh
  pdWh: PdWh
  whZone: WhZone
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  whStorageRestriction: WhStorageRestriction
  pdBranch: PdBranch
  pdStorageBal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorageBal!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  tags: String
}

type PdLotStorage {
  pdLotStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  pdId: String
  pdLotId: String
  pdStorageId: String
  ohQty: Float
  allocatedQty: Float
  suspended: Boolean
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  allowNegativeQty: Boolean
  refLotNo: String
  refPdNo: String
  refPdName: String
  refStorageNo: String
  biz: Biz
  branch: Branch
  wh: Wh
  whStorage: WhStorage
  pdLot: PdLot
  pdStorage: PdStorage
  pd: Pd
  whZone: WhZone
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  tags: String
}

type PdLot {
  pdLotId: ID
  bizId: String
  pdId: String
  lotNo: String
  ohQty: Float
  allocatedQty: Float
  mfgDate: Date
  expireDate: Date
  suppLotNo: String
  status: String
  suspended: Boolean
  allowNegativeQty: Boolean
  pd: Pd
  biz: Biz
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  rowDesc: String
  tags: String
}

type SuReceiveInfo {
  suNo: String
  receivedQty: Float
  uomId: String
  uom: PdUom
  lotId: String
  lot: PdLot
  whStorageId: String
  whStorage: WhStorage
  pdSuId: String
  cnvFactor: Float
}

type SuReceiveActionInfo {
  suTypeId: String
  suType: SuType
  qtyPerSu: Float
  numOfSu: Float
  suList: [SuReceiveInfo!]
}

type PdReceiveInfo {
  itemId: String
  pdId: String
  pd: Pd
  useLot: Boolean
  applySu: Boolean
  receivedQty: Float
  pdUomId: String
  pdUom: PdUom
  cnvFactor: Float
  pdBranchId: String
  whStorageId: String
  whStorage: WhStorage
  pdStorageId: String
  pdLotId: String
  pdLot: PdLot
  pdLotStorageId: String
  status: String
  refDocId: String
  refDocItemId: String
  suReceive: SuReceiveActionInfo
}

type ShipToAddrInfo {
  shipToType: String
  shipToCustId: String
  shipToCust: Cust
  shipToBranchId: String
  shipToBranch: Branch
  shipToWhId: String
  shipToWh: Wh
  addr1: String
  addr2: String
  countryId: String
  country: Country
  provinceId: String
  province: Province
  districtsId: String
  districts: Districts
  townId: String
  town: Town
  zip: String
}

type PdOrderHuInfo {
  huTypeId: Float
  huType: HuType
  huUomId: Float
  huUom: PdUom
  qtyPerSu: Float
  numOfSu: Float
  cnvFactor: Float
}

type PdOrderSuInfo {
  suTypeId: String
  suType: SuType
  suUomId: String
  suUom: PdUom
  qtyPerSu: Float
  numOfSu: Float
  cnvFactor: Float
}

type PoReceiveInfo {
  qtyToReceive: Float
  aStorageId: String
  aStorage: WhStorage
  aQty: Float
  bStorageId: String
  bStorage: WhStorage
  bQty: Float
  cStorageId: String
  cStorage: WhStorage
  cQty: Float
}

type PoInvoiceInfo {
  qtyToInvoice: Float
  unitPrice: Float
}

type PdPurchaseInfo {
  itemId: String
  pdId: String
  pd: Pd
  spdId: String
  spd: Spd
  orderedQty: Float
  pdUomId: String
  pdUom: PdUom
  unitPrice: Float
  totalPrice: Float
  applySuOrHu: String
  orderInHu: PdOrderHuInfo
  orderInSu: PdOrderSuInfo
  deliveredQty: Float
  invoicedQty: Float
  returnedQty: Float
  status: String
  allowPartialShipment: Boolean
  baseUnitOrderedQty: Float
  cnvFactor: Float
  toReceive: PoReceiveInfo
  toInvoice: PoInvoiceInfo
  backlogQty: Float!
}

type DocPo {
  docPoId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  dueDate: Date
  suppId: String
  addr: AddrInfo
  shiptoAddr: ShipToAddrInfo
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  wfStatus: String
  refSuppName: String
  items: [PdPurchaseInfo!]
  biz: Biz
  branch: Branch
  supp: Supp
  wh: Wh
  docGrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGrn!]
  tags: String
}

type DocGrn {
  docGrnId: ID
  bizId: String
  branchId: String
  docNo: String
  docSuffix: String
  docDate: Date
  whId: String
  suppId: String
  refName: String
  refNo: String
  status: String
  docPoId: String
  wfStatus: String
  items: [PdReceiveInfo!]
  biz: Biz
  docPo: DocPo
  branch: Branch
  supp: Supp
  wh: Wh
  tags: String
}

type DocApiv {
  docApivId: ID
  bizId: String
  docNo: String
  docDate: Date
  suppId: String
  suppName: String
  billtoAddr: AddrInfo
  shiptoAddr: AddrInfo
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  branchId: String
  wfStatus: String
  biz: Biz
  branch: Branch
  supp: Supp
  tags: String
}

type DocCdj {
  docCdjId: ID
  bizId: String
  docNo: String
  docDate: Date
  suppId: String
  payeeName: String
  payerName: String
  subtotalAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  branchId: String
  supp: Supp
  biz: Biz
  branch: Branch
  tags: String
}

type Supp {
  suppId: ID
  bizId: String
  suppNo: String
  suppName: String
  addr: AddrInfo
  contact: ContactInfo
  suppGroupId: String
  logoUrl: String
  biz: Biz
  suppGroup: SuppGroup
  spd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Spd!]
  docGrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGrn!]
  docApiv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocApiv!]
  chequeReceived(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeReceived!]
  chequeDisbursed(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeDisbursed!]
  docPo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPo!]
  docCdj(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocCdj!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  docDso(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocDso!]
  pdByPreferredSupp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  tags: String
}

type WhEqm {
  whEqmId: ID
  bizId: String
  branchId: String
  whId: String
  eqmNo: String
  eqmName: String
  wh: Wh
  biz: Biz
  branch: Branch
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  tags: String
}

type WhStorage {
  whStorageId: ID
  bizId: String
  branchId: String
  whId: String
  storageNo: String
  storageName: String
  suppId: String
  custId: String
  whStorageTypeId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  neighbourhoodId: String
  occupiedType: String
  occupiedDocId: String
  occupiedDocNo: String
  whEqmId: String
  whStorageRestrictionId: String
  pickable: Boolean
  biz: Biz
  branch: Branch
  wh: Wh
  supp: Supp
  cust: Cust
  whStorageType: WhStorageType
  whZone: WhZone
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  neighbourhood: Neighbourhood
  whEqm: WhEqm
  whStorageRestriction: WhStorageRestriction
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  assetStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetStorage!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  cpdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CpdStorage!]
  spdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SpdStorage!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  assetByDefaultWhStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  whByReceivingWhStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Wh!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type SuIssueInfo {
  pdSuId: String
  pdSu: PdSu
  issuedQty: Float
  uomId: String
  uom: Uom
  lotId: String
  lot: PdLot
  cnvFactor: Float
}

type SuIssueActionInfo {
  suTypeId: String
  suType: SuType
  qtyPerSu: Float
  numOfSu: Float
  suList: [SuIssueInfo!]
}

type PdIssueInfo {
  itemId: String
  pdId: String
  pd: Pd
  useLot: Boolean
  applySu: Boolean
  pdStorageId: String
  pdStorage: PdStorage
  pdSuId: String
  pdSu: PdSu
  pdLotStorageId: String
  pdLotStorage: PdLotStorage
  issuedQty: Float
  pdUomId: String
  pdUom: PdUom
  cnvFactor: Float
  status: String
  refDocId: String
  refDocItemId: String
  suIssue: SuIssueActionInfo
}

type DocGin {
  docGinId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  whId: String
  refNo: String
  status: String
  wfStatus: String
  items: [PdIssueInfo!]
  biz: Biz
  branch: Branch
  wh: Wh
  rowDesc: String
  tags: String
}

type PdAdjustInfo {
  itemId: String
  pdId: String
  pd: Pd
  useLot: Boolean
  appySu: Boolean
  pdStorageId: String
  pdStorage: PdStorage
  pdLotStorageId: String
  pdLotStorage: PdLotStorage
  pdSuId: String
  pdSu: PdHu
  adjustedQty: Float
  pdUomId: String
  pdUom: PdUom
  status: String
  refDocId: String
  refDocItemId: String
}

type DocIva {
  docIvaId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  whId: String
  refNo: String
  status: String
  wfStatus: String
  items: [PdAdjustInfo!]
  branch: Branch
  wh: Wh
  biz: Biz
  rowDesc: String
  tags: String
}

type PdTransferInfo {
  seq: Float
  pdId: String
  pd: Pd
  qtyToTransfer: Float
  transferedQty: Float
  dstStorageId: String
  dstStorage: WhStorage
  rpnZoneId: String
  rpnZone: WhZone
  rpnAisleId: String
  rpnAisle: WhAisle
  rpnRackId: String
  rpnRack: WhRack
  rpnShelfId: String
  rpnShelf: WhShelf
  rpnStorageId: String
  rpnStorage: WhStorage
}

type DocTfo {
  docTfoId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  transferType: String
  dstBranchId: String
  dstWhId: String
  items: [PdTransferInfo!]
  status: String
  biz: Biz
  branch: Branch
  wh: Wh
  dstWh: Wh
  dstBranch: Branch
  rowDesc: String
  tags: String
}

type DocTfr {
  docTfrId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  transferType: String
  dstBranchId: String
  dstWhId: String
  items: [PdTransferInfo!]
  status: String
  biz: Biz
  branch: Branch
  wh: Wh
  dstBranch: Branch
  dstWh: Wh
  rowDesc: String
  tags: String
}

type Wh {
  whId: ID
  bizId: String
  branchId: String
  whNo: String
  whName: String
  addr: AddrInfo
  contact: ContactInfo
  virtual: Boolean
  suspended: Boolean
  defaultWhStorageId: String
  receivingWhStorageId: String
  pickingWhStorageId: String
  packingWhStorageId: String
  shippingWhStorageId: String
  pickingControllerId: String
  rpnControllerId: String
  rpnBranchId: String
  rpnWhId: String
  branch: Branch
  biz: Biz
  receivingWhStorage: WhStorage
  pickingWhStorage: WhStorage
  packingWhStorage: WhStorage
  shippingWhStorage: WhStorage
  defaultWhStorage: WhStorage
  pickingController: WhController
  rpnController: WhController
  rpnBranch: Branch
  rpnWh: Wh
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  pdWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdWh!]
  assetStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetStorage!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  docGrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGrn!]
  docGin(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGin!]
  docIva(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocIva!]
  cpdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CpdStorage!]
  spdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SpdStorage!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  assetByDefaultWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  docShip(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocShip!]
  docPos(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPos!]
  assetWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetWh!]
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  docArr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArr!]
  docPo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPo!]
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  whZone(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhZone!]
  whAisle(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhAisle!]
  whRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  neighbourhood(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Neighbourhood!]
  whStaff(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStaff!]
  whEqm(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhEqm!]
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  docPick(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPick!]
  docTask(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  whByRpnWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Wh!]
  docTfo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTfo!]
  docTfr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTfr!]
  docOresv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocOresv!]
  branchByFfmWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Branch!]
  pdBranchByFfmWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdBranch!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  tags: String
}

type WhHu {
  whHuId: ID
  bizId: String
  branchId: String
  huNo: String
  status: String
  huTypeId: String
  whId: String
  whStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  parentHuId: String
  biz: Biz
  wh: Wh
  whStorage: WhStorage
  whZone: WhZone
  parentHu: WhHu
  huType: HuType
  whAisle: WhAisle
  whRack: WhRack
  whShelf: WhShelf
  branch: Branch
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  whHuByParentHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  rowDesc: String
  tags: String
}

type HuType {
  huTypeId: ID
  huTypeNo: String
  huTypeName: String
  bizId: String
  biz: Biz
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  pdHuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHuProfile!]
  tags: String
}

type PdHuProfile {
  pdHuProfileId: ID
  bizId: String
  pdId: String
  huTypeId: String
  pdUomId: String
  qtyPerHu: Float
  dimension: DimensionInfo
  strictStorageType: [StrictStorageTypeInfo!]
  secondaryUomId: String
  pd: Pd
  huType: HuType
  biz: Biz
  pdUom: PdUom
  secondaryUom: PdUom
  rowCode: String
  rowDesc: String
  tags: String
}

type PdUom {
  pdUomId: ID
  bizId: String
  pdId: String
  uomId: String
  pdUnitNo: String
  pdUnitName: String
  printUnit: String
  cnvFactor: Float
  packagingTypeId: String
  biz: Biz
  pd: Pd
  uom: Uom
  packagingType: PackagingType
  pdHuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHuProfile!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdSuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSuProfile!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  spd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Spd!]
  tags: String
}

type Uom {
  uomId: ID
  bizId: String
  uomNo: String
  uomName: String
  biz: Biz
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  pdUom(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdUom!]
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  docNarItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNarItem!]
  docArcItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  cpd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cpd!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  tags: String
}

type PdType {
  pdTypeId: ID
  bizId: String
  pdTypeNo: String
  pdTypeName: String
  biz: Biz
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  tags: String
}

type Subcate {
  subcateId: ID
  subcateNo: String
  subcateName: String
  cateId: String
  cate: Cate
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  tags: String
}

type Cate {
  cateId: ID
  cateNo: String
  cateName: String
  subcate(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Subcate!]
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  tags: String
}

type PdBal {
  pdBalId: ID
  bizId: String
  pdId: String
  beginingOhQty: Float
  endingOhQty: Float
  pd: Pd
  biz: Biz
  rowCode: String
  rowDesc: String
  tags: String
}

type PdSn {
  pdSnId: ID
  bizId: String
  pdId: String
  sn: String
  pd: Pd
  biz: Biz
  rowCode: String
  rowDesc: String
  tags: String
}

type PdCostStack {
  pdCostStackId: ID
  bizId: String
  pdId: String
  receivedDate: Date
  receivedQty: Float
  soldQty: Float
  unitCost: Float
  totalCost: Float
  completed: Boolean
  biz: Biz
  pd: Pd
  rowCode: String
  rowDesc: String
  tags: String
}

type Sdal {
  sdalId: ID
  bizId: String
  branchId: String
  pdId: String
  itemType: String
  dueDate: Date
  orderedQty: Float
  projectedQty: Float
  docType: String
  docId: String
  docNo: String
  itemIdx: Float
  itemId: String
  biz: Biz
  branch: Branch
  pd: Pd
  rowDesc: String
  tags: String
}

type Pd {
  pdId: ID
  bizId: String
  pdNo: String
  pdName: String
  ohQty: Float
  rop: Float
  pdTypeId: String
  pdGroupId: String
  pdCateId: String
  pdSubcateId: String
  priceGroupId: String
  cateId: String
  subcateId: String
  variantParentId: String
  allocatedQty: Float
  onOrderQty: Float
  variant: PdVariantInfo
  lotSn: PdLotSnInfo
  package: [PdPackageInfo!]
  bundle: [PdBundleInfo!]
  stdPrice: Float
  stdCost: Float
  noneStock: Boolean
  preferredSuppId: String
  useLot: Boolean
  useSn: Boolean
  allowNegativeQty: Boolean
  uomId: String
  biz: Biz
  uom: Uom
  pdType: PdType
  pdGroup: PdGroup
  pdCate: PdCate
  pdSubcate: PdSubcate
  priceGroup: PriceGroup
  cate: Cate
  subcate: Subcate
  variantParent: Pd
  preferredSupp: Supp
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  cpd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cpd!]
  pdUom(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdUom!]
  pdBal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdBal!]
  pdStorageBal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorageBal!]
  priceBookItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookItem!]
  spd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Spd!]
  pdBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdBranch!]
  pdWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdWh!]
  pdLot(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLot!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  pdSn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSn!]
  pdByVariantParent(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  pdCostStack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdCostStack!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  pdHuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHuProfile!]
  pdSuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSuProfile!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  sdal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Sdal!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  tags: String
}

type RpnPlan {
  rpnPlanId: ID
  bizId: String
  pdId: String
  branchId: String
  whId: String
  whStorageId: String
  rpnQty: Float
  rpnSrc: String
  rpnType: String
  dueDate: Date
  dueTime: Date
  suppId: String
  taskType: String
  status: String
  rpnBranchId: String
  rpnWhId: String
  rpnZoneId: String
  rpnAisleId: String
  rpnRackId: String
  rpnShelfId: String
  rpnStorageId: String
  refPdStorageId: String
  refPdWhId: String
  refPdBranchId: String
  whControllerId: String
  pd: Pd
  biz: Biz
  branch: Branch
  wh: Wh
  whStorage: WhStorage
  rpnBranch: Branch
  rpnWh: Wh
  rpnZone: WhZone
  rpnAisle: WhAisle
  rpnRack: WhRack
  rpnShelf: WhShelf
  rpnStorage: WhStorage
  supp: Supp
  whController: WhController
  rowDesc: String
  tags: String
}

type WhController {
  whControllerId: ID
  bizId: String
  whControllerNo: String
  whControllerName: String
  biz: Biz
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  whByPickingController(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Wh!]
  docPick(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPick!]
  docTask(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  tags: String
}

type BranchInventoryPreferenceInfo {
  applyWh: Boolean
  applySu: Boolean
  applyHu: Boolean
  pickFromAvailableStorage: Boolean
  pickingControllerId: String
  pickingController: WhController
  rpnControllerId: String
  rpnBranchId: String
  receivingWhId: String
  pickingWhId: String
}

type BranchSalesPreferenceInfo {
  Field0: Float
  Field1: Float
  Field2: Float
  Field3: Float
}

type BranchPurchasePreferenceInfo {
  Field0: Float
  Field1: Float
  Field2: Float
  Field3: Float
}

type PropUnitType {
  propUnitTypeId: ID
  bizId: String
  propUnitTypeNo: String
  propUnitTypeName: String
  biz: Biz
  propUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropUnit!]
  tags: String
}

type PropBill {
  propBillId: ID
  bizId: String
  branchId: String
  billNo: String
  billDate: Date
  multiUnitBill: Boolean
  propUnitId: String
  propUnit: PropUnit
  biz: Biz
  branch: Branch
  rowDesc: String
  tags: String
}

type PropUnit {
  propUnitId: ID
  bizId: String
  branchId: String
  propUnitNo: String
  propUnitName: String
  propTypeId: String
  propUnitTypeId: String
  propUnitType: PropUnitType
  propType: PropType
  biz: Biz
  branch: Branch
  propBill(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropBill!]
  tags: String
}

type PropType {
  propTypeId: ID
  bizId: String
  propTypeNo: String
  propTypeName: String
  biz: Biz
  propConfig(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropConfig!]
  propUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropUnit!]
  tags: String
}

type PropConfig {
  propConfigId: ID
  bizId: String
  branchId: String
  propConfigNo: String
  propConfigName: String
  propTypeId: String
  numOfUnit: Float
  propType: PropType
  biz: Biz
  branch: Branch
  tags: String
}

type RestaOptionItemInfo {
  optionName: String
  kitchenInstruction: String
  selected: Boolean
}

type RestaOptionGroupInfo {
  optionGroupNo: String
  optionGroupName: String
  optionItems: [RestaOptionItemInfo!]
}

type RestaBranchMenu {
  restaBranchMenuId: ID
  bizId: String
  branchId: String
  restaMenuId: String
  menuNo: String
  menuName: String
  unitPrice: Float
  restaMenu: RestaMenu
  biz: Biz
  branch: Branch
  tags: String
}

type RestaMenu {
  restaMenuId: ID
  bizId: String
  restaMenuNo: String
  restaMenuName: String
  optionGroups: [RestaOptionGroupInfo!]
  unitPrice: Float
  biz: Biz
  kitchenOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  restaBranchMenu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaBranchMenu!]
  tags: String
}

type RestaOrdItemInfo {
  restaMenuId: String
  orderedQty: Float
  unitPrice: Float
  totalPrice: Float
  seatNo: String
  optionGroups: [RestaOptionGroupInfo!]
  Field0: Float
}

type RestaTableType {
  restaTableTypeId: ID
  bizId: String
  branchId: String
  tableTypeNo: String
  tableTypeName: String
  numOfSeat: Float
  biz: Biz
  branch: Branch
  restaTable(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaTable!]
  tags: String
}

type RestaArea {
  restaAreaId: ID
  bizId: String
  branchId: String
  restaAreaNo: String
  restaAreaName: String
  biz: Biz
  branch: Branch
  restaTable(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaTable!]
  tags: String
}

type RestaTable {
  restaTableId: ID
  bizId: String
  branchId: String
  tableNo: String
  tableName: String
  restaTableTypeId: String
  restaAreaId: String
  restaTableType: RestaTableType
  restaArea: RestaArea
  biz: Biz
  branch: Branch
  docRestaOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocRestaOrd!]
  kitchenOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  tags: String
}

type DocRestaOrd {
  docRestaOrdId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  restaTableId: String
  seatNo: String
  items: [RestaOrdItemInfo!]
  restaTable: RestaTable
  biz: Biz
  branch: Branch
  kitchenOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  rowDesc: String
  tags: String
}

type KitchenOrd {
  kitchenOrdId: ID
  bizId: String
  branchId: String
  kitchenId: String
  kitchenOrdNo: String
  kitchenOrdDate: Date
  restaMenuId: String
  docRestaOrdId: String
  itemId: String
  menuName: String
  orderedQty: Float
  optionGroups: [RestaOptionGroupInfo!]
  restaTableId: String
  restaMenu: RestaMenu
  docRestaOrd: DocRestaOrd
  kitchen: Kitchen
  restaTable: RestaTable
  biz: Biz
  branch: Branch
  tags: String
}

type Kitchen {
  kitchenId: ID
  bizId: String
  branchId: String
  kitchenNo: String
  kitchenName: String
  biz: Biz
  branch: Branch
  kitchenOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  tags: String
}

type PropServiceUnitItem {
  propServiceUnitItemId: ID
  bizId: String
  propServiceUnitId: String
  propServiceItemId: String
  unitPrice: Float
  itemNo: String
  itemName: String
  propServiceUnit: PropServiceUnit
  propServiceItem: PropServiceItem
  biz: Biz
  tags: String
}

type PropServiceItem {
  propServiceItemId: ID
  bizId: String
  itemNo: String
  itemName: String
  propServiceTypeId: String
  propServiceType: PropServiceType
  biz: Biz
  propServiceUnitItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnitItem!]
  tags: String
}

type PropServiceType {
  propServiceTypeId: ID
  bizId: String
  serviceTypeNo: String
  serviceTypeName: String
  biz: Biz
  propServiceUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnit!]
  propServiceItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceItem!]
  tags: String
}

type PropServiceUnit {
  propServiceUnitId: ID
  bizId: String
  branchId: String
  propServiceUnitNo: String
  propServiceUnitName: String
  propServiceTypeId: String
  propServiceType: PropServiceType
  biz: Biz
  branch: Branch
  propServiceUnitItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnitItem!]
  tags: String
}

type Branch {
  branchId: ID
  bizId: String
  branchNo: String
  branchName: String
  virtualBranch: Boolean
  addr: AddrInfo
  lotNoPart: String
  snNoPart: String
  inventoryPreference: BranchInventoryPreferenceInfo
  salesPreference: BranchSalesPreferenceInfo
  purchasePreference: BranchPurchasePreferenceInfo
  ffmBranchId: String
  ffmWhId: String
  biz: Biz
  ffmBranch: Branch
  ffmWh: Wh
  posDevice(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PosDevice!]
  docPos(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPos!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  docApiv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocApiv!]
  docAriv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocAriv!]
  docGin(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGin!]
  docGrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGrn!]
  docIva(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocIva!]
  docPo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPo!]
  docArcItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  docShip(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocShip!]
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  pdBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdBranch!]
  assetBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetBranch!]
  docNar(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNar!]
  assetStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetStorage!]
  docArr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArr!]
  docNarItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNarItem!]
  docCdj(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocCdj!]
  docCrj(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocCrj!]
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  docReceipt(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocReceipt!]
  wh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Wh!]
  pdWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdWh!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  cpdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CpdStorage!]
  spdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SpdStorage!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  assetWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetWh!]
  whZone(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhZone!]
  whAisle(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhAisle!]
  whRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  whStaff(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStaff!]
  whEqm(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhEqm!]
  docDso(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocDso!]
  neighbourhood(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Neighbourhood!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  docPick(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPick!]
  docPackSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPackSu!]
  docTask(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  docTfo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTfo!]
  docTfr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTfr!]
  docPffm(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPffm!]
  sdal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Sdal!]
  docOresv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocOresv!]
  branchByFfmBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Branch!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  propConfig(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropConfig!]
  propUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropUnit!]
  kitchen(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Kitchen!]
  restaBranchMenu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaBranchMenu!]
  restaArea(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaArea!]
  restaTableType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaTableType!]
  restaTable(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaTable!]
  propServiceUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnit!]
  kitchenOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  docRestaOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocRestaOrd!]
  propBill(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropBill!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  tags: String
}

type UserBranchInfo {
  branchId: String
  branch: Branch
  branchNo: String
  branchName: String
  active: Boolean
}

type BizUserGrp {
  bizUserGrpId: ID
  bizId: String
  grpNo: String
  grpName: String
  biz: Biz
  bizUser(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizUser!]
  tags: String
}

type UserProfileInfo {
  addr: AddrInfo
  contact: ContactInfo
}

type DeviceInfo {
  platform: String
}

type UserToken {
  userTokenId: ID
  userId: String
  refreshToken: String
  bid: String
  brid: String
  deviceInfo: DeviceInfo
  user: User
  rowCode: String
  rowDesc: String
  tags: String
}

type BizAllowed {
  bizAllowedId: ID
  userId: String
  refBizId: String
  user: User
  rowCode: String
  rowDesc: String
  tags: String
}

type User {
  userId: ID
  name: String
  email: String
  password: String
  company: String
  tfaEnabled: Boolean
  tfaSecret: String
  agreements: Boolean
  avatar: String
  profile: UserProfileInfo
  preferLang: String
  userToken(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [UserToken!]
  bizUser(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizUser!]
  bizAllowed(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizAllowed!]
  rowCode: String
  tags: String
}

type BizUser {
  bizUserId: ID
  bizId: String
  userId: String
  bizUserGrpId: String
  preferLanguageId: String
  allowedBranches: [UserBranchInfo!]
  allowAllBranches: Boolean
  active: Boolean
  biz: Biz
  bizUserGrp: BizUserGrp
  preferLanguage: BizLanguage
  user: User
  rowCode: String
  rowDesc: String
  tags: String
}

type BizUserRole {
  bizUserRoleId: ID
  roleNo: String
  roleName: String
  bizId: String
  biz: Biz
  tags: String
}

type Title {
  titleId: ID
  titleNo: String
  titleName: String
  bizId: String
  biz: Biz
  tags: String
}

type RunningInfo {
  seq: Float
  description: String
  pattern: String
  resetType: String
}

type DocRunningGroup {
  docRunningGroupId: ID
  bizId: String
  runningGroupName: String
  defaultSeq: Float
  selectionJs: String
  contextJs: String
  runningItem: [RunningInfo!]
  biz: Biz
  rowCode: String
  tags: String
}

type CreditTerm {
  creditTermId: ID
  creditTermNo: String
  creditTermName: String
  creditTermDay: Float
  bizId: String
  biz: Biz
  tags: String
}

type Tax {
  taxId: ID
  taxNo: String
  taxName: String
  taxRate: Float
  bizId: String
  biz: Biz
  tags: String
}

type Skill {
  skillId: ID
  skillNo: String
  skillName: String
  bizId: String
  biz: Biz
  tags: String
}

type RefDoc {
  refDocId: ID
  bizId: String
  refDocNo: String
  refDocName: String
  biz: Biz
  tags: String
}

type BizTranslationOption {
  bizTranslationOptionId: ID
  bizId: String
  languageId: String
  name: String
  baseLanguageId: String
  labels: [TranslationInfo!]
  messages: [TranslationInfo!]
  countries: [TranslationInfo!]
  provinces: [TranslationInfo!]
  districts: [TranslationInfo!]
  status: [TranslationInfo!]
  version: String
  releaseDate: Date
  releaseNote: String
  credit: String
  language: Language
  baseLanguage: Language
  biz: Biz
  rowCode: String
  tags: String
}

type Expense {
  expenseId: ID
  bizId: String
  expenseNo: String
  expenseName: String
  biz: Biz
  tags: String
}

type Revenue {
  revenueId: ID
  bizId: String
  revenueNo: String
  revenueName: String
  biz: Biz
  tags: String
}

type DataFormTplInfo {
  tplName: String
  tplValues: String
}

type DataFormFilterInfo {
  filterName: String
  filterParams: String
  sortDirection: String
  sortBy: String
  defaultValue: Boolean
}

type DataFormTagInfo {
  tagName: String
  tagValue: String
  tagColor: String
}

type DataFormWfStatusInfo {
  wfStatusName: String
  wfStatusValue: String
}

type DataFormConfig {
  dataFormConfigId: ID
  bizId: String
  formNo: String
  formName: String
  formTpl: [DataFormTplInfo!]
  formFilter: [DataFormFilterInfo!]
  formTag: [DataFormTagInfo!]
  formWfStatus: [DataFormWfStatusInfo!]
  displayAsTab: Boolean
  tabPosition: String
  tableAsList: Boolean
  biz: Biz
  tags: String
}

type ShippingZone {
  shippingZoneId: ID
  bizId: String
  shippingZoneNo: String
  shippingZoneName: String
  biz: Biz
  tags: String
}

type PropFacility {
  propFacilityId: ID
  bizId: String
  propFacilityNo: String
  propFacilityName: String
  biz: Biz
  tags: String
}

type PropUnitFacility {
  propUnitFacilityId: ID
  bizId: String
  propUnitFacilityNo: String
  propUnitFacilityName: String
  biz: Biz
  tags: String
}

type RestaOptionGroup {
  restaOptionGroupId: ID
  bizId: String
  optionGroupNo: String
  optionGroupName: String
  optionItems: [RestaOptionItemInfo!]
  biz: Biz
  tags: String
}

type Biz {
  bizId: ID
  bizNo: String
  bizName: String
  addr: AddrInfo
  branchNo: String
  taxid: String
  contact: ContactInfo
  preference: SysPreferenceInfo
  bizUser(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizUser!]
  cust(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cust!]
  pd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  whStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  pdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  bizUserRole(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizUserRole!]
  bizUserGrp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizUserGrp!]
  title(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Title!]
  bizLanguage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizLanguage!]
  docRunningGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocRunningGroup!]
  pdType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdType!]
  pdGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdGroup!]
  discGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DiscGroup!]
  docPo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPo!]
  custGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CustGroup!]
  uom(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Uom!]
  docGrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGrn!]
  suppGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SuppGroup!]
  cpd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Cpd!]
  docGin(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocGin!]
  creditTerm(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CreditTerm!]
  tax(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Tax!]
  skill(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Skill!]
  docAriv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocAriv!]
  refDoc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RefDoc!]
  bank(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Bank!]
  chequeType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeType!]
  paymentMethod(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PaymentMethod!]
  chequeDisbursed(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeDisbursed!]
  chequeReceived(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ChequeReceived!]
  pdUom(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdUom!]
  docApiv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocApiv!]
  docPos(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPos!]
  pdBal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdBal!]
  pdStorageBal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdStorageBal!]
  docShip(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocShip!]
  posDevice(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PosDevice!]
  branch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Branch!]
  pdCate(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdCate!]
  pdSubcate(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSubcate!]
  priceGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceGroup!]
  priceBook(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBook!]
  priceBookItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookItem!]
  priceBookCascade(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookCascade!]
  period(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Period!]
  docArc(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  rtp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Rtp!]
  docArcItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  bizTranslationOption(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizTranslationOption!]
  asset(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  assetStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetStorage!]
  supp(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Supp!]
  spd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Spd!]
  docSo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  pdBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdBranch!]
  color(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Color!]
  brand(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Brand!]
  rentalType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RentalType!]
  docNarItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNarItem!]
  docNar(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocNar!]
  paymentCondition(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PaymentCondition!]
  deliveryMethod(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DeliveryMethod!]
  docArr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArr!]
  assetBranch(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetBranch!]
  expense(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Expense!]
  docCdj(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocCdj!]
  docCrj(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocCrj!]
  revenue(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Revenue!]
  docArrItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  docReceipt(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocReceipt!]
  wh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Wh!]
  pdWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdWh!]
  pdLotStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  pdSn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSn!]
  pdLot(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdLot!]
  docIva(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocIva!]
  pdAttribute(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdAttribute!]
  dataFormConfig(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DataFormConfig!]
  salesChannel(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SalesChannel!]
  bankAccountType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BankAccountType!]
  bankAccount(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BankAccount!]
  cpdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CpdStorage!]
  spdStorage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SpdStorage!]
  docDso(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocDso!]
  invTrn(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  assetWh(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AssetWh!]
  pdCostStack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdCostStack!]
  whStaff(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStaff!]
  workShift(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WorkShift!]
  whEqm(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhEqm!]
  neighbourhood(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Neighbourhood!]
  whZone(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhZone!]
  whAisle(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhAisle!]
  whRack(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  whShelf(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  whStorageType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorageType!]
  whStorageRestriction(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhStorageRestriction!]
  packagingType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PackagingType!]
  whHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  pdHu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  huType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [HuType!]
  pdHuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdHuProfile!]
  suType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [SuType!]
  pdSuProfile(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSuProfile!]
  whSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  pdSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  paymentGateway(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PaymentGateway!]
  docPick(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPick!]
  docPackSu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPackSu!]
  docTask(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  shippingZone(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ShippingZone!]
  rpnPlan(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  whController(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [WhController!]
  docTfo(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTfo!]
  docTfr(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocTfr!]
  docPffm(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocPffm!]
  sdal(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Sdal!]
  docOresv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocOresv!]
  resvType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [ResvType!]
  pdResv(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  propConfig(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropConfig!]
  propType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropType!]
  propUnitType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropUnitType!]
  propServiceType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceType!]
  propFacility(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropFacility!]
  propUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropUnit!]
  propUnitFacility(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropUnitFacility!]
  propServiceUnit(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnit!]
  kitchen(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Kitchen!]
  restaMenu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaMenu!]
  restaBranchMenu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaBranchMenu!]
  propServiceItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceItem!]
  propServiceUnitItem(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnitItem!]
  restaArea(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaArea!]
  restaTableType(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaTableType!]
  restaOptionGroup(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaOptionGroup!]
  restaTable(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [RestaTable!]
  kitchenOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  docRestaOrd(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [DocRestaOrd!]
  propBill(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [PropBill!]
  tags: String
}

type BizLanguage {
  bizLanguageId: ID
  bizId: String
  languageId: String
  useCustomTranslation: Boolean
  useAsDefault: Boolean
  biz: Biz
  language: Language
  bizUserByPreferLanguage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizUser!]
  rowCode: String
  rowDesc: String
  tags: String
}

type Language {
  languageId: ID
  languageCode: String
  languageName: String
  nativeName: String
  rtl: Boolean
  translationOption(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [TranslationOption!]
  bizLanguage(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizLanguage!]
  countryTranslationOption(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CountryTranslationOption!]
  bizTranslationOption(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [BizTranslationOption!]
  tags: String
}

type CountryTranslationOption {
  countryTranslationOptionId: ID
  languageId: String
  name: String
  baseLanguageId: String
  labels: [TranslationInfo!]
  messages: [TranslationInfo!]
  countries: [TranslationInfo!]
  provinces: [TranslationInfo!]
  districts: [TranslationInfo!]
  status: [TranslationInfo!]
  version: String
  releaseDate: Date
  releaseNote: String
  credit: String
  countryId: String
  language: Language
  baseLanguage: Language
  country: Country
  rowCode: String
  tags: String
}

type Country {
  countryId: ID
  countryCode: String
  countryName: String
  iso3: String
  iso2: String
  numericNo: String
  phoneNo: String
  captital: String
  currency: String
  currencyName: String
  currencySymbol: String
  tld: String
  native: String
  region: String
  subregion: String
  timewhZones: [TimewhZoneInfo!]
  latitude: String
  longitude: String
  emoji: String
  emojiU: String
  province(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Province!]
  districts(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [Districts!]
  countryTranslationOption(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [CountryTranslationOption!]
  tags: String
}

type AddrInfo {
  addr1: String
  addr2: String
  countryId: String
  country: Country
  provinceId: String
  province: Province
  districtsId: String
  districts: Districts
  townId: String
  town: Town
  zip: String
}

type UserAllowedBizInfo {
  bizId: String
  biz: Biz
  bizNo: String
  bizName: String
  branchAllowed: [UserBranchInfo!]
  active: Boolean
}

type ReceiveLotInfo {
  pdLotId: String
  pdLot: PdLot
  qtyToReceive: Float
}

type IssueLotInfo {
  pdLotId: String
  pdLot: PdLot
  issuedQty: Float
}

type PickLotInfo {
  pdStorageId: String
  pdStorage: PdStorage
  pdLotId: String
  pdLot: PdLot
  qtyToPick: Float
}

type TransferLotInfo {
  pdLotId: String
  pdLot: PdLot
  transferedQty: Float
}

type ShipLotInfo {
  pdStorageId: String
  pdStorage: PdStorage
  pdLotId: String
  pdLot: PdLot
  qtyToShip: Float
}

type ReceiveHistoryInfo {
  transDate: Date
  transName: String
  transQty: Float
  pdStorageId: String
  pdStorage: PdStorage
  pdLotId: String
  pdLot: PdLot
}

type SortingContainerInfo {
  whStorageId: String
  whStorage: WhStorage
  pickedQty: Float
}

type WhEqmInfo {
  whEqmId: String
  whEqm: WhEqm
  issuedQty: Float
  returnedQty: Float
}

type PdPickInfo {
  itemId: String
  pdId: String
  pd: Pd
  orderedQty: Float
  pdUomId: String
  pdUom: PdUom
  applyHu: Boolean
  huTypeId: String
  huType: HuType
  qtyPerHu: Float
  numOfHu: Float
  allocatedQty: Float
  status: String
  baseUnitOrderedQty: Float
  cnvFactor: Float
}

type PoReceiveStorageInfo {
  whStorageId: String
  whStorage: WhStorage
  qtyToStore: Float
}

type PdStorageTransferInfo {
  pdId: String
  pd: Pd
  useLot: Boolean
  fromStorageId: String
  fromStorage: PdStorage
  toStorageId: String
  toStorage: PdStorage
  pdLotStorageId: String
  pdLotStorage: PdLotStorage
  transferedQty: Float
  pdUomId: String
  pdUom: PdUom
  status: String
  refDocId: String
  refDocItemId: String
  itemId: String
}

type PdHuTransferInfo {
  pdId: String
  pd: Pd
  useLot: Boolean
  fromHuId: String
  fromHu: PdHu
  lotStorageId: String
  lotStorage: PdLotStorage
  transferedQty: Float
  pdUomId: String
  pdUom: PdUom
  toHuId: String
  toHu: WhHu
  toStorageId: String
  toStorage: WhStorage
  status: String
  refDocId: String
  refDocItemId: String
}

type StatusInfo {
  statusNo: String
  statusName: String
  prevStatus: String
  nextStatus: String
  defaultStatus: Boolean
}

type StatusType {
  statusId: ID
  statusType: String
  statusName: String
  statuses: [StatusInfo!]
  defaultStatus: String
  tags: String
}

type Status {
  statusId: ID
  statusNo: String
  statusName: String
  tags: String
}

type DataType {
  dataTypeId: ID
  typeNo: String
  typeName: String
  standardType: Boolean
  tags: String
}

type Currency {
  currencyId: ID
  currencyNo: String
  currencyName: String
  symbol: String
  tags: String
}

type NavigationClassesInfo {
  title: Float
  subtitle: Float
  icon: Float
  wrapper: Float
}

type NavigationBadgeInfo {
  title: Float
  classes: Float
}

type MenuInfo {
  title: String
  subtitle: String
  type: String
  hidden: Boolean
  active: Boolean
  disabled: Boolean
  tooltip: String
  fragment: String
  preserveFragment: String
  queryParams: Boolean
  queryParamsHandling: String
  externalLink: Boolean
  target: String
  exectMatch: Boolean
  isActiveMatchOption: String
  function: String
  classes: NavigationClassesInfo
  icon: String
  badge: NavigationBadgeInfo
  meta: String
  link: String
}

type CollapsibleMenuInfo {
  title: String
  subtitle: String
  type: String
  icon: String
  children: [MenuInfo!]
}

type AppModule {
  appModuleId: ID
  appModuleNo: String
  appModuleName: String
  appMenu(page: Int, limit: Int, pageInfo: Boolean, skipBridCheck: Boolean, filter: JSONObject, sort: JSONObject): [AppMenu!]
  tags: String
}

type AppMenu {
  appMenuId: ID
  title: String
  subtitle: String
  type: String
  icon: String
  children: [CollapsibleMenuInfo!]
  link: String
  appModuleId: String
  appModule: AppModule
  rowCode: String
  tags: String
}

type AppType {
  appTypeId: ID
  appTypeNo: String
  appTypeName: String
  monthlyRate: Float
  yearlyRate: Float
  tags: String
}

type AppRoute {
  appRouteId: ID
  routeNo: String
  title: String
  subtitle: String
  link: String
  tags: String
}

"""Date custom scalar type"""
scalar Date

type Query {
  getBiz(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Biz!]
  getOneBiz(skipBridCheck: Boolean, filter: JSONObject): Biz
  getBizById(ido: JSONObject): Biz
  getUser(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [User!]
  getOneUser(skipBridCheck: Boolean, filter: JSONObject): User
  getUserById(ido: JSONObject): User
  getBizUser(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BizUser!]
  getOneBizUser(skipBridCheck: Boolean, filter: JSONObject): BizUser
  getBizUserById(ido: JSONObject): BizUser
  getPaymentMethod(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PaymentMethod!]
  getOnePaymentMethod(skipBridCheck: Boolean, filter: JSONObject): PaymentMethod
  getPaymentMethodById(ido: JSONObject): PaymentMethod
  getCust(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Cust!]
  getOneCust(skipBridCheck: Boolean, filter: JSONObject): Cust
  getCustById(ido: JSONObject): Cust
  getCountry(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Country!]
  getOneCountry(skipBridCheck: Boolean, filter: JSONObject): Country
  getCountryById(ido: JSONObject): Country
  getProvince(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Province!]
  getOneProvince(skipBridCheck: Boolean, filter: JSONObject): Province
  getProvinceById(ido: JSONObject): Province
  getDistricts(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Districts!]
  getOneDistricts(skipBridCheck: Boolean, filter: JSONObject): Districts
  getDistrictsById(ido: JSONObject): Districts
  getTown(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Town!]
  getOneTown(skipBridCheck: Boolean, filter: JSONObject): Town
  getTownById(ido: JSONObject): Town
  getLanguage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Language!]
  getOneLanguage(skipBridCheck: Boolean, filter: JSONObject): Language
  getLanguageById(ido: JSONObject): Language
  getStatusType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [StatusType!]
  getOneStatusType(skipBridCheck: Boolean, filter: JSONObject): StatusType
  getStatusTypeById(ido: JSONObject): StatusType
  getStatus(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Status!]
  getOneStatus(skipBridCheck: Boolean, filter: JSONObject): Status
  getStatusById(ido: JSONObject): Status
  getTitle(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Title!]
  getOneTitle(skipBridCheck: Boolean, filter: JSONObject): Title
  getTitleById(ido: JSONObject): Title
  getDataType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DataType!]
  getOneDataType(skipBridCheck: Boolean, filter: JSONObject): DataType
  getDataTypeById(ido: JSONObject): DataType
  getPd(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Pd!]
  getOnePd(skipBridCheck: Boolean, filter: JSONObject): Pd
  getPdById(ido: JSONObject): Pd
  getWhStorage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhStorage!]
  getOneWhStorage(skipBridCheck: Boolean, filter: JSONObject): WhStorage
  getWhStorageById(ido: JSONObject): WhStorage
  getPdStorage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdStorage!]
  getOnePdStorage(skipBridCheck: Boolean, filter: JSONObject): PdStorage
  getPdStorageById(ido: JSONObject): PdStorage
  getCreditTerm(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [CreditTerm!]
  getOneCreditTerm(skipBridCheck: Boolean, filter: JSONObject): CreditTerm
  getCreditTermById(ido: JSONObject): CreditTerm
  getUom(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Uom!]
  getOneUom(skipBridCheck: Boolean, filter: JSONObject): Uom
  getUomById(ido: JSONObject): Uom
  getTax(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Tax!]
  getOneTax(skipBridCheck: Boolean, filter: JSONObject): Tax
  getTaxById(ido: JSONObject): Tax
  getCustGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [CustGroup!]
  getOneCustGroup(skipBridCheck: Boolean, filter: JSONObject): CustGroup
  getCustGroupById(ido: JSONObject): CustGroup
  getSuppGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [SuppGroup!]
  getOneSuppGroup(skipBridCheck: Boolean, filter: JSONObject): SuppGroup
  getSuppGroupById(ido: JSONObject): SuppGroup
  getCpd(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Cpd!]
  getOneCpd(skipBridCheck: Boolean, filter: JSONObject): Cpd
  getCpdById(ido: JSONObject): Cpd
  getSkill(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Skill!]
  getOneSkill(skipBridCheck: Boolean, filter: JSONObject): Skill
  getSkillById(ido: JSONObject): Skill
  getBizUserGrp(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BizUserGrp!]
  getOneBizUserGrp(skipBridCheck: Boolean, filter: JSONObject): BizUserGrp
  getBizUserGrpById(ido: JSONObject): BizUserGrp
  getBizUserRole(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BizUserRole!]
  getOneBizUserRole(skipBridCheck: Boolean, filter: JSONObject): BizUserRole
  getBizUserRoleById(ido: JSONObject): BizUserRole
  getDocAriv(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocAriv!]
  getOneDocAriv(skipBridCheck: Boolean, filter: JSONObject): DocAriv
  getDocArivById(ido: JSONObject): DocAriv
  getDiscGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DiscGroup!]
  getOneDiscGroup(skipBridCheck: Boolean, filter: JSONObject): DiscGroup
  getDiscGroupById(ido: JSONObject): DiscGroup
  getDocPo(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocPo!]
  getOneDocPo(skipBridCheck: Boolean, filter: JSONObject): DocPo
  getDocPoById(ido: JSONObject): DocPo
  getRefDoc(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RefDoc!]
  getOneRefDoc(skipBridCheck: Boolean, filter: JSONObject): RefDoc
  getRefDocById(ido: JSONObject): RefDoc
  getChequeDisbursed(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [ChequeDisbursed!]
  getOneChequeDisbursed(skipBridCheck: Boolean, filter: JSONObject): ChequeDisbursed
  getChequeDisbursedById(ido: JSONObject): ChequeDisbursed
  getBank(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Bank!]
  getOneBank(skipBridCheck: Boolean, filter: JSONObject): Bank
  getBankById(ido: JSONObject): Bank
  getChequeReceived(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [ChequeReceived!]
  getOneChequeReceived(skipBridCheck: Boolean, filter: JSONObject): ChequeReceived
  getChequeReceivedById(ido: JSONObject): ChequeReceived
  getChequeType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [ChequeType!]
  getOneChequeType(skipBridCheck: Boolean, filter: JSONObject): ChequeType
  getChequeTypeById(ido: JSONObject): ChequeType
  getDocGrn(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocGrn!]
  getOneDocGrn(skipBridCheck: Boolean, filter: JSONObject): DocGrn
  getDocGrnById(ido: JSONObject): DocGrn
  getDocRunningGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocRunningGroup!]
  getOneDocRunningGroup(skipBridCheck: Boolean, filter: JSONObject): DocRunningGroup
  getDocRunningGroupById(ido: JSONObject): DocRunningGroup
  getTranslationOption(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [TranslationOption!]
  getOneTranslationOption(skipBridCheck: Boolean, filter: JSONObject): TranslationOption
  getTranslationOptionById(ido: JSONObject): TranslationOption
  getBizLanguage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BizLanguage!]
  getOneBizLanguage(skipBridCheck: Boolean, filter: JSONObject): BizLanguage
  getBizLanguageById(ido: JSONObject): BizLanguage
  getPdType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdType!]
  getOnePdType(skipBridCheck: Boolean, filter: JSONObject): PdType
  getPdTypeById(ido: JSONObject): PdType
  getPdGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdGroup!]
  getOnePdGroup(skipBridCheck: Boolean, filter: JSONObject): PdGroup
  getPdGroupById(ido: JSONObject): PdGroup
  getDocGin(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocGin!]
  getOneDocGin(skipBridCheck: Boolean, filter: JSONObject): DocGin
  getDocGinById(ido: JSONObject): DocGin
  getDataFormConfig(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DataFormConfig!]
  getOneDataFormConfig(skipBridCheck: Boolean, filter: JSONObject): DataFormConfig
  getDataFormConfigById(ido: JSONObject): DataFormConfig
  getPdUom(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdUom!]
  getOnePdUom(skipBridCheck: Boolean, filter: JSONObject): PdUom
  getPdUomById(ido: JSONObject): PdUom
  getDocIva(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocIva!]
  getOneDocIva(skipBridCheck: Boolean, filter: JSONObject): DocIva
  getDocIvaById(ido: JSONObject): DocIva
  getDocApiv(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocApiv!]
  getOneDocApiv(skipBridCheck: Boolean, filter: JSONObject): DocApiv
  getDocApivById(ido: JSONObject): DocApiv
  getDocPos(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocPos!]
  getOneDocPos(skipBridCheck: Boolean, filter: JSONObject): DocPos
  getDocPosById(ido: JSONObject): DocPos
  getCurrency(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Currency!]
  getOneCurrency(skipBridCheck: Boolean, filter: JSONObject): Currency
  getCurrencyById(ido: JSONObject): Currency
  getPdBal(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdBal!]
  getOnePdBal(skipBridCheck: Boolean, filter: JSONObject): PdBal
  getPdBalById(ido: JSONObject): PdBal
  getPdStorageBal(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdStorageBal!]
  getOnePdStorageBal(skipBridCheck: Boolean, filter: JSONObject): PdStorageBal
  getPdStorageBalById(ido: JSONObject): PdStorageBal
  getDocShip(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocShip!]
  getOneDocShip(skipBridCheck: Boolean, filter: JSONObject): DocShip
  getDocShipById(ido: JSONObject): DocShip
  getPosDevice(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PosDevice!]
  getOnePosDevice(skipBridCheck: Boolean, filter: JSONObject): PosDevice
  getPosDeviceById(ido: JSONObject): PosDevice
  getBranch(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Branch!]
  getOneBranch(skipBridCheck: Boolean, filter: JSONObject): Branch
  getBranchById(ido: JSONObject): Branch
  getPdCate(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdCate!]
  getOnePdCate(skipBridCheck: Boolean, filter: JSONObject): PdCate
  getPdCateById(ido: JSONObject): PdCate
  getPdSubcate(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdSubcate!]
  getOnePdSubcate(skipBridCheck: Boolean, filter: JSONObject): PdSubcate
  getPdSubcateById(ido: JSONObject): PdSubcate
  getPriceGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PriceGroup!]
  getOnePriceGroup(skipBridCheck: Boolean, filter: JSONObject): PriceGroup
  getPriceGroupById(ido: JSONObject): PriceGroup
  getPriceBook(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PriceBook!]
  getOnePriceBook(skipBridCheck: Boolean, filter: JSONObject): PriceBook
  getPriceBookById(ido: JSONObject): PriceBook
  getPriceBookItem(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookItem!]
  getOnePriceBookItem(skipBridCheck: Boolean, filter: JSONObject): PriceBookItem
  getPriceBookItemById(ido: JSONObject): PriceBookItem
  getPriceBookCascade(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PriceBookCascade!]
  getOnePriceBookCascade(skipBridCheck: Boolean, filter: JSONObject): PriceBookCascade
  getPriceBookCascadeById(ido: JSONObject): PriceBookCascade
  getCate(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Cate!]
  getOneCate(skipBridCheck: Boolean, filter: JSONObject): Cate
  getCateById(ido: JSONObject): Cate
  getSubcate(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Subcate!]
  getOneSubcate(skipBridCheck: Boolean, filter: JSONObject): Subcate
  getSubcateById(ido: JSONObject): Subcate
  getDocArc(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocArc!]
  getOneDocArc(skipBridCheck: Boolean, filter: JSONObject): DocArc
  getDocArcById(ido: JSONObject): DocArc
  getDocArcItem(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocArcItem!]
  getOneDocArcItem(skipBridCheck: Boolean, filter: JSONObject): DocArcItem
  getDocArcItemById(ido: JSONObject): DocArcItem
  getPeriod(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Period!]
  getOnePeriod(skipBridCheck: Boolean, filter: JSONObject): Period
  getPeriodById(ido: JSONObject): Period
  getRtp(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Rtp!]
  getOneRtp(skipBridCheck: Boolean, filter: JSONObject): Rtp
  getRtpById(ido: JSONObject): Rtp
  getCountryTranslationOption(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [CountryTranslationOption!]
  getOneCountryTranslationOption(skipBridCheck: Boolean, filter: JSONObject): CountryTranslationOption
  getCountryTranslationOptionById(ido: JSONObject): CountryTranslationOption
  getBizTranslationOption(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BizTranslationOption!]
  getOneBizTranslationOption(skipBridCheck: Boolean, filter: JSONObject): BizTranslationOption
  getBizTranslationOptionById(ido: JSONObject): BizTranslationOption
  getAppMenu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AppMenu!]
  getOneAppMenu(skipBridCheck: Boolean, filter: JSONObject): AppMenu
  getAppMenuById(ido: JSONObject): AppMenu
  getUserToken(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [UserToken!]
  getOneUserToken(skipBridCheck: Boolean, filter: JSONObject): UserToken
  getUserTokenById(ido: JSONObject): UserToken
  getAsset(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Asset!]
  getOneAsset(skipBridCheck: Boolean, filter: JSONObject): Asset
  getAssetById(ido: JSONObject): Asset
  getAssetStorage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AssetStorage!]
  getOneAssetStorage(skipBridCheck: Boolean, filter: JSONObject): AssetStorage
  getAssetStorageById(ido: JSONObject): AssetStorage
  getAppType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AppType!]
  getOneAppType(skipBridCheck: Boolean, filter: JSONObject): AppType
  getAppTypeById(ido: JSONObject): AppType
  getSupp(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Supp!]
  getOneSupp(skipBridCheck: Boolean, filter: JSONObject): Supp
  getSuppById(ido: JSONObject): Supp
  getSpd(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Spd!]
  getOneSpd(skipBridCheck: Boolean, filter: JSONObject): Spd
  getSpdById(ido: JSONObject): Spd
  getDocSo(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocSo!]
  getOneDocSo(skipBridCheck: Boolean, filter: JSONObject): DocSo
  getDocSoById(ido: JSONObject): DocSo
  getDeliveryMethod(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DeliveryMethod!]
  getOneDeliveryMethod(skipBridCheck: Boolean, filter: JSONObject): DeliveryMethod
  getDeliveryMethodById(ido: JSONObject): DeliveryMethod
  getRentalType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RentalType!]
  getOneRentalType(skipBridCheck: Boolean, filter: JSONObject): RentalType
  getRentalTypeById(ido: JSONObject): RentalType
  getPaymentCondition(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PaymentCondition!]
  getOnePaymentCondition(skipBridCheck: Boolean, filter: JSONObject): PaymentCondition
  getPaymentConditionById(ido: JSONObject): PaymentCondition
  getBrand(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Brand!]
  getOneBrand(skipBridCheck: Boolean, filter: JSONObject): Brand
  getBrandById(ido: JSONObject): Brand
  getColor(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Color!]
  getOneColor(skipBridCheck: Boolean, filter: JSONObject): Color
  getColorById(ido: JSONObject): Color
  getDocCdj(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocCdj!]
  getOneDocCdj(skipBridCheck: Boolean, filter: JSONObject): DocCdj
  getDocCdjById(ido: JSONObject): DocCdj
  getExpense(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Expense!]
  getOneExpense(skipBridCheck: Boolean, filter: JSONObject): Expense
  getExpenseById(ido: JSONObject): Expense
  getRevenue(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Revenue!]
  getOneRevenue(skipBridCheck: Boolean, filter: JSONObject): Revenue
  getRevenueById(ido: JSONObject): Revenue
  getDocCrj(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocCrj!]
  getOneDocCrj(skipBridCheck: Boolean, filter: JSONObject): DocCrj
  getDocCrjById(ido: JSONObject): DocCrj
  getDocArr(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocArr!]
  getOneDocArr(skipBridCheck: Boolean, filter: JSONObject): DocArr
  getDocArrById(ido: JSONObject): DocArr
  getDocNar(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocNar!]
  getOneDocNar(skipBridCheck: Boolean, filter: JSONObject): DocNar
  getDocNarById(ido: JSONObject): DocNar
  getDocNarItem(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocNarItem!]
  getOneDocNarItem(skipBridCheck: Boolean, filter: JSONObject): DocNarItem
  getDocNarItemById(ido: JSONObject): DocNarItem
  getPdBranch(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdBranch!]
  getOnePdBranch(skipBridCheck: Boolean, filter: JSONObject): PdBranch
  getPdBranchById(ido: JSONObject): PdBranch
  getAssetBranch(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AssetBranch!]
  getOneAssetBranch(skipBridCheck: Boolean, filter: JSONObject): AssetBranch
  getAssetBranchById(ido: JSONObject): AssetBranch
  getDocArrItem(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocArrItem!]
  getOneDocArrItem(skipBridCheck: Boolean, filter: JSONObject): DocArrItem
  getDocArrItemById(ido: JSONObject): DocArrItem
  getDocReceipt(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocReceipt!]
  getOneDocReceipt(skipBridCheck: Boolean, filter: JSONObject): DocReceipt
  getDocReceiptById(ido: JSONObject): DocReceipt
  getBankAccountType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BankAccountType!]
  getOneBankAccountType(skipBridCheck: Boolean, filter: JSONObject): BankAccountType
  getBankAccountTypeById(ido: JSONObject): BankAccountType
  getBankAccount(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BankAccount!]
  getOneBankAccount(skipBridCheck: Boolean, filter: JSONObject): BankAccount
  getBankAccountById(ido: JSONObject): BankAccount
  getCardType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [CardType!]
  getOneCardType(skipBridCheck: Boolean, filter: JSONObject): CardType
  getCardTypeById(ido: JSONObject): CardType
  getPaymentChannel(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PaymentChannel!]
  getOnePaymentChannel(skipBridCheck: Boolean, filter: JSONObject): PaymentChannel
  getPaymentChannelById(ido: JSONObject): PaymentChannel
  getAppRoute(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AppRoute!]
  getOneAppRoute(skipBridCheck: Boolean, filter: JSONObject): AppRoute
  getAppRouteById(ido: JSONObject): AppRoute
  getPdAttribute(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdAttribute!]
  getOnePdAttribute(skipBridCheck: Boolean, filter: JSONObject): PdAttribute
  getPdAttributeById(ido: JSONObject): PdAttribute
  getWh(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Wh!]
  getOneWh(skipBridCheck: Boolean, filter: JSONObject): Wh
  getWhById(ido: JSONObject): Wh
  getPdWh(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdWh!]
  getOnePdWh(skipBridCheck: Boolean, filter: JSONObject): PdWh
  getPdWhById(ido: JSONObject): PdWh
  getSalesChannel(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [SalesChannel!]
  getOneSalesChannel(skipBridCheck: Boolean, filter: JSONObject): SalesChannel
  getSalesChannelById(ido: JSONObject): SalesChannel
  getPdLot(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdLot!]
  getOnePdLot(skipBridCheck: Boolean, filter: JSONObject): PdLot
  getPdLotById(ido: JSONObject): PdLot
  getPdLotStorage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdLotStorage!]
  getOnePdLotStorage(skipBridCheck: Boolean, filter: JSONObject): PdLotStorage
  getPdLotStorageById(ido: JSONObject): PdLotStorage
  getPdSn(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdSn!]
  getOnePdSn(skipBridCheck: Boolean, filter: JSONObject): PdSn
  getPdSnById(ido: JSONObject): PdSn
  getCpdStorage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [CpdStorage!]
  getOneCpdStorage(skipBridCheck: Boolean, filter: JSONObject): CpdStorage
  getCpdStorageById(ido: JSONObject): CpdStorage
  getSpdStorage(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [SpdStorage!]
  getOneSpdStorage(skipBridCheck: Boolean, filter: JSONObject): SpdStorage
  getSpdStorageById(ido: JSONObject): SpdStorage
  getDocDso(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocDso!]
  getOneDocDso(skipBridCheck: Boolean, filter: JSONObject): DocDso
  getDocDsoById(ido: JSONObject): DocDso
  getBizAllowed(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [BizAllowed!]
  getOneBizAllowed(skipBridCheck: Boolean, filter: JSONObject): BizAllowed
  getBizAllowedById(ido: JSONObject): BizAllowed
  getInvTrn(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [InvTrn!]
  getOneInvTrn(skipBridCheck: Boolean, filter: JSONObject): InvTrn
  getInvTrnById(ido: JSONObject): InvTrn
  getAppModule(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AppModule!]
  getOneAppModule(skipBridCheck: Boolean, filter: JSONObject): AppModule
  getAppModuleById(ido: JSONObject): AppModule
  getAssetWh(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [AssetWh!]
  getOneAssetWh(skipBridCheck: Boolean, filter: JSONObject): AssetWh
  getAssetWhById(ido: JSONObject): AssetWh
  getPdCostStack(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdCostStack!]
  getOnePdCostStack(skipBridCheck: Boolean, filter: JSONObject): PdCostStack
  getPdCostStackById(ido: JSONObject): PdCostStack
  getWhStorageType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhStorageType!]
  getOneWhStorageType(skipBridCheck: Boolean, filter: JSONObject): WhStorageType
  getWhStorageTypeById(ido: JSONObject): WhStorageType
  getWhZone(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhZone!]
  getOneWhZone(skipBridCheck: Boolean, filter: JSONObject): WhZone
  getWhZoneById(ido: JSONObject): WhZone
  getWhAisle(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhAisle!]
  getOneWhAisle(skipBridCheck: Boolean, filter: JSONObject): WhAisle
  getWhAisleById(ido: JSONObject): WhAisle
  getWhRack(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhRack!]
  getOneWhRack(skipBridCheck: Boolean, filter: JSONObject): WhRack
  getWhRackById(ido: JSONObject): WhRack
  getWhShelf(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhShelf!]
  getOneWhShelf(skipBridCheck: Boolean, filter: JSONObject): WhShelf
  getWhShelfById(ido: JSONObject): WhShelf
  getNeighbourhood(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Neighbourhood!]
  getOneNeighbourhood(skipBridCheck: Boolean, filter: JSONObject): Neighbourhood
  getNeighbourhoodById(ido: JSONObject): Neighbourhood
  getWhStaff(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhStaff!]
  getOneWhStaff(skipBridCheck: Boolean, filter: JSONObject): WhStaff
  getWhStaffById(ido: JSONObject): WhStaff
  getWhEqm(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhEqm!]
  getOneWhEqm(skipBridCheck: Boolean, filter: JSONObject): WhEqm
  getWhEqmById(ido: JSONObject): WhEqm
  getWorkShift(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WorkShift!]
  getOneWorkShift(skipBridCheck: Boolean, filter: JSONObject): WorkShift
  getWorkShiftById(ido: JSONObject): WorkShift
  getDsp(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Dsp!]
  getOneDsp(skipBridCheck: Boolean, filter: JSONObject): Dsp
  getDspById(ido: JSONObject): Dsp
  getWhStorageRestriction(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhStorageRestriction!]
  getOneWhStorageRestriction(skipBridCheck: Boolean, filter: JSONObject): WhStorageRestriction
  getWhStorageRestrictionById(ido: JSONObject): WhStorageRestriction
  getPackagingType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PackagingType!]
  getOnePackagingType(skipBridCheck: Boolean, filter: JSONObject): PackagingType
  getPackagingTypeById(ido: JSONObject): PackagingType
  getHuType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [HuType!]
  getOneHuType(skipBridCheck: Boolean, filter: JSONObject): HuType
  getHuTypeById(ido: JSONObject): HuType
  getWhHu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhHu!]
  getOneWhHu(skipBridCheck: Boolean, filter: JSONObject): WhHu
  getWhHuById(ido: JSONObject): WhHu
  getPdHu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdHu!]
  getOnePdHu(skipBridCheck: Boolean, filter: JSONObject): PdHu
  getPdHuById(ido: JSONObject): PdHu
  getPdHuProfile(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdHuProfile!]
  getOnePdHuProfile(skipBridCheck: Boolean, filter: JSONObject): PdHuProfile
  getPdHuProfileById(ido: JSONObject): PdHuProfile
  getSuType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [SuType!]
  getOneSuType(skipBridCheck: Boolean, filter: JSONObject): SuType
  getSuTypeById(ido: JSONObject): SuType
  getPdSuProfile(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdSuProfile!]
  getOnePdSuProfile(skipBridCheck: Boolean, filter: JSONObject): PdSuProfile
  getPdSuProfileById(ido: JSONObject): PdSuProfile
  getWhSu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhSu!]
  getOneWhSu(skipBridCheck: Boolean, filter: JSONObject): WhSu
  getWhSuById(ido: JSONObject): WhSu
  getPdSu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdSu!]
  getOnePdSu(skipBridCheck: Boolean, filter: JSONObject): PdSu
  getPdSuById(ido: JSONObject): PdSu
  getPaymentGateway(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PaymentGateway!]
  getOnePaymentGateway(skipBridCheck: Boolean, filter: JSONObject): PaymentGateway
  getPaymentGatewayById(ido: JSONObject): PaymentGateway
  getDocPick(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocPick!]
  getOneDocPick(skipBridCheck: Boolean, filter: JSONObject): DocPick
  getDocPickById(ido: JSONObject): DocPick
  getDocTask(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocTask!]
  getOneDocTask(skipBridCheck: Boolean, filter: JSONObject): DocTask
  getDocTaskById(ido: JSONObject): DocTask
  getDocPackSu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocPackSu!]
  getOneDocPackSu(skipBridCheck: Boolean, filter: JSONObject): DocPackSu
  getDocPackSuById(ido: JSONObject): DocPackSu
  getShippingCarrier(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [ShippingCarrier!]
  getOneShippingCarrier(skipBridCheck: Boolean, filter: JSONObject): ShippingCarrier
  getShippingCarrierById(ido: JSONObject): ShippingCarrier
  getShippingZone(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [ShippingZone!]
  getOneShippingZone(skipBridCheck: Boolean, filter: JSONObject): ShippingZone
  getShippingZoneById(ido: JSONObject): ShippingZone
  getRpnPlan(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RpnPlan!]
  getOneRpnPlan(skipBridCheck: Boolean, filter: JSONObject): RpnPlan
  getRpnPlanById(ido: JSONObject): RpnPlan
  getWhController(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [WhController!]
  getOneWhController(skipBridCheck: Boolean, filter: JSONObject): WhController
  getWhControllerById(ido: JSONObject): WhController
  getDocTfo(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocTfo!]
  getOneDocTfo(skipBridCheck: Boolean, filter: JSONObject): DocTfo
  getDocTfoById(ido: JSONObject): DocTfo
  getDocTfr(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocTfr!]
  getOneDocTfr(skipBridCheck: Boolean, filter: JSONObject): DocTfr
  getDocTfrById(ido: JSONObject): DocTfr
  getDocPffm(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocPffm!]
  getOneDocPffm(skipBridCheck: Boolean, filter: JSONObject): DocPffm
  getDocPffmById(ido: JSONObject): DocPffm
  getSdal(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Sdal!]
  getOneSdal(skipBridCheck: Boolean, filter: JSONObject): Sdal
  getSdalById(ido: JSONObject): Sdal
  getDocOresv(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocOresv!]
  getOneDocOresv(skipBridCheck: Boolean, filter: JSONObject): DocOresv
  getDocOresvById(ido: JSONObject): DocOresv
  getResvType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [ResvType!]
  getOneResvType(skipBridCheck: Boolean, filter: JSONObject): ResvType
  getResvTypeById(ido: JSONObject): ResvType
  getPdResv(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PdResv!]
  getOnePdResv(skipBridCheck: Boolean, filter: JSONObject): PdResv
  getPdResvById(ido: JSONObject): PdResv
  getPropConfig(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropConfig!]
  getOnePropConfig(skipBridCheck: Boolean, filter: JSONObject): PropConfig
  getPropConfigById(ido: JSONObject): PropConfig
  getPropType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropType!]
  getOnePropType(skipBridCheck: Boolean, filter: JSONObject): PropType
  getPropTypeById(ido: JSONObject): PropType
  getPropUnitType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropUnitType!]
  getOnePropUnitType(skipBridCheck: Boolean, filter: JSONObject): PropUnitType
  getPropUnitTypeById(ido: JSONObject): PropUnitType
  getPropUnit(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropUnit!]
  getOnePropUnit(skipBridCheck: Boolean, filter: JSONObject): PropUnit
  getPropUnitById(ido: JSONObject): PropUnit
  getPropFacility(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropFacility!]
  getOnePropFacility(skipBridCheck: Boolean, filter: JSONObject): PropFacility
  getPropFacilityById(ido: JSONObject): PropFacility
  getPropUnitFacility(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropUnitFacility!]
  getOnePropUnitFacility(skipBridCheck: Boolean, filter: JSONObject): PropUnitFacility
  getPropUnitFacilityById(ido: JSONObject): PropUnitFacility
  getPropBill(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropBill!]
  getOnePropBill(skipBridCheck: Boolean, filter: JSONObject): PropBill
  getPropBillById(ido: JSONObject): PropBill
  getPropServiceItem(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceItem!]
  getOnePropServiceItem(skipBridCheck: Boolean, filter: JSONObject): PropServiceItem
  getPropServiceItemById(ido: JSONObject): PropServiceItem
  getPropServiceUnit(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnit!]
  getOnePropServiceUnit(skipBridCheck: Boolean, filter: JSONObject): PropServiceUnit
  getPropServiceUnitById(ido: JSONObject): PropServiceUnit
  getPropServiceType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceType!]
  getOnePropServiceType(skipBridCheck: Boolean, filter: JSONObject): PropServiceType
  getPropServiceTypeById(ido: JSONObject): PropServiceType
  getPropServiceUnitItem(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [PropServiceUnitItem!]
  getOnePropServiceUnitItem(skipBridCheck: Boolean, filter: JSONObject): PropServiceUnitItem
  getPropServiceUnitItemById(ido: JSONObject): PropServiceUnitItem
  getKitchen(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [Kitchen!]
  getOneKitchen(skipBridCheck: Boolean, filter: JSONObject): Kitchen
  getKitchenById(ido: JSONObject): Kitchen
  getKitchenOrd(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [KitchenOrd!]
  getOneKitchenOrd(skipBridCheck: Boolean, filter: JSONObject): KitchenOrd
  getKitchenOrdById(ido: JSONObject): KitchenOrd
  getRestaMenu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RestaMenu!]
  getOneRestaMenu(skipBridCheck: Boolean, filter: JSONObject): RestaMenu
  getRestaMenuById(ido: JSONObject): RestaMenu
  getDocRestaOrd(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [DocRestaOrd!]
  getOneDocRestaOrd(skipBridCheck: Boolean, filter: JSONObject): DocRestaOrd
  getDocRestaOrdById(ido: JSONObject): DocRestaOrd
  getRestaTable(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RestaTable!]
  getOneRestaTable(skipBridCheck: Boolean, filter: JSONObject): RestaTable
  getRestaTableById(ido: JSONObject): RestaTable
  getRestaArea(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RestaArea!]
  getOneRestaArea(skipBridCheck: Boolean, filter: JSONObject): RestaArea
  getRestaAreaById(ido: JSONObject): RestaArea
  getRestaTableType(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RestaTableType!]
  getOneRestaTableType(skipBridCheck: Boolean, filter: JSONObject): RestaTableType
  getRestaTableTypeById(ido: JSONObject): RestaTableType
  getRestaOptionGroup(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RestaOptionGroup!]
  getOneRestaOptionGroup(skipBridCheck: Boolean, filter: JSONObject): RestaOptionGroup
  getRestaOptionGroupById(ido: JSONObject): RestaOptionGroup
  getRestaBranchMenu(page: Int, limit: Int, skipBridCheck: Boolean, pageInfo: Boolean, filter: JSONObject, sort: JSONObject): [RestaBranchMenu!]
  getOneRestaBranchMenu(skipBridCheck: Boolean, filter: JSONObject): RestaBranchMenu
  getRestaBranchMenuById(ido: JSONObject): RestaBranchMenu
}

type Mutation {
  addBiz(data: BizInput!, numbering: NumberingInput): JSONObject!
  addBizList(data: [BizInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBiz(data: BizInput!): JSONObject!
  updateBizList(data: [BizInput!]!): [JSONObject!]!
  deleteBiz(data: String!): JSONObject!
  deleteBizList(data: [String!]!): JSONObject!
  addUser(data: UserInput!, numbering: NumberingInput): JSONObject!
  addUserList(data: [UserInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateUser(data: UserInput!): JSONObject!
  updateUserList(data: [UserInput!]!): [JSONObject!]!
  deleteUser(data: String!): JSONObject!
  deleteUserList(data: [String!]!): JSONObject!
  addBizUser(data: BizUserInput!, numbering: NumberingInput): JSONObject!
  addBizUserList(data: [BizUserInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBizUser(data: BizUserInput!): JSONObject!
  updateBizUserList(data: [BizUserInput!]!): [JSONObject!]!
  deleteBizUser(data: String!): JSONObject!
  deleteBizUserList(data: [String!]!): JSONObject!
  addPaymentMethod(data: PaymentMethodInput!, numbering: NumberingInput): JSONObject!
  addPaymentMethodList(data: [PaymentMethodInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePaymentMethod(data: PaymentMethodInput!): JSONObject!
  updatePaymentMethodList(data: [PaymentMethodInput!]!): [JSONObject!]!
  deletePaymentMethod(data: String!): JSONObject!
  deletePaymentMethodList(data: [String!]!): JSONObject!
  addCust(data: CustInput!, numbering: NumberingInput): JSONObject!
  addCustList(data: [CustInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCust(data: CustInput!): JSONObject!
  updateCustList(data: [CustInput!]!): [JSONObject!]!
  deleteCust(data: String!): JSONObject!
  deleteCustList(data: [String!]!): JSONObject!
  addCountry(data: CountryInput!, numbering: NumberingInput): JSONObject!
  addCountryList(data: [CountryInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCountry(data: CountryInput!): JSONObject!
  updateCountryList(data: [CountryInput!]!): [JSONObject!]!
  deleteCountry(data: String!): JSONObject!
  deleteCountryList(data: [String!]!): JSONObject!
  addProvince(data: ProvinceInput!, numbering: NumberingInput): JSONObject!
  addProvinceList(data: [ProvinceInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateProvince(data: ProvinceInput!): JSONObject!
  updateProvinceList(data: [ProvinceInput!]!): [JSONObject!]!
  deleteProvince(data: String!): JSONObject!
  deleteProvinceList(data: [String!]!): JSONObject!
  addDistricts(data: DistrictsInput!, numbering: NumberingInput): JSONObject!
  addDistrictsList(data: [DistrictsInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDistricts(data: DistrictsInput!): JSONObject!
  updateDistrictsList(data: [DistrictsInput!]!): [JSONObject!]!
  deleteDistricts(data: String!): JSONObject!
  deleteDistrictsList(data: [String!]!): JSONObject!
  addTown(data: TownInput!, numbering: NumberingInput): JSONObject!
  addTownList(data: [TownInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateTown(data: TownInput!): JSONObject!
  updateTownList(data: [TownInput!]!): [JSONObject!]!
  deleteTown(data: String!): JSONObject!
  deleteTownList(data: [String!]!): JSONObject!
  addLanguage(data: LanguageInput!, numbering: NumberingInput): JSONObject!
  addLanguageList(data: [LanguageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateLanguage(data: LanguageInput!): JSONObject!
  updateLanguageList(data: [LanguageInput!]!): [JSONObject!]!
  deleteLanguage(data: String!): JSONObject!
  deleteLanguageList(data: [String!]!): JSONObject!
  addStatusType(data: StatusTypeInput!, numbering: NumberingInput): JSONObject!
  addStatusTypeList(data: [StatusTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateStatusType(data: StatusTypeInput!): JSONObject!
  updateStatusTypeList(data: [StatusTypeInput!]!): [JSONObject!]!
  deleteStatusType(data: String!): JSONObject!
  deleteStatusTypeList(data: [String!]!): JSONObject!
  addStatus(data: StatusInput!, numbering: NumberingInput): JSONObject!
  addStatusList(data: [StatusInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateStatus(data: StatusInput!): JSONObject!
  updateStatusList(data: [StatusInput!]!): [JSONObject!]!
  deleteStatus(data: String!): JSONObject!
  deleteStatusList(data: [String!]!): JSONObject!
  addTitle(data: TitleInput!, numbering: NumberingInput): JSONObject!
  addTitleList(data: [TitleInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateTitle(data: TitleInput!): JSONObject!
  updateTitleList(data: [TitleInput!]!): [JSONObject!]!
  deleteTitle(data: String!): JSONObject!
  deleteTitleList(data: [String!]!): JSONObject!
  addDataType(data: DataTypeInput!, numbering: NumberingInput): JSONObject!
  addDataTypeList(data: [DataTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDataType(data: DataTypeInput!): JSONObject!
  updateDataTypeList(data: [DataTypeInput!]!): [JSONObject!]!
  deleteDataType(data: String!): JSONObject!
  deleteDataTypeList(data: [String!]!): JSONObject!
  addPd(data: PdInput!, numbering: NumberingInput): JSONObject!
  addPdList(data: [PdInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePd(data: PdInput!): JSONObject!
  updatePdList(data: [PdInput!]!): [JSONObject!]!
  deletePd(data: String!): JSONObject!
  deletePdList(data: [String!]!): JSONObject!
  addWhStorage(data: WhStorageInput!, numbering: NumberingInput): JSONObject!
  addWhStorageList(data: [WhStorageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhStorage(data: WhStorageInput!): JSONObject!
  updateWhStorageList(data: [WhStorageInput!]!): [JSONObject!]!
  deleteWhStorage(data: String!): JSONObject!
  deleteWhStorageList(data: [String!]!): JSONObject!
  addPdStorage(data: PdStorageInput!, numbering: NumberingInput): JSONObject!
  addPdStorageList(data: [PdStorageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdStorage(data: PdStorageInput!): JSONObject!
  updatePdStorageList(data: [PdStorageInput!]!): [JSONObject!]!
  deletePdStorage(data: String!): JSONObject!
  deletePdStorageList(data: [String!]!): JSONObject!
  addCreditTerm(data: CreditTermInput!, numbering: NumberingInput): JSONObject!
  addCreditTermList(data: [CreditTermInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCreditTerm(data: CreditTermInput!): JSONObject!
  updateCreditTermList(data: [CreditTermInput!]!): [JSONObject!]!
  deleteCreditTerm(data: String!): JSONObject!
  deleteCreditTermList(data: [String!]!): JSONObject!
  addUom(data: UomInput!, numbering: NumberingInput): JSONObject!
  addUomList(data: [UomInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateUom(data: UomInput!): JSONObject!
  updateUomList(data: [UomInput!]!): [JSONObject!]!
  deleteUom(data: String!): JSONObject!
  deleteUomList(data: [String!]!): JSONObject!
  addTax(data: TaxInput!, numbering: NumberingInput): JSONObject!
  addTaxList(data: [TaxInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateTax(data: TaxInput!): JSONObject!
  updateTaxList(data: [TaxInput!]!): [JSONObject!]!
  deleteTax(data: String!): JSONObject!
  deleteTaxList(data: [String!]!): JSONObject!
  addCustGroup(data: CustGroupInput!, numbering: NumberingInput): JSONObject!
  addCustGroupList(data: [CustGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCustGroup(data: CustGroupInput!): JSONObject!
  updateCustGroupList(data: [CustGroupInput!]!): [JSONObject!]!
  deleteCustGroup(data: String!): JSONObject!
  deleteCustGroupList(data: [String!]!): JSONObject!
  addSuppGroup(data: SuppGroupInput!, numbering: NumberingInput): JSONObject!
  addSuppGroupList(data: [SuppGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSuppGroup(data: SuppGroupInput!): JSONObject!
  updateSuppGroupList(data: [SuppGroupInput!]!): [JSONObject!]!
  deleteSuppGroup(data: String!): JSONObject!
  deleteSuppGroupList(data: [String!]!): JSONObject!
  addCpd(data: CpdInput!, numbering: NumberingInput): JSONObject!
  addCpdList(data: [CpdInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCpd(data: CpdInput!): JSONObject!
  updateCpdList(data: [CpdInput!]!): [JSONObject!]!
  deleteCpd(data: String!): JSONObject!
  deleteCpdList(data: [String!]!): JSONObject!
  addSkill(data: SkillInput!, numbering: NumberingInput): JSONObject!
  addSkillList(data: [SkillInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSkill(data: SkillInput!): JSONObject!
  updateSkillList(data: [SkillInput!]!): [JSONObject!]!
  deleteSkill(data: String!): JSONObject!
  deleteSkillList(data: [String!]!): JSONObject!
  addBizUserGrp(data: BizUserGrpInput!, numbering: NumberingInput): JSONObject!
  addBizUserGrpList(data: [BizUserGrpInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBizUserGrp(data: BizUserGrpInput!): JSONObject!
  updateBizUserGrpList(data: [BizUserGrpInput!]!): [JSONObject!]!
  deleteBizUserGrp(data: String!): JSONObject!
  deleteBizUserGrpList(data: [String!]!): JSONObject!
  addBizUserRole(data: BizUserRoleInput!, numbering: NumberingInput): JSONObject!
  addBizUserRoleList(data: [BizUserRoleInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBizUserRole(data: BizUserRoleInput!): JSONObject!
  updateBizUserRoleList(data: [BizUserRoleInput!]!): [JSONObject!]!
  deleteBizUserRole(data: String!): JSONObject!
  deleteBizUserRoleList(data: [String!]!): JSONObject!
  addDocAriv(data: DocArivInput!, numbering: NumberingInput): JSONObject!
  addDocArivList(data: [DocArivInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocAriv(data: DocArivInput!): JSONObject!
  updateDocArivList(data: [DocArivInput!]!): [JSONObject!]!
  deleteDocAriv(data: String!): JSONObject!
  deleteDocArivList(data: [String!]!): JSONObject!
  addDiscGroup(data: DiscGroupInput!, numbering: NumberingInput): JSONObject!
  addDiscGroupList(data: [DiscGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDiscGroup(data: DiscGroupInput!): JSONObject!
  updateDiscGroupList(data: [DiscGroupInput!]!): [JSONObject!]!
  deleteDiscGroup(data: String!): JSONObject!
  deleteDiscGroupList(data: [String!]!): JSONObject!
  addDocPo(data: DocPoInput!, numbering: NumberingInput): JSONObject!
  addDocPoList(data: [DocPoInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocPo(data: DocPoInput!): JSONObject!
  updateDocPoList(data: [DocPoInput!]!): [JSONObject!]!
  deleteDocPo(data: String!): JSONObject!
  deleteDocPoList(data: [String!]!): JSONObject!
  addRefDoc(data: RefDocInput!, numbering: NumberingInput): JSONObject!
  addRefDocList(data: [RefDocInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRefDoc(data: RefDocInput!): JSONObject!
  updateRefDocList(data: [RefDocInput!]!): [JSONObject!]!
  deleteRefDoc(data: String!): JSONObject!
  deleteRefDocList(data: [String!]!): JSONObject!
  addChequeDisbursed(data: ChequeDisbursedInput!, numbering: NumberingInput): JSONObject!
  addChequeDisbursedList(data: [ChequeDisbursedInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateChequeDisbursed(data: ChequeDisbursedInput!): JSONObject!
  updateChequeDisbursedList(data: [ChequeDisbursedInput!]!): [JSONObject!]!
  deleteChequeDisbursed(data: String!): JSONObject!
  deleteChequeDisbursedList(data: [String!]!): JSONObject!
  addBank(data: BankInput!, numbering: NumberingInput): JSONObject!
  addBankList(data: [BankInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBank(data: BankInput!): JSONObject!
  updateBankList(data: [BankInput!]!): [JSONObject!]!
  deleteBank(data: String!): JSONObject!
  deleteBankList(data: [String!]!): JSONObject!
  addChequeReceived(data: ChequeReceivedInput!, numbering: NumberingInput): JSONObject!
  addChequeReceivedList(data: [ChequeReceivedInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateChequeReceived(data: ChequeReceivedInput!): JSONObject!
  updateChequeReceivedList(data: [ChequeReceivedInput!]!): [JSONObject!]!
  deleteChequeReceived(data: String!): JSONObject!
  deleteChequeReceivedList(data: [String!]!): JSONObject!
  addChequeType(data: ChequeTypeInput!, numbering: NumberingInput): JSONObject!
  addChequeTypeList(data: [ChequeTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateChequeType(data: ChequeTypeInput!): JSONObject!
  updateChequeTypeList(data: [ChequeTypeInput!]!): [JSONObject!]!
  deleteChequeType(data: String!): JSONObject!
  deleteChequeTypeList(data: [String!]!): JSONObject!
  addDocGrn(data: DocGrnInput!, numbering: NumberingInput): JSONObject!
  addDocGrnList(data: [DocGrnInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocGrn(data: DocGrnInput!): JSONObject!
  updateDocGrnList(data: [DocGrnInput!]!): [JSONObject!]!
  deleteDocGrn(data: String!): JSONObject!
  deleteDocGrnList(data: [String!]!): JSONObject!
  addDocRunningGroup(data: DocRunningGroupInput!, numbering: NumberingInput): JSONObject!
  addDocRunningGroupList(data: [DocRunningGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocRunningGroup(data: DocRunningGroupInput!): JSONObject!
  updateDocRunningGroupList(data: [DocRunningGroupInput!]!): [JSONObject!]!
  deleteDocRunningGroup(data: String!): JSONObject!
  deleteDocRunningGroupList(data: [String!]!): JSONObject!
  addTranslationOption(data: TranslationOptionInput!, numbering: NumberingInput): JSONObject!
  addTranslationOptionList(data: [TranslationOptionInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateTranslationOption(data: TranslationOptionInput!): JSONObject!
  updateTranslationOptionList(data: [TranslationOptionInput!]!): [JSONObject!]!
  deleteTranslationOption(data: String!): JSONObject!
  deleteTranslationOptionList(data: [String!]!): JSONObject!
  addBizLanguage(data: BizLanguageInput!, numbering: NumberingInput): JSONObject!
  addBizLanguageList(data: [BizLanguageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBizLanguage(data: BizLanguageInput!): JSONObject!
  updateBizLanguageList(data: [BizLanguageInput!]!): [JSONObject!]!
  deleteBizLanguage(data: String!): JSONObject!
  deleteBizLanguageList(data: [String!]!): JSONObject!
  addPdType(data: PdTypeInput!, numbering: NumberingInput): JSONObject!
  addPdTypeList(data: [PdTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdType(data: PdTypeInput!): JSONObject!
  updatePdTypeList(data: [PdTypeInput!]!): [JSONObject!]!
  deletePdType(data: String!): JSONObject!
  deletePdTypeList(data: [String!]!): JSONObject!
  addPdGroup(data: PdGroupInput!, numbering: NumberingInput): JSONObject!
  addPdGroupList(data: [PdGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdGroup(data: PdGroupInput!): JSONObject!
  updatePdGroupList(data: [PdGroupInput!]!): [JSONObject!]!
  deletePdGroup(data: String!): JSONObject!
  deletePdGroupList(data: [String!]!): JSONObject!
  addDocGin(data: DocGinInput!, numbering: NumberingInput): JSONObject!
  addDocGinList(data: [DocGinInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocGin(data: DocGinInput!): JSONObject!
  updateDocGinList(data: [DocGinInput!]!): [JSONObject!]!
  deleteDocGin(data: String!): JSONObject!
  deleteDocGinList(data: [String!]!): JSONObject!
  addDataFormConfig(data: DataFormConfigInput!, numbering: NumberingInput): JSONObject!
  addDataFormConfigList(data: [DataFormConfigInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDataFormConfig(data: DataFormConfigInput!): JSONObject!
  updateDataFormConfigList(data: [DataFormConfigInput!]!): [JSONObject!]!
  deleteDataFormConfig(data: String!): JSONObject!
  deleteDataFormConfigList(data: [String!]!): JSONObject!
  addPdUom(data: PdUomInput!, numbering: NumberingInput): JSONObject!
  addPdUomList(data: [PdUomInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdUom(data: PdUomInput!): JSONObject!
  updatePdUomList(data: [PdUomInput!]!): [JSONObject!]!
  deletePdUom(data: String!): JSONObject!
  deletePdUomList(data: [String!]!): JSONObject!
  addDocIva(data: DocIvaInput!, numbering: NumberingInput): JSONObject!
  addDocIvaList(data: [DocIvaInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocIva(data: DocIvaInput!): JSONObject!
  updateDocIvaList(data: [DocIvaInput!]!): [JSONObject!]!
  deleteDocIva(data: String!): JSONObject!
  deleteDocIvaList(data: [String!]!): JSONObject!
  addDocApiv(data: DocApivInput!, numbering: NumberingInput): JSONObject!
  addDocApivList(data: [DocApivInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocApiv(data: DocApivInput!): JSONObject!
  updateDocApivList(data: [DocApivInput!]!): [JSONObject!]!
  deleteDocApiv(data: String!): JSONObject!
  deleteDocApivList(data: [String!]!): JSONObject!
  addDocPos(data: DocPosInput!, numbering: NumberingInput): JSONObject!
  addDocPosList(data: [DocPosInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocPos(data: DocPosInput!): JSONObject!
  updateDocPosList(data: [DocPosInput!]!): [JSONObject!]!
  deleteDocPos(data: String!): JSONObject!
  deleteDocPosList(data: [String!]!): JSONObject!
  addCurrency(data: CurrencyInput!, numbering: NumberingInput): JSONObject!
  addCurrencyList(data: [CurrencyInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCurrency(data: CurrencyInput!): JSONObject!
  updateCurrencyList(data: [CurrencyInput!]!): [JSONObject!]!
  deleteCurrency(data: String!): JSONObject!
  deleteCurrencyList(data: [String!]!): JSONObject!
  addPdBal(data: PdBalInput!, numbering: NumberingInput): JSONObject!
  addPdBalList(data: [PdBalInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdBal(data: PdBalInput!): JSONObject!
  updatePdBalList(data: [PdBalInput!]!): [JSONObject!]!
  deletePdBal(data: String!): JSONObject!
  deletePdBalList(data: [String!]!): JSONObject!
  addPdStorageBal(data: PdStorageBalInput!, numbering: NumberingInput): JSONObject!
  addPdStorageBalList(data: [PdStorageBalInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdStorageBal(data: PdStorageBalInput!): JSONObject!
  updatePdStorageBalList(data: [PdStorageBalInput!]!): [JSONObject!]!
  deletePdStorageBal(data: String!): JSONObject!
  deletePdStorageBalList(data: [String!]!): JSONObject!
  addDocShip(data: DocShipInput!, numbering: NumberingInput): JSONObject!
  addDocShipList(data: [DocShipInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocShip(data: DocShipInput!): JSONObject!
  updateDocShipList(data: [DocShipInput!]!): [JSONObject!]!
  deleteDocShip(data: String!): JSONObject!
  deleteDocShipList(data: [String!]!): JSONObject!
  addPosDevice(data: PosDeviceInput!, numbering: NumberingInput): JSONObject!
  addPosDeviceList(data: [PosDeviceInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePosDevice(data: PosDeviceInput!): JSONObject!
  updatePosDeviceList(data: [PosDeviceInput!]!): [JSONObject!]!
  deletePosDevice(data: String!): JSONObject!
  deletePosDeviceList(data: [String!]!): JSONObject!
  addBranch(data: BranchInput!, numbering: NumberingInput): JSONObject!
  addBranchList(data: [BranchInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBranch(data: BranchInput!): JSONObject!
  updateBranchList(data: [BranchInput!]!): [JSONObject!]!
  deleteBranch(data: String!): JSONObject!
  deleteBranchList(data: [String!]!): JSONObject!
  addPdCate(data: PdCateInput!, numbering: NumberingInput): JSONObject!
  addPdCateList(data: [PdCateInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdCate(data: PdCateInput!): JSONObject!
  updatePdCateList(data: [PdCateInput!]!): [JSONObject!]!
  deletePdCate(data: String!): JSONObject!
  deletePdCateList(data: [String!]!): JSONObject!
  addPdSubcate(data: PdSubcateInput!, numbering: NumberingInput): JSONObject!
  addPdSubcateList(data: [PdSubcateInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdSubcate(data: PdSubcateInput!): JSONObject!
  updatePdSubcateList(data: [PdSubcateInput!]!): [JSONObject!]!
  deletePdSubcate(data: String!): JSONObject!
  deletePdSubcateList(data: [String!]!): JSONObject!
  addPriceGroup(data: PriceGroupInput!, numbering: NumberingInput): JSONObject!
  addPriceGroupList(data: [PriceGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePriceGroup(data: PriceGroupInput!): JSONObject!
  updatePriceGroupList(data: [PriceGroupInput!]!): [JSONObject!]!
  deletePriceGroup(data: String!): JSONObject!
  deletePriceGroupList(data: [String!]!): JSONObject!
  addPriceBook(data: PriceBookInput!, numbering: NumberingInput): JSONObject!
  addPriceBookList(data: [PriceBookInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePriceBook(data: PriceBookInput!): JSONObject!
  updatePriceBookList(data: [PriceBookInput!]!): [JSONObject!]!
  deletePriceBook(data: String!): JSONObject!
  deletePriceBookList(data: [String!]!): JSONObject!
  addPriceBookItem(data: PriceBookItemInput!, numbering: NumberingInput): JSONObject!
  addPriceBookItemList(data: [PriceBookItemInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePriceBookItem(data: PriceBookItemInput!): JSONObject!
  updatePriceBookItemList(data: [PriceBookItemInput!]!): [JSONObject!]!
  deletePriceBookItem(data: String!): JSONObject!
  deletePriceBookItemList(data: [String!]!): JSONObject!
  addPriceBookCascade(data: PriceBookCascadeInput!, numbering: NumberingInput): JSONObject!
  addPriceBookCascadeList(data: [PriceBookCascadeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePriceBookCascade(data: PriceBookCascadeInput!): JSONObject!
  updatePriceBookCascadeList(data: [PriceBookCascadeInput!]!): [JSONObject!]!
  deletePriceBookCascade(data: String!): JSONObject!
  deletePriceBookCascadeList(data: [String!]!): JSONObject!
  addCate(data: CateInput!, numbering: NumberingInput): JSONObject!
  addCateList(data: [CateInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCate(data: CateInput!): JSONObject!
  updateCateList(data: [CateInput!]!): [JSONObject!]!
  deleteCate(data: String!): JSONObject!
  deleteCateList(data: [String!]!): JSONObject!
  addSubcate(data: SubcateInput!, numbering: NumberingInput): JSONObject!
  addSubcateList(data: [SubcateInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSubcate(data: SubcateInput!): JSONObject!
  updateSubcateList(data: [SubcateInput!]!): [JSONObject!]!
  deleteSubcate(data: String!): JSONObject!
  deleteSubcateList(data: [String!]!): JSONObject!
  addDocArc(data: DocArcInput!, numbering: NumberingInput): JSONObject!
  addDocArcList(data: [DocArcInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocArc(data: DocArcInput!): JSONObject!
  updateDocArcList(data: [DocArcInput!]!): [JSONObject!]!
  deleteDocArc(data: String!): JSONObject!
  deleteDocArcList(data: [String!]!): JSONObject!
  addDocArcItem(data: DocArcItemInput!, numbering: NumberingInput): JSONObject!
  addDocArcItemList(data: [DocArcItemInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocArcItem(data: DocArcItemInput!): JSONObject!
  updateDocArcItemList(data: [DocArcItemInput!]!): [JSONObject!]!
  deleteDocArcItem(data: String!): JSONObject!
  deleteDocArcItemList(data: [String!]!): JSONObject!
  addPeriod(data: PeriodInput!, numbering: NumberingInput): JSONObject!
  addPeriodList(data: [PeriodInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePeriod(data: PeriodInput!): JSONObject!
  updatePeriodList(data: [PeriodInput!]!): [JSONObject!]!
  deletePeriod(data: String!): JSONObject!
  deletePeriodList(data: [String!]!): JSONObject!
  addRtp(data: RtpInput!, numbering: NumberingInput): JSONObject!
  addRtpList(data: [RtpInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRtp(data: RtpInput!): JSONObject!
  updateRtpList(data: [RtpInput!]!): [JSONObject!]!
  deleteRtp(data: String!): JSONObject!
  deleteRtpList(data: [String!]!): JSONObject!
  addCountryTranslationOption(data: CountryTranslationOptionInput!, numbering: NumberingInput): JSONObject!
  addCountryTranslationOptionList(data: [CountryTranslationOptionInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCountryTranslationOption(data: CountryTranslationOptionInput!): JSONObject!
  updateCountryTranslationOptionList(data: [CountryTranslationOptionInput!]!): [JSONObject!]!
  deleteCountryTranslationOption(data: String!): JSONObject!
  deleteCountryTranslationOptionList(data: [String!]!): JSONObject!
  addBizTranslationOption(data: BizTranslationOptionInput!, numbering: NumberingInput): JSONObject!
  addBizTranslationOptionList(data: [BizTranslationOptionInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBizTranslationOption(data: BizTranslationOptionInput!): JSONObject!
  updateBizTranslationOptionList(data: [BizTranslationOptionInput!]!): [JSONObject!]!
  deleteBizTranslationOption(data: String!): JSONObject!
  deleteBizTranslationOptionList(data: [String!]!): JSONObject!
  addAppMenu(data: AppMenuInput!, numbering: NumberingInput): JSONObject!
  addAppMenuList(data: [AppMenuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAppMenu(data: AppMenuInput!): JSONObject!
  updateAppMenuList(data: [AppMenuInput!]!): [JSONObject!]!
  deleteAppMenu(data: String!): JSONObject!
  deleteAppMenuList(data: [String!]!): JSONObject!
  addUserToken(data: UserTokenInput!, numbering: NumberingInput): JSONObject!
  addUserTokenList(data: [UserTokenInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateUserToken(data: UserTokenInput!): JSONObject!
  updateUserTokenList(data: [UserTokenInput!]!): [JSONObject!]!
  deleteUserToken(data: String!): JSONObject!
  deleteUserTokenList(data: [String!]!): JSONObject!
  addAsset(data: AssetInput!, numbering: NumberingInput): JSONObject!
  addAssetList(data: [AssetInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAsset(data: AssetInput!): JSONObject!
  updateAssetList(data: [AssetInput!]!): [JSONObject!]!
  deleteAsset(data: String!): JSONObject!
  deleteAssetList(data: [String!]!): JSONObject!
  addAssetStorage(data: AssetStorageInput!, numbering: NumberingInput): JSONObject!
  addAssetStorageList(data: [AssetStorageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAssetStorage(data: AssetStorageInput!): JSONObject!
  updateAssetStorageList(data: [AssetStorageInput!]!): [JSONObject!]!
  deleteAssetStorage(data: String!): JSONObject!
  deleteAssetStorageList(data: [String!]!): JSONObject!
  addAppType(data: AppTypeInput!, numbering: NumberingInput): JSONObject!
  addAppTypeList(data: [AppTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAppType(data: AppTypeInput!): JSONObject!
  updateAppTypeList(data: [AppTypeInput!]!): [JSONObject!]!
  deleteAppType(data: String!): JSONObject!
  deleteAppTypeList(data: [String!]!): JSONObject!
  addSupp(data: SuppInput!, numbering: NumberingInput): JSONObject!
  addSuppList(data: [SuppInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSupp(data: SuppInput!): JSONObject!
  updateSuppList(data: [SuppInput!]!): [JSONObject!]!
  deleteSupp(data: String!): JSONObject!
  deleteSuppList(data: [String!]!): JSONObject!
  addSpd(data: SpdInput!, numbering: NumberingInput): JSONObject!
  addSpdList(data: [SpdInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSpd(data: SpdInput!): JSONObject!
  updateSpdList(data: [SpdInput!]!): [JSONObject!]!
  deleteSpd(data: String!): JSONObject!
  deleteSpdList(data: [String!]!): JSONObject!
  addDocSo(data: DocSoInput!, numbering: NumberingInput): JSONObject!
  addDocSoList(data: [DocSoInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocSo(data: DocSoInput!): JSONObject!
  updateDocSoList(data: [DocSoInput!]!): [JSONObject!]!
  deleteDocSo(data: String!): JSONObject!
  deleteDocSoList(data: [String!]!): JSONObject!
  addDeliveryMethod(data: DeliveryMethodInput!, numbering: NumberingInput): JSONObject!
  addDeliveryMethodList(data: [DeliveryMethodInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDeliveryMethod(data: DeliveryMethodInput!): JSONObject!
  updateDeliveryMethodList(data: [DeliveryMethodInput!]!): [JSONObject!]!
  deleteDeliveryMethod(data: String!): JSONObject!
  deleteDeliveryMethodList(data: [String!]!): JSONObject!
  addRentalType(data: RentalTypeInput!, numbering: NumberingInput): JSONObject!
  addRentalTypeList(data: [RentalTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRentalType(data: RentalTypeInput!): JSONObject!
  updateRentalTypeList(data: [RentalTypeInput!]!): [JSONObject!]!
  deleteRentalType(data: String!): JSONObject!
  deleteRentalTypeList(data: [String!]!): JSONObject!
  addPaymentCondition(data: PaymentConditionInput!, numbering: NumberingInput): JSONObject!
  addPaymentConditionList(data: [PaymentConditionInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePaymentCondition(data: PaymentConditionInput!): JSONObject!
  updatePaymentConditionList(data: [PaymentConditionInput!]!): [JSONObject!]!
  deletePaymentCondition(data: String!): JSONObject!
  deletePaymentConditionList(data: [String!]!): JSONObject!
  addBrand(data: BrandInput!, numbering: NumberingInput): JSONObject!
  addBrandList(data: [BrandInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBrand(data: BrandInput!): JSONObject!
  updateBrandList(data: [BrandInput!]!): [JSONObject!]!
  deleteBrand(data: String!): JSONObject!
  deleteBrandList(data: [String!]!): JSONObject!
  addColor(data: ColorInput!, numbering: NumberingInput): JSONObject!
  addColorList(data: [ColorInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateColor(data: ColorInput!): JSONObject!
  updateColorList(data: [ColorInput!]!): [JSONObject!]!
  deleteColor(data: String!): JSONObject!
  deleteColorList(data: [String!]!): JSONObject!
  addDocCdj(data: DocCdjInput!, numbering: NumberingInput): JSONObject!
  addDocCdjList(data: [DocCdjInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocCdj(data: DocCdjInput!): JSONObject!
  updateDocCdjList(data: [DocCdjInput!]!): [JSONObject!]!
  deleteDocCdj(data: String!): JSONObject!
  deleteDocCdjList(data: [String!]!): JSONObject!
  addExpense(data: ExpenseInput!, numbering: NumberingInput): JSONObject!
  addExpenseList(data: [ExpenseInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateExpense(data: ExpenseInput!): JSONObject!
  updateExpenseList(data: [ExpenseInput!]!): [JSONObject!]!
  deleteExpense(data: String!): JSONObject!
  deleteExpenseList(data: [String!]!): JSONObject!
  addRevenue(data: RevenueInput!, numbering: NumberingInput): JSONObject!
  addRevenueList(data: [RevenueInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRevenue(data: RevenueInput!): JSONObject!
  updateRevenueList(data: [RevenueInput!]!): [JSONObject!]!
  deleteRevenue(data: String!): JSONObject!
  deleteRevenueList(data: [String!]!): JSONObject!
  addDocCrj(data: DocCrjInput!, numbering: NumberingInput): JSONObject!
  addDocCrjList(data: [DocCrjInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocCrj(data: DocCrjInput!): JSONObject!
  updateDocCrjList(data: [DocCrjInput!]!): [JSONObject!]!
  deleteDocCrj(data: String!): JSONObject!
  deleteDocCrjList(data: [String!]!): JSONObject!
  addDocArr(data: DocArrInput!, numbering: NumberingInput): JSONObject!
  addDocArrList(data: [DocArrInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocArr(data: DocArrInput!): JSONObject!
  updateDocArrList(data: [DocArrInput!]!): [JSONObject!]!
  deleteDocArr(data: String!): JSONObject!
  deleteDocArrList(data: [String!]!): JSONObject!
  addDocNar(data: DocNarInput!, numbering: NumberingInput): JSONObject!
  addDocNarList(data: [DocNarInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocNar(data: DocNarInput!): JSONObject!
  updateDocNarList(data: [DocNarInput!]!): [JSONObject!]!
  deleteDocNar(data: String!): JSONObject!
  deleteDocNarList(data: [String!]!): JSONObject!
  addDocNarItem(data: DocNarItemInput!, numbering: NumberingInput): JSONObject!
  addDocNarItemList(data: [DocNarItemInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocNarItem(data: DocNarItemInput!): JSONObject!
  updateDocNarItemList(data: [DocNarItemInput!]!): [JSONObject!]!
  deleteDocNarItem(data: String!): JSONObject!
  deleteDocNarItemList(data: [String!]!): JSONObject!
  addPdBranch(data: PdBranchInput!, numbering: NumberingInput): JSONObject!
  addPdBranchList(data: [PdBranchInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdBranch(data: PdBranchInput!): JSONObject!
  updatePdBranchList(data: [PdBranchInput!]!): [JSONObject!]!
  deletePdBranch(data: String!): JSONObject!
  deletePdBranchList(data: [String!]!): JSONObject!
  addAssetBranch(data: AssetBranchInput!, numbering: NumberingInput): JSONObject!
  addAssetBranchList(data: [AssetBranchInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAssetBranch(data: AssetBranchInput!): JSONObject!
  updateAssetBranchList(data: [AssetBranchInput!]!): [JSONObject!]!
  deleteAssetBranch(data: String!): JSONObject!
  deleteAssetBranchList(data: [String!]!): JSONObject!
  addDocArrItem(data: DocArrItemInput!, numbering: NumberingInput): JSONObject!
  addDocArrItemList(data: [DocArrItemInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocArrItem(data: DocArrItemInput!): JSONObject!
  updateDocArrItemList(data: [DocArrItemInput!]!): [JSONObject!]!
  deleteDocArrItem(data: String!): JSONObject!
  deleteDocArrItemList(data: [String!]!): JSONObject!
  addDocReceipt(data: DocReceiptInput!, numbering: NumberingInput): JSONObject!
  addDocReceiptList(data: [DocReceiptInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocReceipt(data: DocReceiptInput!): JSONObject!
  updateDocReceiptList(data: [DocReceiptInput!]!): [JSONObject!]!
  deleteDocReceipt(data: String!): JSONObject!
  deleteDocReceiptList(data: [String!]!): JSONObject!
  addBankAccountType(data: BankAccountTypeInput!, numbering: NumberingInput): JSONObject!
  addBankAccountTypeList(data: [BankAccountTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBankAccountType(data: BankAccountTypeInput!): JSONObject!
  updateBankAccountTypeList(data: [BankAccountTypeInput!]!): [JSONObject!]!
  deleteBankAccountType(data: String!): JSONObject!
  deleteBankAccountTypeList(data: [String!]!): JSONObject!
  addBankAccount(data: BankAccountInput!, numbering: NumberingInput): JSONObject!
  addBankAccountList(data: [BankAccountInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBankAccount(data: BankAccountInput!): JSONObject!
  updateBankAccountList(data: [BankAccountInput!]!): [JSONObject!]!
  deleteBankAccount(data: String!): JSONObject!
  deleteBankAccountList(data: [String!]!): JSONObject!
  addCardType(data: CardTypeInput!, numbering: NumberingInput): JSONObject!
  addCardTypeList(data: [CardTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCardType(data: CardTypeInput!): JSONObject!
  updateCardTypeList(data: [CardTypeInput!]!): [JSONObject!]!
  deleteCardType(data: String!): JSONObject!
  deleteCardTypeList(data: [String!]!): JSONObject!
  addPaymentChannel(data: PaymentChannelInput!, numbering: NumberingInput): JSONObject!
  addPaymentChannelList(data: [PaymentChannelInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePaymentChannel(data: PaymentChannelInput!): JSONObject!
  updatePaymentChannelList(data: [PaymentChannelInput!]!): [JSONObject!]!
  deletePaymentChannel(data: String!): JSONObject!
  deletePaymentChannelList(data: [String!]!): JSONObject!
  addAppRoute(data: AppRouteInput!, numbering: NumberingInput): JSONObject!
  addAppRouteList(data: [AppRouteInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAppRoute(data: AppRouteInput!): JSONObject!
  updateAppRouteList(data: [AppRouteInput!]!): [JSONObject!]!
  deleteAppRoute(data: String!): JSONObject!
  deleteAppRouteList(data: [String!]!): JSONObject!
  addPdAttribute(data: PdAttributeInput!, numbering: NumberingInput): JSONObject!
  addPdAttributeList(data: [PdAttributeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdAttribute(data: PdAttributeInput!): JSONObject!
  updatePdAttributeList(data: [PdAttributeInput!]!): [JSONObject!]!
  deletePdAttribute(data: String!): JSONObject!
  deletePdAttributeList(data: [String!]!): JSONObject!
  addWh(data: WhInput!, numbering: NumberingInput): JSONObject!
  addWhList(data: [WhInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWh(data: WhInput!): JSONObject!
  updateWhList(data: [WhInput!]!): [JSONObject!]!
  deleteWh(data: String!): JSONObject!
  deleteWhList(data: [String!]!): JSONObject!
  addPdWh(data: PdWhInput!, numbering: NumberingInput): JSONObject!
  addPdWhList(data: [PdWhInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdWh(data: PdWhInput!): JSONObject!
  updatePdWhList(data: [PdWhInput!]!): [JSONObject!]!
  deletePdWh(data: String!): JSONObject!
  deletePdWhList(data: [String!]!): JSONObject!
  addSalesChannel(data: SalesChannelInput!, numbering: NumberingInput): JSONObject!
  addSalesChannelList(data: [SalesChannelInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSalesChannel(data: SalesChannelInput!): JSONObject!
  updateSalesChannelList(data: [SalesChannelInput!]!): [JSONObject!]!
  deleteSalesChannel(data: String!): JSONObject!
  deleteSalesChannelList(data: [String!]!): JSONObject!
  addPdLot(data: PdLotInput!, numbering: NumberingInput): JSONObject!
  addPdLotList(data: [PdLotInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdLot(data: PdLotInput!): JSONObject!
  updatePdLotList(data: [PdLotInput!]!): [JSONObject!]!
  deletePdLot(data: String!): JSONObject!
  deletePdLotList(data: [String!]!): JSONObject!
  addPdLotStorage(data: PdLotStorageInput!, numbering: NumberingInput): JSONObject!
  addPdLotStorageList(data: [PdLotStorageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdLotStorage(data: PdLotStorageInput!): JSONObject!
  updatePdLotStorageList(data: [PdLotStorageInput!]!): [JSONObject!]!
  deletePdLotStorage(data: String!): JSONObject!
  deletePdLotStorageList(data: [String!]!): JSONObject!
  addPdSn(data: PdSnInput!, numbering: NumberingInput): JSONObject!
  addPdSnList(data: [PdSnInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdSn(data: PdSnInput!): JSONObject!
  updatePdSnList(data: [PdSnInput!]!): [JSONObject!]!
  deletePdSn(data: String!): JSONObject!
  deletePdSnList(data: [String!]!): JSONObject!
  addCpdStorage(data: CpdStorageInput!, numbering: NumberingInput): JSONObject!
  addCpdStorageList(data: [CpdStorageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateCpdStorage(data: CpdStorageInput!): JSONObject!
  updateCpdStorageList(data: [CpdStorageInput!]!): [JSONObject!]!
  deleteCpdStorage(data: String!): JSONObject!
  deleteCpdStorageList(data: [String!]!): JSONObject!
  addSpdStorage(data: SpdStorageInput!, numbering: NumberingInput): JSONObject!
  addSpdStorageList(data: [SpdStorageInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSpdStorage(data: SpdStorageInput!): JSONObject!
  updateSpdStorageList(data: [SpdStorageInput!]!): [JSONObject!]!
  deleteSpdStorage(data: String!): JSONObject!
  deleteSpdStorageList(data: [String!]!): JSONObject!
  addDocDso(data: DocDsoInput!, numbering: NumberingInput): JSONObject!
  addDocDsoList(data: [DocDsoInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocDso(data: DocDsoInput!): JSONObject!
  updateDocDsoList(data: [DocDsoInput!]!): [JSONObject!]!
  deleteDocDso(data: String!): JSONObject!
  deleteDocDsoList(data: [String!]!): JSONObject!
  addBizAllowed(data: BizAllowedInput!, numbering: NumberingInput): JSONObject!
  addBizAllowedList(data: [BizAllowedInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateBizAllowed(data: BizAllowedInput!): JSONObject!
  updateBizAllowedList(data: [BizAllowedInput!]!): [JSONObject!]!
  deleteBizAllowed(data: String!): JSONObject!
  deleteBizAllowedList(data: [String!]!): JSONObject!
  addInvTrn(data: InvTrnInput!, numbering: NumberingInput): JSONObject!
  addInvTrnList(data: [InvTrnInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateInvTrn(data: InvTrnInput!): JSONObject!
  updateInvTrnList(data: [InvTrnInput!]!): [JSONObject!]!
  deleteInvTrn(data: String!): JSONObject!
  deleteInvTrnList(data: [String!]!): JSONObject!
  addAppModule(data: AppModuleInput!, numbering: NumberingInput): JSONObject!
  addAppModuleList(data: [AppModuleInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAppModule(data: AppModuleInput!): JSONObject!
  updateAppModuleList(data: [AppModuleInput!]!): [JSONObject!]!
  deleteAppModule(data: String!): JSONObject!
  deleteAppModuleList(data: [String!]!): JSONObject!
  addAssetWh(data: AssetWhInput!, numbering: NumberingInput): JSONObject!
  addAssetWhList(data: [AssetWhInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateAssetWh(data: AssetWhInput!): JSONObject!
  updateAssetWhList(data: [AssetWhInput!]!): [JSONObject!]!
  deleteAssetWh(data: String!): JSONObject!
  deleteAssetWhList(data: [String!]!): JSONObject!
  addPdCostStack(data: PdCostStackInput!, numbering: NumberingInput): JSONObject!
  addPdCostStackList(data: [PdCostStackInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdCostStack(data: PdCostStackInput!): JSONObject!
  updatePdCostStackList(data: [PdCostStackInput!]!): [JSONObject!]!
  deletePdCostStack(data: String!): JSONObject!
  deletePdCostStackList(data: [String!]!): JSONObject!
  addWhStorageType(data: WhStorageTypeInput!, numbering: NumberingInput): JSONObject!
  addWhStorageTypeList(data: [WhStorageTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhStorageType(data: WhStorageTypeInput!): JSONObject!
  updateWhStorageTypeList(data: [WhStorageTypeInput!]!): [JSONObject!]!
  deleteWhStorageType(data: String!): JSONObject!
  deleteWhStorageTypeList(data: [String!]!): JSONObject!
  addWhZone(data: WhZoneInput!, numbering: NumberingInput): JSONObject!
  addWhZoneList(data: [WhZoneInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhZone(data: WhZoneInput!): JSONObject!
  updateWhZoneList(data: [WhZoneInput!]!): [JSONObject!]!
  deleteWhZone(data: String!): JSONObject!
  deleteWhZoneList(data: [String!]!): JSONObject!
  addWhAisle(data: WhAisleInput!, numbering: NumberingInput): JSONObject!
  addWhAisleList(data: [WhAisleInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhAisle(data: WhAisleInput!): JSONObject!
  updateWhAisleList(data: [WhAisleInput!]!): [JSONObject!]!
  deleteWhAisle(data: String!): JSONObject!
  deleteWhAisleList(data: [String!]!): JSONObject!
  addWhRack(data: WhRackInput!, numbering: NumberingInput): JSONObject!
  addWhRackList(data: [WhRackInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhRack(data: WhRackInput!): JSONObject!
  updateWhRackList(data: [WhRackInput!]!): [JSONObject!]!
  deleteWhRack(data: String!): JSONObject!
  deleteWhRackList(data: [String!]!): JSONObject!
  addWhShelf(data: WhShelfInput!, numbering: NumberingInput): JSONObject!
  addWhShelfList(data: [WhShelfInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhShelf(data: WhShelfInput!): JSONObject!
  updateWhShelfList(data: [WhShelfInput!]!): [JSONObject!]!
  deleteWhShelf(data: String!): JSONObject!
  deleteWhShelfList(data: [String!]!): JSONObject!
  addNeighbourhood(data: NeighbourhoodInput!, numbering: NumberingInput): JSONObject!
  addNeighbourhoodList(data: [NeighbourhoodInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateNeighbourhood(data: NeighbourhoodInput!): JSONObject!
  updateNeighbourhoodList(data: [NeighbourhoodInput!]!): [JSONObject!]!
  deleteNeighbourhood(data: String!): JSONObject!
  deleteNeighbourhoodList(data: [String!]!): JSONObject!
  addWhStaff(data: WhStaffInput!, numbering: NumberingInput): JSONObject!
  addWhStaffList(data: [WhStaffInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhStaff(data: WhStaffInput!): JSONObject!
  updateWhStaffList(data: [WhStaffInput!]!): [JSONObject!]!
  deleteWhStaff(data: String!): JSONObject!
  deleteWhStaffList(data: [String!]!): JSONObject!
  addWhEqm(data: WhEqmInput!, numbering: NumberingInput): JSONObject!
  addWhEqmList(data: [WhEqmInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhEqm(data: WhEqmInput!): JSONObject!
  updateWhEqmList(data: [WhEqmInput!]!): [JSONObject!]!
  deleteWhEqm(data: String!): JSONObject!
  deleteWhEqmList(data: [String!]!): JSONObject!
  addWorkShift(data: WorkShiftInput!, numbering: NumberingInput): JSONObject!
  addWorkShiftList(data: [WorkShiftInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWorkShift(data: WorkShiftInput!): JSONObject!
  updateWorkShiftList(data: [WorkShiftInput!]!): [JSONObject!]!
  deleteWorkShift(data: String!): JSONObject!
  deleteWorkShiftList(data: [String!]!): JSONObject!
  addDsp(data: DspInput!, numbering: NumberingInput): JSONObject!
  addDspList(data: [DspInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDsp(data: DspInput!): JSONObject!
  updateDspList(data: [DspInput!]!): [JSONObject!]!
  deleteDsp(data: String!): JSONObject!
  deleteDspList(data: [String!]!): JSONObject!
  addWhStorageRestriction(data: WhStorageRestrictionInput!, numbering: NumberingInput): JSONObject!
  addWhStorageRestrictionList(data: [WhStorageRestrictionInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhStorageRestriction(data: WhStorageRestrictionInput!): JSONObject!
  updateWhStorageRestrictionList(data: [WhStorageRestrictionInput!]!): [JSONObject!]!
  deleteWhStorageRestriction(data: String!): JSONObject!
  deleteWhStorageRestrictionList(data: [String!]!): JSONObject!
  addPackagingType(data: PackagingTypeInput!, numbering: NumberingInput): JSONObject!
  addPackagingTypeList(data: [PackagingTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePackagingType(data: PackagingTypeInput!): JSONObject!
  updatePackagingTypeList(data: [PackagingTypeInput!]!): [JSONObject!]!
  deletePackagingType(data: String!): JSONObject!
  deletePackagingTypeList(data: [String!]!): JSONObject!
  addHuType(data: HuTypeInput!, numbering: NumberingInput): JSONObject!
  addHuTypeList(data: [HuTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateHuType(data: HuTypeInput!): JSONObject!
  updateHuTypeList(data: [HuTypeInput!]!): [JSONObject!]!
  deleteHuType(data: String!): JSONObject!
  deleteHuTypeList(data: [String!]!): JSONObject!
  addWhHu(data: WhHuInput!, numbering: NumberingInput): JSONObject!
  addWhHuList(data: [WhHuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhHu(data: WhHuInput!): JSONObject!
  updateWhHuList(data: [WhHuInput!]!): [JSONObject!]!
  deleteWhHu(data: String!): JSONObject!
  deleteWhHuList(data: [String!]!): JSONObject!
  addPdHu(data: PdHuInput!, numbering: NumberingInput): JSONObject!
  addPdHuList(data: [PdHuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdHu(data: PdHuInput!): JSONObject!
  updatePdHuList(data: [PdHuInput!]!): [JSONObject!]!
  deletePdHu(data: String!): JSONObject!
  deletePdHuList(data: [String!]!): JSONObject!
  addPdHuProfile(data: PdHuProfileInput!, numbering: NumberingInput): JSONObject!
  addPdHuProfileList(data: [PdHuProfileInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdHuProfile(data: PdHuProfileInput!): JSONObject!
  updatePdHuProfileList(data: [PdHuProfileInput!]!): [JSONObject!]!
  deletePdHuProfile(data: String!): JSONObject!
  deletePdHuProfileList(data: [String!]!): JSONObject!
  addSuType(data: SuTypeInput!, numbering: NumberingInput): JSONObject!
  addSuTypeList(data: [SuTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSuType(data: SuTypeInput!): JSONObject!
  updateSuTypeList(data: [SuTypeInput!]!): [JSONObject!]!
  deleteSuType(data: String!): JSONObject!
  deleteSuTypeList(data: [String!]!): JSONObject!
  addPdSuProfile(data: PdSuProfileInput!, numbering: NumberingInput): JSONObject!
  addPdSuProfileList(data: [PdSuProfileInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdSuProfile(data: PdSuProfileInput!): JSONObject!
  updatePdSuProfileList(data: [PdSuProfileInput!]!): [JSONObject!]!
  deletePdSuProfile(data: String!): JSONObject!
  deletePdSuProfileList(data: [String!]!): JSONObject!
  addWhSu(data: WhSuInput!, numbering: NumberingInput): JSONObject!
  addWhSuList(data: [WhSuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhSu(data: WhSuInput!): JSONObject!
  updateWhSuList(data: [WhSuInput!]!): [JSONObject!]!
  deleteWhSu(data: String!): JSONObject!
  deleteWhSuList(data: [String!]!): JSONObject!
  addPdSu(data: PdSuInput!, numbering: NumberingInput): JSONObject!
  addPdSuList(data: [PdSuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdSu(data: PdSuInput!): JSONObject!
  updatePdSuList(data: [PdSuInput!]!): [JSONObject!]!
  deletePdSu(data: String!): JSONObject!
  deletePdSuList(data: [String!]!): JSONObject!
  addPaymentGateway(data: PaymentGatewayInput!, numbering: NumberingInput): JSONObject!
  addPaymentGatewayList(data: [PaymentGatewayInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePaymentGateway(data: PaymentGatewayInput!): JSONObject!
  updatePaymentGatewayList(data: [PaymentGatewayInput!]!): [JSONObject!]!
  deletePaymentGateway(data: String!): JSONObject!
  deletePaymentGatewayList(data: [String!]!): JSONObject!
  addDocPick(data: DocPickInput!, numbering: NumberingInput): JSONObject!
  addDocPickList(data: [DocPickInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocPick(data: DocPickInput!): JSONObject!
  updateDocPickList(data: [DocPickInput!]!): [JSONObject!]!
  deleteDocPick(data: String!): JSONObject!
  deleteDocPickList(data: [String!]!): JSONObject!
  addDocTask(data: DocTaskInput!, numbering: NumberingInput): JSONObject!
  addDocTaskList(data: [DocTaskInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocTask(data: DocTaskInput!): JSONObject!
  updateDocTaskList(data: [DocTaskInput!]!): [JSONObject!]!
  deleteDocTask(data: String!): JSONObject!
  deleteDocTaskList(data: [String!]!): JSONObject!
  addDocPackSu(data: DocPackSuInput!, numbering: NumberingInput): JSONObject!
  addDocPackSuList(data: [DocPackSuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocPackSu(data: DocPackSuInput!): JSONObject!
  updateDocPackSuList(data: [DocPackSuInput!]!): [JSONObject!]!
  deleteDocPackSu(data: String!): JSONObject!
  deleteDocPackSuList(data: [String!]!): JSONObject!
  addShippingCarrier(data: ShippingCarrierInput!, numbering: NumberingInput): JSONObject!
  addShippingCarrierList(data: [ShippingCarrierInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateShippingCarrier(data: ShippingCarrierInput!): JSONObject!
  updateShippingCarrierList(data: [ShippingCarrierInput!]!): [JSONObject!]!
  deleteShippingCarrier(data: String!): JSONObject!
  deleteShippingCarrierList(data: [String!]!): JSONObject!
  addShippingZone(data: ShippingZoneInput!, numbering: NumberingInput): JSONObject!
  addShippingZoneList(data: [ShippingZoneInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateShippingZone(data: ShippingZoneInput!): JSONObject!
  updateShippingZoneList(data: [ShippingZoneInput!]!): [JSONObject!]!
  deleteShippingZone(data: String!): JSONObject!
  deleteShippingZoneList(data: [String!]!): JSONObject!
  addRpnPlan(data: RpnPlanInput!, numbering: NumberingInput): JSONObject!
  addRpnPlanList(data: [RpnPlanInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRpnPlan(data: RpnPlanInput!): JSONObject!
  updateRpnPlanList(data: [RpnPlanInput!]!): [JSONObject!]!
  deleteRpnPlan(data: String!): JSONObject!
  deleteRpnPlanList(data: [String!]!): JSONObject!
  addWhController(data: WhControllerInput!, numbering: NumberingInput): JSONObject!
  addWhControllerList(data: [WhControllerInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateWhController(data: WhControllerInput!): JSONObject!
  updateWhControllerList(data: [WhControllerInput!]!): [JSONObject!]!
  deleteWhController(data: String!): JSONObject!
  deleteWhControllerList(data: [String!]!): JSONObject!
  addDocTfo(data: DocTfoInput!, numbering: NumberingInput): JSONObject!
  addDocTfoList(data: [DocTfoInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocTfo(data: DocTfoInput!): JSONObject!
  updateDocTfoList(data: [DocTfoInput!]!): [JSONObject!]!
  deleteDocTfo(data: String!): JSONObject!
  deleteDocTfoList(data: [String!]!): JSONObject!
  addDocTfr(data: DocTfrInput!, numbering: NumberingInput): JSONObject!
  addDocTfrList(data: [DocTfrInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocTfr(data: DocTfrInput!): JSONObject!
  updateDocTfrList(data: [DocTfrInput!]!): [JSONObject!]!
  deleteDocTfr(data: String!): JSONObject!
  deleteDocTfrList(data: [String!]!): JSONObject!
  addDocPffm(data: DocPffmInput!, numbering: NumberingInput): JSONObject!
  addDocPffmList(data: [DocPffmInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocPffm(data: DocPffmInput!): JSONObject!
  updateDocPffmList(data: [DocPffmInput!]!): [JSONObject!]!
  deleteDocPffm(data: String!): JSONObject!
  deleteDocPffmList(data: [String!]!): JSONObject!
  addSdal(data: SdalInput!, numbering: NumberingInput): JSONObject!
  addSdalList(data: [SdalInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateSdal(data: SdalInput!): JSONObject!
  updateSdalList(data: [SdalInput!]!): [JSONObject!]!
  deleteSdal(data: String!): JSONObject!
  deleteSdalList(data: [String!]!): JSONObject!
  addDocOresv(data: DocOresvInput!, numbering: NumberingInput): JSONObject!
  addDocOresvList(data: [DocOresvInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocOresv(data: DocOresvInput!): JSONObject!
  updateDocOresvList(data: [DocOresvInput!]!): [JSONObject!]!
  deleteDocOresv(data: String!): JSONObject!
  deleteDocOresvList(data: [String!]!): JSONObject!
  addResvType(data: ResvTypeInput!, numbering: NumberingInput): JSONObject!
  addResvTypeList(data: [ResvTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateResvType(data: ResvTypeInput!): JSONObject!
  updateResvTypeList(data: [ResvTypeInput!]!): [JSONObject!]!
  deleteResvType(data: String!): JSONObject!
  deleteResvTypeList(data: [String!]!): JSONObject!
  addPdResv(data: PdResvInput!, numbering: NumberingInput): JSONObject!
  addPdResvList(data: [PdResvInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePdResv(data: PdResvInput!): JSONObject!
  updatePdResvList(data: [PdResvInput!]!): [JSONObject!]!
  deletePdResv(data: String!): JSONObject!
  deletePdResvList(data: [String!]!): JSONObject!
  addPropConfig(data: PropConfigInput!, numbering: NumberingInput): JSONObject!
  addPropConfigList(data: [PropConfigInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropConfig(data: PropConfigInput!): JSONObject!
  updatePropConfigList(data: [PropConfigInput!]!): [JSONObject!]!
  deletePropConfig(data: String!): JSONObject!
  deletePropConfigList(data: [String!]!): JSONObject!
  addPropType(data: PropTypeInput!, numbering: NumberingInput): JSONObject!
  addPropTypeList(data: [PropTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropType(data: PropTypeInput!): JSONObject!
  updatePropTypeList(data: [PropTypeInput!]!): [JSONObject!]!
  deletePropType(data: String!): JSONObject!
  deletePropTypeList(data: [String!]!): JSONObject!
  addPropUnitType(data: PropUnitTypeInput!, numbering: NumberingInput): JSONObject!
  addPropUnitTypeList(data: [PropUnitTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropUnitType(data: PropUnitTypeInput!): JSONObject!
  updatePropUnitTypeList(data: [PropUnitTypeInput!]!): [JSONObject!]!
  deletePropUnitType(data: String!): JSONObject!
  deletePropUnitTypeList(data: [String!]!): JSONObject!
  addPropUnit(data: PropUnitInput!, numbering: NumberingInput): JSONObject!
  addPropUnitList(data: [PropUnitInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropUnit(data: PropUnitInput!): JSONObject!
  updatePropUnitList(data: [PropUnitInput!]!): [JSONObject!]!
  deletePropUnit(data: String!): JSONObject!
  deletePropUnitList(data: [String!]!): JSONObject!
  addPropFacility(data: PropFacilityInput!, numbering: NumberingInput): JSONObject!
  addPropFacilityList(data: [PropFacilityInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropFacility(data: PropFacilityInput!): JSONObject!
  updatePropFacilityList(data: [PropFacilityInput!]!): [JSONObject!]!
  deletePropFacility(data: String!): JSONObject!
  deletePropFacilityList(data: [String!]!): JSONObject!
  addPropUnitFacility(data: PropUnitFacilityInput!, numbering: NumberingInput): JSONObject!
  addPropUnitFacilityList(data: [PropUnitFacilityInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropUnitFacility(data: PropUnitFacilityInput!): JSONObject!
  updatePropUnitFacilityList(data: [PropUnitFacilityInput!]!): [JSONObject!]!
  deletePropUnitFacility(data: String!): JSONObject!
  deletePropUnitFacilityList(data: [String!]!): JSONObject!
  addPropBill(data: PropBillInput!, numbering: NumberingInput): JSONObject!
  addPropBillList(data: [PropBillInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropBill(data: PropBillInput!): JSONObject!
  updatePropBillList(data: [PropBillInput!]!): [JSONObject!]!
  deletePropBill(data: String!): JSONObject!
  deletePropBillList(data: [String!]!): JSONObject!
  addPropServiceItem(data: PropServiceItemInput!, numbering: NumberingInput): JSONObject!
  addPropServiceItemList(data: [PropServiceItemInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropServiceItem(data: PropServiceItemInput!): JSONObject!
  updatePropServiceItemList(data: [PropServiceItemInput!]!): [JSONObject!]!
  deletePropServiceItem(data: String!): JSONObject!
  deletePropServiceItemList(data: [String!]!): JSONObject!
  addPropServiceUnit(data: PropServiceUnitInput!, numbering: NumberingInput): JSONObject!
  addPropServiceUnitList(data: [PropServiceUnitInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropServiceUnit(data: PropServiceUnitInput!): JSONObject!
  updatePropServiceUnitList(data: [PropServiceUnitInput!]!): [JSONObject!]!
  deletePropServiceUnit(data: String!): JSONObject!
  deletePropServiceUnitList(data: [String!]!): JSONObject!
  addPropServiceType(data: PropServiceTypeInput!, numbering: NumberingInput): JSONObject!
  addPropServiceTypeList(data: [PropServiceTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropServiceType(data: PropServiceTypeInput!): JSONObject!
  updatePropServiceTypeList(data: [PropServiceTypeInput!]!): [JSONObject!]!
  deletePropServiceType(data: String!): JSONObject!
  deletePropServiceTypeList(data: [String!]!): JSONObject!
  addPropServiceUnitItem(data: PropServiceUnitItemInput!, numbering: NumberingInput): JSONObject!
  addPropServiceUnitItemList(data: [PropServiceUnitItemInput!]!, numbering: NumberingInput): [JSONObject!]!
  updatePropServiceUnitItem(data: PropServiceUnitItemInput!): JSONObject!
  updatePropServiceUnitItemList(data: [PropServiceUnitItemInput!]!): [JSONObject!]!
  deletePropServiceUnitItem(data: String!): JSONObject!
  deletePropServiceUnitItemList(data: [String!]!): JSONObject!
  addKitchen(data: KitchenInput!, numbering: NumberingInput): JSONObject!
  addKitchenList(data: [KitchenInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateKitchen(data: KitchenInput!): JSONObject!
  updateKitchenList(data: [KitchenInput!]!): [JSONObject!]!
  deleteKitchen(data: String!): JSONObject!
  deleteKitchenList(data: [String!]!): JSONObject!
  addKitchenOrd(data: KitchenOrdInput!, numbering: NumberingInput): JSONObject!
  addKitchenOrdList(data: [KitchenOrdInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateKitchenOrd(data: KitchenOrdInput!): JSONObject!
  updateKitchenOrdList(data: [KitchenOrdInput!]!): [JSONObject!]!
  deleteKitchenOrd(data: String!): JSONObject!
  deleteKitchenOrdList(data: [String!]!): JSONObject!
  addRestaMenu(data: RestaMenuInput!, numbering: NumberingInput): JSONObject!
  addRestaMenuList(data: [RestaMenuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRestaMenu(data: RestaMenuInput!): JSONObject!
  updateRestaMenuList(data: [RestaMenuInput!]!): [JSONObject!]!
  deleteRestaMenu(data: String!): JSONObject!
  deleteRestaMenuList(data: [String!]!): JSONObject!
  addDocRestaOrd(data: DocRestaOrdInput!, numbering: NumberingInput): JSONObject!
  addDocRestaOrdList(data: [DocRestaOrdInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateDocRestaOrd(data: DocRestaOrdInput!): JSONObject!
  updateDocRestaOrdList(data: [DocRestaOrdInput!]!): [JSONObject!]!
  deleteDocRestaOrd(data: String!): JSONObject!
  deleteDocRestaOrdList(data: [String!]!): JSONObject!
  addRestaTable(data: RestaTableInput!, numbering: NumberingInput): JSONObject!
  addRestaTableList(data: [RestaTableInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRestaTable(data: RestaTableInput!): JSONObject!
  updateRestaTableList(data: [RestaTableInput!]!): [JSONObject!]!
  deleteRestaTable(data: String!): JSONObject!
  deleteRestaTableList(data: [String!]!): JSONObject!
  addRestaArea(data: RestaAreaInput!, numbering: NumberingInput): JSONObject!
  addRestaAreaList(data: [RestaAreaInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRestaArea(data: RestaAreaInput!): JSONObject!
  updateRestaAreaList(data: [RestaAreaInput!]!): [JSONObject!]!
  deleteRestaArea(data: String!): JSONObject!
  deleteRestaAreaList(data: [String!]!): JSONObject!
  addRestaTableType(data: RestaTableTypeInput!, numbering: NumberingInput): JSONObject!
  addRestaTableTypeList(data: [RestaTableTypeInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRestaTableType(data: RestaTableTypeInput!): JSONObject!
  updateRestaTableTypeList(data: [RestaTableTypeInput!]!): [JSONObject!]!
  deleteRestaTableType(data: String!): JSONObject!
  deleteRestaTableTypeList(data: [String!]!): JSONObject!
  addRestaOptionGroup(data: RestaOptionGroupInput!, numbering: NumberingInput): JSONObject!
  addRestaOptionGroupList(data: [RestaOptionGroupInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRestaOptionGroup(data: RestaOptionGroupInput!): JSONObject!
  updateRestaOptionGroupList(data: [RestaOptionGroupInput!]!): [JSONObject!]!
  deleteRestaOptionGroup(data: String!): JSONObject!
  deleteRestaOptionGroupList(data: [String!]!): JSONObject!
  addRestaBranchMenu(data: RestaBranchMenuInput!, numbering: NumberingInput): JSONObject!
  addRestaBranchMenuList(data: [RestaBranchMenuInput!]!, numbering: NumberingInput): [JSONObject!]!
  updateRestaBranchMenu(data: RestaBranchMenuInput!): JSONObject!
  updateRestaBranchMenuList(data: [RestaBranchMenuInput!]!): [JSONObject!]!
  deleteRestaBranchMenu(data: String!): JSONObject!
  deleteRestaBranchMenuList(data: [String!]!): JSONObject!
}

input BizInput {
  bizId: ID
  bizNo: String
  bizName: String
  addr: AddrInfoInput
  branchNo: String
  taxid: String
  contact: ContactInfoInput
  preference: SysPreferenceInfoInput
  child: JSONObject
  tags: String
}

input AddrInfoInput {
  addr1: String
  addr2: String
  countryId: String
  provinceId: String
  districtsId: String
  townId: String
  zip: String
}

input ContactInfoInput {
  telephone: String
  mobile: String
  email: String
}

input SysPreferenceInfoInput {
  purchasePreference: PurchasePreferenceInfoInput
  salePreference: SalePreferenceInfoInput
  inventoryPreference: InventoryPreferenceInfoInput
}

input PurchasePreferenceInfoInput {
  Field0: Float
}

input SalePreferenceInfoInput {
  Field0: Float
}

input InventoryPreferenceInfoInput {
  Field0: String
}

input NumberingInput {
  docNumberingId: String
  seq: String
  pattern: String
  resetType: String
  fieldName: String
  context: JSONObject
}

input UserInput {
  userId: ID
  name: String
  email: String
  password: String
  company: String
  tfaEnabled: Boolean
  tfaSecret: String
  agreements: Boolean
  avatar: String
  profile: UserProfileInfoInput
  preferLang: String
  child: JSONObject
  rowCode: String
  tags: String
}

input UserProfileInfoInput {
  addr: AddrInfoInput
  contact: ContactInfoInput
}

input BizUserInput {
  bizUserId: ID
  bizId: String
  userId: String
  bizUserGrpId: String
  preferLanguageId: String
  allowedBranches: [UserBranchInfoInput!]
  allowAllBranches: Boolean
  active: Boolean
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input UserBranchInfoInput {
  branchId: String
  branchNo: String
  branchName: String
  active: Boolean
}

input PaymentMethodInput {
  paymentMethodId: ID
  bizId: String
  paymentMethodNo: String
  paymentMethodName: String
  applyImmediately: Boolean
  child: JSONObject
  tags: String
}

input CustInput {
  custId: ID
  bizId: String
  custNo: String
  custName: String
  addr: AddrInfoInput
  contact: ContactInfoInput
  custGroupId: String
  discGroupId: String
  logoUrl: String
  lotNoPart: String
  snNoPart: String
  child: JSONObject
  tags: String
}

input CountryInput {
  countryId: ID
  countryCode: String
  countryName: String
  iso3: String
  iso2: String
  numericNo: String
  phoneNo: String
  captital: String
  currency: String
  currencyName: String
  currencySymbol: String
  tld: String
  native: String
  region: String
  subregion: String
  timewhZones: [TimewhZoneInfoInput!]
  latitude: String
  longitude: String
  emoji: String
  emojiU: String
  child: JSONObject
  tags: String
}

input TimewhZoneInfoInput {
  whZoneName: String
  gmtOffset: String
  gmtOffsetName: String
  abbreviation: String
  tzName: String
}

input ProvinceInput {
  provinceId: ID
  provinceNo: String
  provinceName: String
  type: String
  latitude: String
  longitude: String
  countryId: String
  child: JSONObject
  tags: String
}

input DistrictsInput {
  districtsId: ID
  districtsNo: String
  districtsName: String
  latitude: String
  longitude: String
  wikiDataId: String
  provinceId: String
  countryId: String
  child: JSONObject
  tags: String
}

input TownInput {
  townId: ID
  townNo: String
  townName: String
  districtsId: String
  child: JSONObject
  tags: String
}

input LanguageInput {
  languageId: ID
  languageCode: String
  languageName: String
  nativeName: String
  rtl: Boolean
  child: JSONObject
  tags: String
}

input StatusTypeInput {
  statusId: ID
  statusType: String
  statusName: String
  statuses: [StatusInfoInput!]
  defaultStatus: String
  child: JSONObject
  tags: String
}

input StatusInfoInput {
  statusNo: String
  statusName: String
  prevStatus: String
  nextStatus: String
  defaultStatus: Boolean
}

input StatusInput {
  statusId: ID
  statusNo: String
  statusName: String
  child: JSONObject
  tags: String
}

input TitleInput {
  titleId: ID
  titleNo: String
  titleName: String
  bizId: String
  child: JSONObject
  tags: String
}

input DataTypeInput {
  dataTypeId: ID
  typeNo: String
  typeName: String
  standardType: Boolean
  child: JSONObject
  tags: String
}

input PdInput {
  pdId: ID
  bizId: String
  pdNo: String
  pdName: String
  ohQty: Float
  rop: Float
  pdTypeId: String
  pdGroupId: String
  pdCateId: String
  pdSubcateId: String
  priceGroupId: String
  cateId: String
  subcateId: String
  variantParentId: String
  allocatedQty: Float
  onOrderQty: Float
  variant: PdVariantInfoInput
  lotSn: PdLotSnInfoInput
  package: [PdPackageInfoInput!]
  bundle: [PdBundleInfoInput!]
  stdPrice: Float
  stdCost: Float
  noneStock: Boolean
  preferredSuppId: String
  useLot: Boolean
  useSn: Boolean
  allowNegativeQty: Boolean
  uomId: String
  child: JSONObject
  tags: String
}

input PdVariantInfoInput {
  attributes: [PdAttributeInfoInput!]
  generatedVariants: [PdGeneratedVariantInfoInput!]
}

input PdAttributeInfoInput {
  attributeId: String
  pdVariants: [PdAttributeVariantInfoInput!]
}

input PdAttributeVariantInfoInput {
  variantName: String
  codePart: String
  descPart: String
}

input PdGeneratedVariantInfoInput {
  pdId: String
  pdNo: String
  pdName: String
  use: Boolean
}

input PdLotSnInfoInput {
  useLot: Boolean
  useSn: Boolean
  lotMask: String
  snMask: String
  whShelfLife: Float
  retestInterval: Float
}

input PdPackageInfoInput {
  pdId: String
  qty: Float
}

input PdBundleInfoInput {
  pdId: String
  qty: Float
}

input WhStorageInput {
  whStorageId: ID
  bizId: String
  branchId: String
  whId: String
  storageNo: String
  storageName: String
  suppId: String
  custId: String
  whStorageTypeId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  neighbourhoodId: String
  occupiedType: String
  occupiedDocId: String
  occupiedDocNo: String
  whEqmId: String
  whStorageRestrictionId: String
  pickable: Boolean
  child: JSONObject
  tags: String
}

input PdStorageInput {
  pdStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  pdId: String
  pdWhId: String
  pdBranchId: String
  ohQty: Float
  allocatedQty: Float
  allowNegativeQty: Boolean
  status: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  whStorageRestrictionId: String
  refPdNo: String
  refPdName: String
  refStorageNo: String
  refStorageName: String
  pickable: Boolean
  qtyToPick: Float
  rpnPref: PdStorageRpnPrefInfoInput
  allowOnlySu: String
  subQty: Float
  child: JSONObject
  tags: String
}

input PdStorageRpnPrefInfoInput {
  rpnType: String
  rpnBranchId: String
  rpnWhId: String
  rpnZoneId: String
  rpnAisleId: String
  rpnRackId: String
  rpnShelfId: String
  rpnStorageId: String
  rpnControllerId: String
  ropQty: Float
  maxQty: Float
  minQty: Float
}

input CreditTermInput {
  creditTermId: ID
  creditTermNo: String
  creditTermName: String
  creditTermDay: Float
  bizId: String
  child: JSONObject
  tags: String
}

input UomInput {
  uomId: ID
  bizId: String
  uomNo: String
  uomName: String
  child: JSONObject
  tags: String
}

input TaxInput {
  taxId: ID
  taxNo: String
  taxName: String
  taxRate: Float
  bizId: String
  child: JSONObject
  tags: String
}

input CustGroupInput {
  custGroupId: ID
  bizId: String
  custGroupNo: String
  custGroupName: String
  discGroupId: String
  child: JSONObject
  tags: String
}

input SuppGroupInput {
  suppGroupId: ID
  bizId: String
  suppGroupNo: String
  suppGroupName: String
  child: JSONObject
  tags: String
}

input CpdInput {
  cpdId: ID
  bizId: String
  custId: String
  pdId: String
  cpdNo: String
  cpdName: String
  ohQty: Float
  unitPrice: Float
  usePriceIncludeTax: Boolean
  uomId: String
  cnvFactor: Float
  child: JSONObject
  tags: String
}

input SkillInput {
  skillId: ID
  skillNo: String
  skillName: String
  bizId: String
  child: JSONObject
  tags: String
}

input BizUserGrpInput {
  bizUserGrpId: ID
  bizId: String
  grpNo: String
  grpName: String
  child: JSONObject
  tags: String
}

input BizUserRoleInput {
  bizUserRoleId: ID
  roleNo: String
  roleName: String
  bizId: String
  child: JSONObject
  tags: String
}

input DocArivInput {
  docArivId: ID
  bizId: String
  docNo: String
  docDate: Date
  custId: String
  custName: String
  billtoAddr: AddrInfoInput
  shiptoAddr: AddrInfoInput
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  docShipId: String
  branchId: String
  wfStatus: String
  child: JSONObject
  tags: String
}

input DiscGroupInput {
  discGroupId: ID
  bizId: String
  code: String
  name: String
  priceType: String
  discRate: Float
  rounded: Float
  child: JSONObject
  tags: String
}

input DocPoInput {
  docPoId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  dueDate: Date
  suppId: String
  addr: AddrInfoInput
  shiptoAddr: ShipToAddrInfoInput
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  wfStatus: String
  refSuppName: String
  items: [PdPurchaseInfoInput!]
  child: JSONObject
  tags: String
}

input ShipToAddrInfoInput {
  shipToType: String
  shipToCustId: String
  shipToBranchId: String
  shipToWhId: String
  addr1: String
  addr2: String
  countryId: String
  provinceId: String
  districtsId: String
  townId: String
  zip: String
}

input PdPurchaseInfoInput {
  itemId: String
  pdId: String
  spdId: String
  orderedQty: Float
  pdUomId: String
  unitPrice: Float
  totalPrice: Float
  applySuOrHu: String
  orderInHu: PdOrderHuInfoInput
  orderInSu: PdOrderSuInfoInput
  deliveredQty: Float
  invoicedQty: Float
  returnedQty: Float
  status: String
  allowPartialShipment: Boolean
  baseUnitOrderedQty: Float
  cnvFactor: Float
  toReceive: PoReceiveInfoInput
  toInvoice: PoInvoiceInfoInput
}

input PdOrderHuInfoInput {
  huTypeId: Float
  huUomId: Float
  qtyPerSu: Float
  numOfSu: Float
  cnvFactor: Float
}

input PdOrderSuInfoInput {
  suTypeId: String
  suUomId: String
  qtyPerSu: Float
  numOfSu: Float
  cnvFactor: Float
}

input PoReceiveInfoInput {
  qtyToReceive: Float
  aStorageId: String
  aQty: Float
  bStorageId: String
  bQty: Float
  cStorageId: String
  cQty: Float
}

input PoInvoiceInfoInput {
  qtyToInvoice: Float
  unitPrice: Float
}

input RefDocInput {
  refDocId: ID
  bizId: String
  refDocNo: String
  refDocName: String
  child: JSONObject
  tags: String
}

input ChequeDisbursedInput {
  chequeDisbursedId: ID
  bizId: String
  chequeNo: String
  chequeDate: Date
  chequeAmt: Float
  chequeTypeId: String
  bankId: String
  docPaymentItemId: Float
  payeeName: String
  note: String
  status: String
  custId: String
  suppId: String
  child: JSONObject
  tags: String
}

input BankInput {
  bankId: ID
  bizId: String
  bankNo: String
  bankName: String
  child: JSONObject
  tags: String
}

input ChequeReceivedInput {
  chequeReceivedId: ID
  bizId: String
  chequeNo: String
  chequeDate: Date
  chequeAmt: Float
  chequeTypeId: String
  bankId: String
  bankBranch: String
  payerName: String
  note: String
  status: String
  custId: String
  suppId: String
  receiveDate: Date
  depositDate: Date
  returnDate: Date
  redepositDate: Date
  voidDate: Date
  child: JSONObject
  tags: String
}

input ChequeTypeInput {
  chequeTypeId: ID
  bizId: String
  chequeTypeNo: String
  chequeTypeName: String
  child: JSONObject
  tags: String
}

input DocGrnInput {
  docGrnId: ID
  bizId: String
  branchId: String
  docNo: String
  docSuffix: String
  docDate: Date
  whId: String
  suppId: String
  refName: String
  refNo: String
  status: String
  docPoId: String
  wfStatus: String
  items: [PdReceiveInfoInput!]
  child: JSONObject
  tags: String
}

input PdReceiveInfoInput {
  itemId: String
  pdId: String
  useLot: Boolean
  applySu: Boolean
  receivedQty: Float
  pdUomId: String
  cnvFactor: Float
  pdBranchId: String
  whStorageId: String
  pdStorageId: String
  pdLotId: String
  pdLotStorageId: String
  status: String
  refDocId: String
  refDocItemId: String
  suReceive: SuReceiveActionInfoInput
}

input SuReceiveActionInfoInput {
  suTypeId: String
  qtyPerSu: Float
  numOfSu: Float
  suList: [SuReceiveInfoInput!]
}

input SuReceiveInfoInput {
  suNo: String
  receivedQty: Float
  uomId: String
  lotId: String
  whStorageId: String
  pdSuId: String
  cnvFactor: Float
}

input DocRunningGroupInput {
  docRunningGroupId: ID
  bizId: String
  runningGroupName: String
  defaultSeq: Float
  selectionJs: String
  contextJs: String
  runningItem: [RunningInfoInput!]
  child: JSONObject
  rowCode: String
  tags: String
}

input RunningInfoInput {
  seq: Float
  description: String
  pattern: String
  resetType: String
}

input TranslationOptionInput {
  translationOptionId: ID
  languageId: String
  name: String
  baseLanguageId: String
  labels: [TranslationInfoInput!]
  messages: [TranslationInfoInput!]
  countries: [TranslationInfoInput!]
  provinces: [TranslationInfoInput!]
  districts: [TranslationInfoInput!]
  status: [TranslationInfoInput!]
  version: String
  releaseDate: Date
  releaseNote: String
  credit: String
  child: JSONObject
  rowCode: String
  tags: String
}

input TranslationInfoInput {
  translationKey: String
  translationBase: String
  translate: String
}

input BizLanguageInput {
  bizLanguageId: ID
  bizId: String
  languageId: String
  useCustomTranslation: Boolean
  useAsDefault: Boolean
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PdTypeInput {
  pdTypeId: ID
  bizId: String
  pdTypeNo: String
  pdTypeName: String
  child: JSONObject
  tags: String
}

input PdGroupInput {
  pdGroupId: ID
  bizId: String
  pdGroupNo: String
  pdGroupName: String
  child: JSONObject
  tags: String
}

input DocGinInput {
  docGinId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  whId: String
  refNo: String
  status: String
  wfStatus: String
  items: [PdIssueInfoInput!]
  child: JSONObject
  rowDesc: String
  tags: String
}

input PdIssueInfoInput {
  itemId: String
  pdId: String
  useLot: Boolean
  applySu: Boolean
  pdStorageId: String
  pdSuId: String
  pdLotStorageId: String
  issuedQty: Float
  pdUomId: String
  cnvFactor: Float
  status: String
  refDocId: String
  refDocItemId: String
  suIssue: SuIssueActionInfoInput
}

input SuIssueActionInfoInput {
  suTypeId: String
  qtyPerSu: Float
  numOfSu: Float
  suList: [SuIssueInfoInput!]
}

input SuIssueInfoInput {
  pdSuId: String
  issuedQty: Float
  uomId: String
  lotId: String
  cnvFactor: Float
}

input DataFormConfigInput {
  dataFormConfigId: ID
  bizId: String
  formNo: String
  formName: String
  formTpl: [DataFormTplInfoInput!]
  formFilter: [DataFormFilterInfoInput!]
  formTag: [DataFormTagInfoInput!]
  formWfStatus: [DataFormWfStatusInfoInput!]
  displayAsTab: Boolean
  tabPosition: String
  tableAsList: Boolean
  child: JSONObject
  tags: String
}

input DataFormTplInfoInput {
  tplName: String
  tplValues: String
}

input DataFormFilterInfoInput {
  filterName: String
  filterParams: String
  sortDirection: String
  sortBy: String
  defaultValue: Boolean
}

input DataFormTagInfoInput {
  tagName: String
  tagValue: String
  tagColor: String
}

input DataFormWfStatusInfoInput {
  wfStatusName: String
  wfStatusValue: String
}

input PdUomInput {
  pdUomId: ID
  bizId: String
  pdId: String
  uomId: String
  pdUnitNo: String
  pdUnitName: String
  printUnit: String
  cnvFactor: Float
  packagingTypeId: String
  child: JSONObject
  tags: String
}

input DocIvaInput {
  docIvaId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  whId: String
  refNo: String
  status: String
  wfStatus: String
  items: [PdAdjustInfoInput!]
  child: JSONObject
  rowDesc: String
  tags: String
}

input PdAdjustInfoInput {
  itemId: String
  pdId: String
  useLot: Boolean
  appySu: Boolean
  pdStorageId: String
  pdLotStorageId: String
  pdSuId: String
  adjustedQty: Float
  pdUomId: String
  status: String
  refDocId: String
  refDocItemId: String
}

input DocApivInput {
  docApivId: ID
  bizId: String
  docNo: String
  docDate: Date
  suppId: String
  suppName: String
  billtoAddr: AddrInfoInput
  shiptoAddr: AddrInfoInput
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  branchId: String
  wfStatus: String
  child: JSONObject
  tags: String
}

input DocPosInput {
  docPosId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  custId: String
  subtotalAmt: Float
  discAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  posDeviceId: String
  wfStatus: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input CurrencyInput {
  currencyId: ID
  currencyNo: String
  currencyName: String
  symbol: String
  child: JSONObject
  tags: String
}

input PdBalInput {
  pdBalId: ID
  bizId: String
  pdId: String
  beginingOhQty: Float
  endingOhQty: Float
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PdStorageBalInput {
  pdStorageBalId: ID
  bizId: String
  pdStorageId: String
  pdId: String
  beginingOhQty: Float
  endingOhQty: Float
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input DocShipInput {
  docShipId: ID
  bizId: String
  branchId: String
  docNo: String
  docSuffix: String
  docDate: Date
  custId: String
  docSoId: String
  refNo: String
  status: String
  wfStatus: String
  whId: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input PosDeviceInput {
  posDeviceId: ID
  bizId: String
  branchId: String
  posDeviceNo: String
  posDeviceName: String
  brand: String
  model: String
  sn: String
  posType: String
  child: JSONObject
  tags: String
}

input BranchInput {
  branchId: ID
  bizId: String
  branchNo: String
  branchName: String
  virtualBranch: Boolean
  addr: AddrInfoInput
  lotNoPart: String
  snNoPart: String
  inventoryPreference: BranchInventoryPreferenceInfoInput
  salesPreference: BranchSalesPreferenceInfoInput
  purchasePreference: BranchPurchasePreferenceInfoInput
  ffmBranchId: String
  ffmWhId: String
  child: JSONObject
  tags: String
}

input BranchInventoryPreferenceInfoInput {
  applyWh: Boolean
  applySu: Boolean
  applyHu: Boolean
  pickFromAvailableStorage: Boolean
  pickingControllerId: String
  rpnControllerId: String
  rpnBranchId: String
  receivingWhId: String
  pickingWhId: String
}

input BranchSalesPreferenceInfoInput {
  Field0: Float
  Field1: Float
  Field2: Float
  Field3: Float
}

input BranchPurchasePreferenceInfoInput {
  Field0: Float
  Field1: Float
  Field2: Float
  Field3: Float
}

input PdCateInput {
  pdCateId: ID
  bizId: String
  pdCateNo: String
  pdCateName: String
  pdGroupId: String
  child: JSONObject
  tags: String
}

input PdSubcateInput {
  pdSubcateId: ID
  bizId: String
  pdSubcateNo: String
  pdSubcateName: String
  pdCateId: String
  child: JSONObject
  tags: String
}

input PriceGroupInput {
  priceGroupId: ID
  bizId: String
  priceGroupNo: String
  priceGroupName: String
  child: JSONObject
  tags: String
}

input PriceBookInput {
  priceBookId: ID
  priceBookNo: String
  priceBookName: String
  bizId: String
  priceGroupId: String
  inEffectiveDate: Date
  outEffectiveDate: Date
  custGroupId: String
  custSubgroupId: Float
  child: JSONObject
  tags: String
}

input PriceBookItemInput {
  priceBookItemId: ID
  bizId: String
  priceBookId: String
  pdId: String
  stdPrice: Float
  unitPrice: Float
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PriceBookCascadeInput {
  priceBookCascadeId: ID
  bizId: String
  priceBookItemId: String
  fromQty: Float
  toQty: Float
  discRate: Float
  unitPrice: Float
  useType: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input CateInput {
  cateId: ID
  cateNo: String
  cateName: String
  child: JSONObject
  tags: String
}

input SubcateInput {
  subcateId: ID
  subcateNo: String
  subcateName: String
  cateId: String
  child: JSONObject
  tags: String
}

input DocArcInput {
  docArcId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  custId: String
  rentalTypeId: String
  periodId: String
  rentalPeriod: Float
  deliveryMethodId: String
  paymentConditionId: String
  renterAddr: AddrInfoInput
  workSite: AddrInfoInput
  attachedDoc: AttachedDocInfoInput
  contact: ContactInfoInput
  rentalPurpose: String
  startDate: Date
  endDate: Date
  stotalRtp: Float
  discRate: Float
  discAmt: Float
  stotalAfd: Float
  taxRate: Float
  taxAmt: Float
  gtotalRtp: Float
  gtotalGrtAmt: Float
  note: String
  assessedGrtAmt: Float
  receiveGrtAmt: Float
  deliveryCharges: Float
  applyVat: Boolean
  excludeVat: Boolean
  status: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input AttachedDocInfoInput {
  citizenCard: Boolean
  houseRegistration: Boolean
  bankBook: Boolean
  legalEntityRegister: Boolean
  vatRegister: Boolean
  constructionContract: Boolean
  purchaseContract: Boolean
  grtContract: Boolean
}

input DocArcItemInput {
  docArcItemId: ID
  bizId: String
  branchId: String
  docArcId: String
  assetId: String
  rentalPeriod: Float
  periodId: String
  rentedQty: Float
  rtp: Float
  totalRtp: Float
  grtAmt: Float
  totalGrtAmt: Float
  shippedQty: Float
  assetWhStorageId: String
  schdrd: Date
  returnedDate: Date
  returnedQty: Float
  dayDelayed: Float
  pcfDelayed: Float
  delayedTotalAmt: Float
  lostQty: Float
  pcfLost: Float
  lostTotalAmt: Float
  damagedQty: Float
  pcfDamaged: Float
  damagedTotalAmt: Float
  note: String
  status: String
  uomId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PeriodInput {
  periodId: ID
  bizId: String
  periodNo: String
  periodName: String
  child: JSONObject
  tags: String
}

input RtpInput {
  rtpId: ID
  bizId: String
  assetId: String
  periodId: String
  priceIncludeTax: Boolean
  rtp: Float
  grtAmt: Float
  price1: Float
  price2: Float
  price3: Float
  price4: Float
  price5: Float
  remark: String
  cascadedRtp: [AssetCascadePriceInfoInput!]
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input AssetCascadePriceInfoInput {
  numOfPeriods: Float
  rtp: Float
  price1: Float
  price2: Float
  price3: Float
  price4: Float
  price5: Float
}

input CountryTranslationOptionInput {
  countryTranslationOptionId: ID
  languageId: String
  name: String
  baseLanguageId: String
  labels: [TranslationInfoInput!]
  messages: [TranslationInfoInput!]
  countries: [TranslationInfoInput!]
  provinces: [TranslationInfoInput!]
  districts: [TranslationInfoInput!]
  status: [TranslationInfoInput!]
  version: String
  releaseDate: Date
  releaseNote: String
  credit: String
  countryId: String
  child: JSONObject
  rowCode: String
  tags: String
}

input BizTranslationOptionInput {
  bizTranslationOptionId: ID
  bizId: String
  languageId: String
  name: String
  baseLanguageId: String
  labels: [TranslationInfoInput!]
  messages: [TranslationInfoInput!]
  countries: [TranslationInfoInput!]
  provinces: [TranslationInfoInput!]
  districts: [TranslationInfoInput!]
  status: [TranslationInfoInput!]
  version: String
  releaseDate: Date
  releaseNote: String
  credit: String
  child: JSONObject
  rowCode: String
  tags: String
}

input AppMenuInput {
  appMenuId: ID
  title: String
  subtitle: String
  type: String
  icon: String
  children: [CollapsibleMenuInfoInput!]
  link: String
  appModuleId: String
  child: JSONObject
  rowCode: String
  tags: String
}

input CollapsibleMenuInfoInput {
  title: String
  subtitle: String
  type: String
  icon: String
  children: [MenuInfoInput!]
}

input MenuInfoInput {
  title: String
  subtitle: String
  type: String
  hidden: Boolean
  active: Boolean
  disabled: Boolean
  tooltip: String
  fragment: String
  preserveFragment: String
  queryParams: Boolean
  queryParamsHandling: String
  externalLink: Boolean
  target: String
  exectMatch: Boolean
  isActiveMatchOption: String
  function: String
  classes: NavigationClassesInfoInput
  icon: String
  badge: NavigationBadgeInfoInput
  meta: String
  link: String
}

input NavigationClassesInfoInput {
  title: Float
  subtitle: Float
  icon: Float
  wrapper: Float
}

input NavigationBadgeInfoInput {
  title: Float
  classes: Float
}

input UserTokenInput {
  userTokenId: ID
  userId: String
  refreshToken: String
  bid: String
  brid: String
  deviceInfo: DeviceInfoInput
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input DeviceInfoInput {
  platform: String
}

input AssetInput {
  assetId: ID
  bizId: String
  assetNo: String
  assetName: String
  ohQty: Float
  orQty: Float
  pcfLost: Float
  pcfDamaged: Float
  status: String
  pdCateId: String
  pdSubcateId: String
  brandId: String
  colorId: String
  remark: String
  defaultImgUrl: String
  defaultWhId: String
  defaultWhStorageId: String
  pdId: String
  uomId: String
  child: JSONObject
  tags: String
}

input AssetStorageInput {
  assetStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  assetId: String
  ohQty: Float
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input AppTypeInput {
  appTypeId: ID
  appTypeNo: String
  appTypeName: String
  monthlyRate: Float
  yearlyRate: Float
  child: JSONObject
  tags: String
}

input SuppInput {
  suppId: ID
  bizId: String
  suppNo: String
  suppName: String
  addr: AddrInfoInput
  contact: ContactInfoInput
  suppGroupId: String
  logoUrl: String
  child: JSONObject
  tags: String
}

input SpdInput {
  spdId: ID
  bizId: String
  suppId: String
  pdId: String
  spdNo: String
  spdName: String
  ohQty: Float
  unitPrice: Float
  pdUomId: String
  usePriceIncludeTax: Boolean
  minOrderQty: Float
  stairstepPrice: [StairstepPriceInfoInput!]
  cnvFactor: Float
  child: JSONObject
  tags: String
}

input StairstepPriceInfoInput {
  fromQty: Float
  toQty: Float
  unitPrice: Float
}

input DocSoInput {
  docSoId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  dueDate: Date
  custId: String
  billtoAddr: AddrInfoInput
  shiptoAddr: AddrInfoInput
  subtotalAmt: Float
  discAmt: Float
  whtAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  salesChannelId: String
  wfStatus: String
  whId: String
  allowPartialShipment: Boolean
  allowPartialItemShipment: Boolean
  allocated: Boolean
  allocatedStatus: String
  priority: String
  dspId: String
  deliverable: Boolean
  items: [PdSalesInfoInput!]
  shippingCarrierId: String
  numOfItem: Float
  numOfCate: Float
  cateCount: [CateCountInfoInput!]
  paymentMethodId: String
  paymentStatus: String
  partnerName: String
  child: JSONObject
  tags: String
}

input PdSalesInfoInput {
  itemId: String
  pdId: String
  spdId: String
  orderedQty: Float
  pdUomId: String
  unitPrice: Float
  totalPrice: Float
  applyHu: Boolean
  huTypeId: String
  qtyPerHu: Float
  numOfHu: Float
  allocatedQty: Float
  deliveredQty: Float
  invoicedQty: Float
  returnedQty: Float
  status: String
  allowPartialShipment: Boolean
  baseUnitOrderedQty: Float
  cnvFactor: Float
  allocated: Boolean
  deliverable: Boolean
  refOresvId: String
  refOresvNo: String
  refOresvItemId: String
  refOresvStatus: String
  pdBranchId: String
  ffmBranchId: String
  ffmWhId: String
}

input CateCountInfoInput {
  pdCateId: String
  cateName: String
  numOfItem: Float
}

input DeliveryMethodInput {
  deliveryMethodId: ID
  bizId: String
  deliveryMethodNo: String
  deliveryMethodName: String
  child: JSONObject
  tags: String
}

input RentalTypeInput {
  rentalTypeId: ID
  bizId: String
  rentalTypeNo: String
  rentalTypeName: String
  child: JSONObject
  tags: String
}

input PaymentConditionInput {
  paymentConditionId: ID
  bizId: String
  paymentConditionNo: String
  paymentConditionName: String
  child: JSONObject
  tags: String
}

input BrandInput {
  brandId: ID
  bizId: String
  brandNo: String
  brandName: String
  child: JSONObject
  tags: String
}

input ColorInput {
  colorId: ID
  bizId: String
  colorNo: String
  colorName: String
  child: JSONObject
  tags: String
}

input DocCdjInput {
  docCdjId: ID
  bizId: String
  docNo: String
  docDate: Date
  suppId: String
  payeeName: String
  payerName: String
  subtotalAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  branchId: String
  child: JSONObject
  tags: String
}

input ExpenseInput {
  expenseId: ID
  bizId: String
  expenseNo: String
  expenseName: String
  child: JSONObject
  tags: String
}

input RevenueInput {
  revenueId: ID
  bizId: String
  revenueNo: String
  revenueName: String
  child: JSONObject
  tags: String
}

input DocCrjInput {
  docCrjId: ID
  bizId: String
  docNo: String
  docDate: Date
  custId: String
  payerName: String
  payeeName: String
  subtotalAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  branchId: String
  child: JSONObject
  tags: String
}

input DocArrInput {
  docArrId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  docArcId: String
  stotalRtp: Float
  taxRate: Float
  taxAmt: Float
  gtotalRtp: Float
  gtotalGrtAmt: Float
  lostTotalAmt: Float
  damagedTotalAmt: Float
  status: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input DocNarInput {
  docNarId: ID
  bizId: String
  docNo: String
  docDate: Date
  docName: String
  status: String
  branchId: String
  wfStatus: String
  child: JSONObject
  tags: String
}

input DocNarItemInput {
  docNarItemId: ID
  bizId: String
  docNarId: String
  assetId: String
  receivedQty: Float
  branchId: String
  status: String
  wfStatus: String
  uomId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PdBranchInput {
  pdBranchId: ID
  bizId: String
  branchId: String
  pdId: String
  ohQty: Float
  onOrderQty: Float
  onTransitQty: Float
  allocatedQty: Float
  defaultWhId: Float
  defaultPdWhId: Float
  status: String
  allowNegativeQty: Boolean
  pdNo: String
  pdName: String
  pickFromAvailableStorage: Boolean
  ffmBranchId: String
  ffmWhId: String
  rpnPref: PdBranchRpnPrefInfoInput
  child: JSONObject
  tags: String
}

input PdBranchRpnPrefInfoInput {
  rpnType: String
  rpnBranchId: String
  rpnControllerId: String
  ropQty: Float
  maxQty: Float
  minQty: Float
}

input AssetBranchInput {
  assetBranchId: ID
  bizId: String
  branchId: String
  assetId: String
  ohQty: Float
  orQty: Float
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input DocArrItemInput {
  docArrItemId: ID
  bizId: String
  docArrId: String
  assetId: String
  rentalPeriod: Float
  periodId: String
  rentedQty: Float
  rtp: Float
  totalRtp: Float
  grtAmt: Float
  totalGrtAmt: Float
  schdrd: Date
  returnedDate: Date
  returnedQty: Float
  dayDelayed: Float
  note: String
  status: String
  assetWhStorageId: String
  branchId: String
  docArcItemId: String
  lostQty: Float
  pcfLost: Float
  lostTotalAmt: Float
  damagedQty: Float
  pcfDamaged: Float
  damagedTotalAmt: Float
  pcfDelayed: Float
  delayedTotalAmt: Float
  uomId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input DocReceiptInput {
  docReceiptId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  custId: String
  paymentChannelId: String
  refSrc: String
  refId: String
  addr: AddrInfoInput
  bankTransfer: [BankTransferInfoInput!]
  paymentGateway: [PaymentGatewayInfoInput!]
  creditCard: [CreditCardInfoInput!]
  cheque: [ChequeInfoInput!]
  status: String
  cashAmt: Float
  subtotalAmt: Float
  taxRate: Float
  taxAmt: Float
  discRate: Float
  discAmt: Float
  totalAmt: Float
  totalReceiptAmt: Float
  child: JSONObject
  rowDesc: String
  tags: String
}

input BankTransferInfoInput {
  fromBankId: String
  bankAccountId: String
  transferDate: Date
  slipImgUrl: String
  transferAmt: Float
  note: String
}

input PaymentGatewayInfoInput {
  paymentGatewayId: String
  paymentDate: Date
  slipImgUrl: String
  paidAmt: Float
  note: String
}

input CreditCardInfoInput {
  cardTypeId: String
  cardNo: String
  cardHolderName: String
  slipNo: String
  paidAmt: Float
  note: String
}

input ChequeInfoInput {
  chequeNo: String
  chequeDate: Date
  chequeAmt: Float
  chequeTypeId: String
  payerName: String
  bankId: String
  bankBranch: String
  note: String
}

input BankAccountTypeInput {
  bankAccountTypeId: ID
  bizId: String
  bankAccountTypeNo: String
  bankAccountTypeName: String
  child: JSONObject
  tags: String
}

input BankAccountInput {
  bankAccountId: ID
  bizId: String
  bankAccountNo: String
  bankAccountName: String
  bankAccountTypeId: String
  bankId: String
  branchName: String
  status: String
  child: JSONObject
  tags: String
}

input CardTypeInput {
  cardTypeId: ID
  cardTypeNo: String
  cardTypeName: String
  child: JSONObject
  tags: String
}

input PaymentChannelInput {
  paymentChannelId: ID
  paymentChannelNo: String
  paymentChannelName: String
  channelType: String
  child: JSONObject
  tags: String
}

input AppRouteInput {
  appRouteId: ID
  routeNo: String
  title: String
  subtitle: String
  link: String
  child: JSONObject
  tags: String
}

input PdAttributeInput {
  attributeId: ID
  bizId: String
  attributeNo: String
  attributeName: String
  child: JSONObject
  tags: String
}

input WhInput {
  whId: ID
  bizId: String
  branchId: String
  whNo: String
  whName: String
  addr: AddrInfoInput
  contact: ContactInfoInput
  virtual: Boolean
  suspended: Boolean
  defaultWhStorageId: String
  receivingWhStorageId: String
  pickingWhStorageId: String
  packingWhStorageId: String
  shippingWhStorageId: String
  pickingControllerId: String
  rpnControllerId: String
  rpnBranchId: String
  rpnWhId: String
  child: JSONObject
  tags: String
}

input PdWhInput {
  pdWhId: ID
  bizId: String
  branchId: String
  whId: String
  pdBranchId: String
  pdId: String
  ohQty: Float
  onOrderQty: Float
  inTransitOutQty: Float
  inTransitInQty: Float
  allocatedQty: Float
  ropQty: Float
  ropSwitch: Boolean
  minQty: Float
  maxQty: Float
  status: String
  allowNegativeQty: Boolean
  refPdNo: String
  refPdName: String
  refWhNo: String
  refWhName: String
  whPref: WhPrefInfoInput
  rpnPref: WhRpnPrefInfoInput
  child: JSONObject
  tags: String
}

input WhPrefInfoInput {
  defaultZoneId: String
  defaultAisleId: String
  defaultRackId: String
  defaultShelfId: String
  defaultStorageId: String
  receivingStorageId: String
  pickingStorageId: String
  packingStorageId: String
  shippingStorageId: String
}

input WhRpnPrefInfoInput {
  rpnType: String
  rpnBranchId: String
  rpnWhId: String
  rpnControllerId: String
  ropQty: Float
  maxQty: Float
  minQty: Float
}

input SalesChannelInput {
  salesChannelId: ID
  bizId: String
  salesChannelNo: String
  salesChannelName: String
  child: JSONObject
  tags: String
}

input PdLotInput {
  pdLotId: ID
  bizId: String
  pdId: String
  lotNo: String
  ohQty: Float
  allocatedQty: Float
  mfgDate: Date
  expireDate: Date
  suppLotNo: String
  status: String
  suspended: Boolean
  allowNegativeQty: Boolean
  child: JSONObject
  rowDesc: String
  tags: String
}

input PdLotStorageInput {
  pdLotStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  pdId: String
  pdLotId: String
  pdStorageId: String
  ohQty: Float
  allocatedQty: Float
  suspended: Boolean
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  allowNegativeQty: Boolean
  refLotNo: String
  refPdNo: String
  refPdName: String
  refStorageNo: String
  child: JSONObject
  tags: String
}

input PdSnInput {
  pdSnId: ID
  bizId: String
  pdId: String
  sn: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input CpdStorageInput {
  cpdStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  cpdId: String
  ohQty: Float
  ropQty: Float
  status: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input SpdStorageInput {
  spdStorageId: ID
  bizId: String
  branchId: String
  whId: String
  whStorageId: String
  spdId: String
  ohQty: Float
  ropQty: Float
  status: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input DocDsoInput {
  docDsoId: ID
  bizId: String
  docNo: String
  docDate: Date
  dueDate: Date
  suppId: String
  billtoAddr: AddrInfoInput
  custId: String
  shiptoAddr: AddrInfoInput
  subtotalAmt: Float
  discAmt: Float
  taxRate: Float
  taxAmt: Float
  totalAmt: Float
  status: String
  wfStatus: String
  branchId: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input BizAllowedInput {
  bizAllowedId: ID
  userId: String
  refBizId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input InvTrnInput {
  invTrnId: ID
  bizId: String
  branchId: String
  whId: String
  pdId: String
  pdStorageId: String
  pdLotId: String
  trnDate: Date
  trnSrc: String
  trnType: String
  refDocId: String
  refItemId: String
  qty: Float
  pdUomId: String
  cnvFactor: Float
  prevQty: Float
  trnQty: Float
  ohQty: Float
  uomId: String
  sn: String
  status: String
  refPdNo: String
  refPdName: String
  refSuNo: String
  refLotNo: String
  refStorageNo: String
  redDocNo: String
  whStorageId: String
  pdBranchId: String
  pdWhId: String
  pdLotStorageId: String
  pdSuId: String
  child: JSONObject
  tags: String
}

input AppModuleInput {
  appModuleId: ID
  appModuleNo: String
  appModuleName: String
  child: JSONObject
  tags: String
}

input AssetWhInput {
  assetWhId: ID
  bizId: String
  branchId: String
  assetId: String
  whId: String
  ohQty: Float
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PdCostStackInput {
  pdCostStackId: ID
  bizId: String
  pdId: String
  receivedDate: Date
  receivedQty: Float
  soldQty: Float
  unitCost: Float
  totalCost: Float
  completed: Boolean
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input WhStorageTypeInput {
  whStorageTypeId: ID
  bizId: String
  storageTypeNo: String
  storageTypeName: String
  movable: Boolean
  whStorageRestrictionId: String
  dimension: DimensionInfoInput
  child: JSONObject
  tags: String
}

input DimensionInfoInput {
  whidth: Float
  length: Float
  height: Float
}

input WhZoneInput {
  whZoneId: ID
  bizId: String
  branchId: String
  whZoneNo: String
  whZoneName: String
  whId: String
  whAisleQty: Float
  whAislePrefix: String
  whRackPerWhAisleQty: Float
  whShelfPerWhRackQty: Float
  binPerSelfQty: Float
  whStorageRestrictionId: String
  child: JSONObject
  tags: String
}

input WhAisleInput {
  whAisleId: ID
  bizId: String
  branchId: String
  whAisleNo: String
  whAisleName: String
  whId: String
  whZoneId: String
  whRackQty: Float
  whRackPrefix: String
  whShelfPerWhRackQty: Float
  whStorageRestrictionId: String
  child: JSONObject
  tags: String
}

input WhRackInput {
  whRackId: ID
  bizId: String
  branchId: String
  whRackNo: String
  whRackName: String
  whAisleId: String
  whId: String
  whShelfQty: Float
  whShelfPrefix: String
  binPerWhShelfQty: Float
  whStorageRestrictionId: String
  whZoneId: String
  child: JSONObject
  tags: String
}

input WhShelfInput {
  whShelfId: ID
  bizId: String
  branchId: String
  whShelfNo: String
  whShelfName: String
  rackShelfNo: String
  whRackId: String
  binQty: Float
  binPrefix: String
  whStorageRestrictionId: String
  whId: String
  whZoneId: String
  whAisleId: String
  child: JSONObject
  tags: String
}

input NeighbourhoodInput {
  neighbourhoodId: ID
  bizId: String
  branchId: String
  neighbourhoodNo: String
  neighbourhoodName: String
  whAisleId: String
  whId: String
  child: JSONObject
  tags: String
}

input WhStaffInput {
  whStaffId: ID
  bizId: String
  branchId: String
  whId: String
  staffNo: String
  staffName: String
  workShiftId: String
  child: JSONObject
  tags: String
}

input WhEqmInput {
  whEqmId: ID
  bizId: String
  branchId: String
  whId: String
  eqmNo: String
  eqmName: String
  child: JSONObject
  tags: String
}

input WorkShiftInput {
  workShiftId: ID
  bizId: String
  shiftNo: Float
  shiftName: Float
  startTime: Date
  endTime: Date
  child: JSONObject
  tags: String
}

input DspInput {
  dspId: ID
  dspNo: String
  dspName: String
  child: JSONObject
  tags: String
}

input WhStorageRestrictionInput {
  whStorageRestrictionId: ID
  restrictionNo: String
  restrictionName: String
  allowIssue: Boolean
  allowReceive: Boolean
  allowPick: Boolean
  allowTransfer: Boolean
  bizId: String
  paymentMethodId: String
  child: JSONObject
  tags: String
}

input PackagingTypeInput {
  packagingTypeId: ID
  packagingTypeNo: String
  packagingTypeName: String
  bizId: String
  child: JSONObject
  tags: String
}

input HuTypeInput {
  huTypeId: ID
  huTypeNo: String
  huTypeName: String
  bizId: String
  child: JSONObject
  tags: String
}

input WhHuInput {
  whHuId: ID
  bizId: String
  branchId: String
  huNo: String
  status: String
  huTypeId: String
  whId: String
  whStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  parentHuId: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input PdHuInput {
  pdHuId: ID
  bizId: String
  branchId: String
  whId: String
  whHuId: String
  pdId: String
  huQty: Float
  pdUomId: String
  cnvFactor: Float
  ohQty: Float
  allocatedQty: Float
  pdLotId: String
  pdWhId: String
  pdStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  whStorageId: String
  parentId: String
  refHuNo: String
  refPdNo: String
  refPdName: String
  refLotNo: String
  refStorageNo: String
  child: JSONObject
  tags: String
}

input PdHuProfileInput {
  pdHuProfileId: ID
  bizId: String
  pdId: String
  huTypeId: String
  pdUomId: String
  qtyPerHu: Float
  dimension: DimensionInfoInput
  strictStorageType: [StrictStorageTypeInfoInput!]
  secondaryUomId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input StrictStorageTypeInfoInput {
  whStorageTypeId: String
  maxUnit: Float
}

input SuTypeInput {
  suTypeId: ID
  bizId: String
  suTypeNo: String
  suTypeName: String
  child: JSONObject
  tags: String
}

input PdSuProfileInput {
  pdSuProfileId: ID
  bizId: String
  pdId: String
  suTypeId: String
  pdUomId: String
  qtyPerSu: Float
  dimension: DimensionInfoInput
  strictStorageType: [StrictStorageTypeInfoInput!]
  secondayUomId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input WhSuInput {
  whSuId: ID
  bizId: String
  branchId: String
  suNo: String
  status: String
  suTypeId: String
  whId: String
  whStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  parentSuId: String
  inPicking: Boolean
  multipleOrder: Boolean
  child: JSONObject
  rowDesc: String
  tags: String
}

input PdSuInput {
  pdSuId: ID
  bizId: String
  branchId: String
  whId: String
  whSuId: String
  pdId: String
  suQty: Float
  pdUomId: String
  cnvFactor: Float
  ohQty: Float
  allocatedQty: Float
  pdLotId: String
  pdWhId: String
  pdStorageId: String
  whStorageId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  parentId: String
  refSuNo: String
  refPdNo: String
  refPdName: String
  refLotNo: String
  refStorageNo: String
  child: JSONObject
  tags: String
}

input PaymentGatewayInput {
  paymentGatewayId: ID
  bizId: String
  paymentGatewayNo: String
  paymentGatewayName: String
  child: JSONObject
  tags: String
}

input DocPickInput {
  docPickId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  pickingType: String
  whControllerId: String
  status: String
  docPffmId: String
  ord: [PickOrdInfoInput!]
  pd: [PickPdInfoInput!]
  child: JSONObject
  rowDesc: String
  tags: String
}

input PickOrdInfoInput {
  docId: String
  docNo: String
  docDate: Date
  docType: String
  dueDate: Date
  partnerName: String
  numOfItem: Float
  finalSuId: String
  items: [PickOrdItemInfoInput!]
  status: String
}

input PickOrdItemInfoInput {
  pdId: String
  orderedQty: Float
  pdUomId: String
  qtyToPick: Float
  pickedQty: Float
  status: String
  itemIndex: Float
  itemId: String
  fromWhId: String
  fromZoneId: String
  fromAisleId: String
  fromRackId: String
  fromShelfId: String
  fromStorageId: String
  fromLotId: String
}

input PickPdInfoInput {
  pdId: String
  qtyToPick: Float
  pickedQty: Float
  srcCount: Float
  srcDoc: [PickPdItemInfoInput!]
  exception: InventoryExceptionInfoInput
  fromZoneId: String
  fromAisleId: String
  fromRackId: String
  fromShelfId: String
  fromStorageId: String
  fromWhId: String
  rpnType: String
  maxQty: Float
  ropQty: Float
  qtyPerKanban: Float
  numOfKanban: Float
  status: String
}

input PickPdItemInfoInput {
  docId: String
  docNo: String
  partnerName: String
  qtyToPick: Float
  pickedQty: Float
  itemId: String
  itemIndex: Float
  numOfItem: Float
}

input InventoryExceptionInfoInput {
  exceptionCode: String
  exceptionMessage: String
  exceptionQty: Float
  exceptionResolved: Boolean
}

input DocTaskInput {
  docTaskId: ID
  bizId: String
  branchId: String
  whId: String
  docPickId: String
  docNo: String
  docDate: Date
  refDocId: String
  refDocNo: String
  whStaffId: String
  finalSuId: String
  transportSuId: String
  whControllerId: String
  pickingType: String
  routeLevel: String
  status: String
  pd: [TaskPdInfoInput!]
  route: [TaskRouteInfoInput!]
  storage: [TaskStorageInfoInput!]
  child: JSONObject
  rowDesc: String
  tags: String
}

input TaskPdInfoInput {
  pdId: String
  qtyToPick: Float
  pickedQty: Float
  transportSuId: String
  fromZoneId: String
  fromAisleId: String
  fromRackId: String
  fromShelfId: String
  fromStorageId: String
  status: String
  ord: [TaskPdOrdInfoInput!]
}

input TaskPdOrdInfoInput {
  finalSuId: String
  transportSuId: String
  qtyToPick: Float
  pickedQty: Float
  docId: String
  itemId: String
  itemIndex: Float
  docNo: String
  partnerName: String
}

input TaskRouteInfoInput {
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
}

input TaskStorageInfoInput {
  pdId: String
  pdStorageId: String
  qtyToPick: Float
  pickedQty: Float
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  pdNo: String
  pdName: String
  zoneNo: String
  aisleNo: String
  rackNo: String
  shelfNo: String
  storageNo: String
}

input DocPackSuInput {
  docPackSuId: ID
  bizId: String
  branchId: String
  docPickId: String
  docPickOrdId: Float
  whSuId: String
  docTaskId: String
  refSuNo: String
  refDocNo: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input ShippingCarrierInput {
  shippingCarrierId: ID
  carrierNo: String
  carrierName: String
  child: JSONObject
  tags: String
}

input ShippingZoneInput {
  shippingZoneId: ID
  bizId: String
  shippingZoneNo: String
  shippingZoneName: String
  child: JSONObject
  tags: String
}

input RpnPlanInput {
  rpnPlanId: ID
  bizId: String
  pdId: String
  branchId: String
  whId: String
  whStorageId: String
  rpnQty: Float
  rpnSrc: String
  rpnType: String
  dueDate: Date
  dueTime: Date
  suppId: String
  taskType: String
  status: String
  rpnBranchId: String
  rpnWhId: String
  rpnZoneId: String
  rpnAisleId: String
  rpnRackId: String
  rpnShelfId: String
  rpnStorageId: String
  refPdStorageId: String
  refPdWhId: String
  refPdBranchId: String
  whControllerId: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input WhControllerInput {
  whControllerId: ID
  bizId: String
  whControllerNo: String
  whControllerName: String
  child: JSONObject
  tags: String
}

input DocTfoInput {
  docTfoId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  transferType: String
  dstBranchId: String
  dstWhId: String
  items: [PdTransferInfoInput!]
  status: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input PdTransferInfoInput {
  seq: Float
  pdId: String
  qtyToTransfer: Float
  transferedQty: Float
  dstStorageId: String
  rpnZoneId: String
  rpnAisleId: String
  rpnRackId: String
  rpnShelfId: String
  rpnStorageId: String
}

input DocTfrInput {
  docTfrId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  transferType: String
  dstBranchId: String
  dstWhId: String
  items: [PdTransferInfoInput!]
  status: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input DocPffmInput {
  docPffmId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  status: String
  order: [PffmOrdInfoInput!]
  pd: [PffmPdInfoInput!]
  child: JSONObject
  rowDesc: String
  tags: String
}

input PffmOrdInfoInput {
  docId: String
  docNo: String
  docDate: Date
  docType: String
  dueDate: Date
  partnerName: String
  numOfItem: Float
}

input PffmPdInfoInput {
  pdId: String
  orderedQty: Float
  srcCount: Float
  srcDoc: [PffmPdOrdInfoInput!]
  exception: InventoryExceptionInfoInput
}

input PffmPdOrdInfoInput {
  docId: String
  docNo: String
  partnerName: String
  itemIndex: Float
  itemId: String
  orderedQty: Float
  priority: String
  orderValue: Float
  paymentMethodId: String
  paymentStatus: String
  numOfItem: Float
}

input SdalInput {
  sdalId: ID
  bizId: String
  branchId: String
  pdId: String
  itemType: String
  dueDate: Date
  orderedQty: Float
  projectedQty: Float
  docType: String
  docId: String
  docNo: String
  itemIdx: Float
  itemId: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input DocOresvInput {
  docResvId: ID
  bizId: String
  branchId: String
  whId: String
  docNo: String
  docDate: Date
  resvTypeId: String
  refDocType: String
  refDocId: String
  refDocNo: String
  refPartnerName: String
  inEffective: Date
  outEffective: Date
  status: String
  items: [PdOresvItemInfoInput!]
  child: JSONObject
  tags: String
}

input PdOresvItemInfoInput {
  itemId: String
  pdId: String
  refDocType: String
  refDocId: String
  refDocNo: String
  refPartnerName: String
  refItemId: String
  refOrderedQty: Float
  qtyToResv: Float
  resvWhId: String
  resvZoneId: String
  resvAisleId: String
  resvRackId: String
  resvShelfId: String
  resvStorageId: String
  resvStorage: [PdOresvStorageInfoInput!]
  status: String
}

input PdOresvStorageInfoInput {
  whStorageId: Float
  allocatedQty: Float
}

input ResvTypeInput {
  resvTypeId: ID
  bizId: String
  resvTypeNo: String
  resvTypeName: String
  child: JSONObject
  tags: String
}

input PdResvInput {
  pdResvId: ID
  bizId: String
  branchId: String
  whId: String
  salesChannelId: String
  pdId: String
  whZoneId: String
  whAisleId: String
  whRackId: String
  whShelfId: String
  whStorageId: String
  whHuId: String
  whSuId: String
  custId: String
  docSoId: String
  itemId: Float
  resvQty: Float
  resvTypeId: String
  child: JSONObject
  rowCode: String
  rowDesc: String
  tags: String
}

input PropConfigInput {
  propConfigId: ID
  bizId: String
  branchId: String
  propConfigNo: String
  propConfigName: String
  propTypeId: String
  numOfUnit: Float
  child: JSONObject
  tags: String
}

input PropTypeInput {
  propTypeId: ID
  bizId: String
  propTypeNo: String
  propTypeName: String
  child: JSONObject
  tags: String
}

input PropUnitTypeInput {
  propUnitTypeId: ID
  bizId: String
  propUnitTypeNo: String
  propUnitTypeName: String
  child: JSONObject
  tags: String
}

input PropUnitInput {
  propUnitId: ID
  bizId: String
  branchId: String
  propUnitNo: String
  propUnitName: String
  propTypeId: String
  propUnitTypeId: String
  child: JSONObject
  tags: String
}

input PropFacilityInput {
  propFacilityId: ID
  bizId: String
  propFacilityNo: String
  propFacilityName: String
  child: JSONObject
  tags: String
}

input PropUnitFacilityInput {
  propUnitFacilityId: ID
  bizId: String
  propUnitFacilityNo: String
  propUnitFacilityName: String
  child: JSONObject
  tags: String
}

input PropBillInput {
  propBillId: ID
  bizId: String
  branchId: String
  billNo: String
  billDate: Date
  multiUnitBill: Boolean
  propUnitId: String
  child: JSONObject
  rowDesc: String
  tags: String
}

input PropServiceItemInput {
  propServiceItemId: ID
  bizId: String
  itemNo: String
  itemName: String
  propServiceTypeId: String
  child: JSONObject
  tags: String
}

input PropServiceUnitInput {
  propServiceUnitId: ID
  bizId: String
  branchId: String
  propServiceUnitNo: String
  propServiceUnitName: String
  propServiceTypeId: String
  child: JSONObject
  tags: String
}

input PropServiceTypeInput {
  propServiceTypeId: ID
  bizId: String
  serviceTypeNo: String
  serviceTypeName: String
  child: JSONObject
  tags: String
}

input PropServiceUnitItemInput {
  propServiceUnitItemId: ID
  bizId: String
  propServiceUnitId: String
  propServiceItemId: String
  unitPrice: Float
  itemNo: String
  itemName: String
  child: JSONObject
  tags: String
}

input KitchenInput {
  kitchenId: ID
  bizId: String
  branchId: String
  kitchenNo: String
  kitchenName: String
  child: JSONObject
  tags: String
}

input KitchenOrdInput {
  kitchenOrdId: ID
  bizId: String
  branchId: String
  kitchenId: String
  kitchenOrdNo: String
  kitchenOrdDate: Date
  restaMenuId: String
  docRestaOrdId: String
  itemId: String
  menuName: String
  orderedQty: Float
  optionGroups: [RestaOptionGroupInfoInput!]
  restaTableId: String
  child: JSONObject
  tags: String
}

input RestaOptionGroupInfoInput {
  optionGroupNo: String
  optionGroupName: String
  optionItems: [RestaOptionItemInfoInput!]
}

input RestaOptionItemInfoInput {
  optionName: String
  kitchenInstruction: String
  selected: Boolean
}

input RestaMenuInput {
  restaMenuId: ID
  bizId: String
  restaMenuNo: String
  restaMenuName: String
  optionGroups: [RestaOptionGroupInfoInput!]
  unitPrice: Float
  child: JSONObject
  tags: String
}

input DocRestaOrdInput {
  docRestaOrdId: ID
  bizId: String
  branchId: String
  docNo: String
  docDate: Date
  restaTableId: String
  seatNo: String
  items: [RestaOrdItemInfoInput!]
  child: JSONObject
  rowDesc: String
  tags: String
}

input RestaOrdItemInfoInput {
  restaMenuId: String
  orderedQty: Float
  unitPrice: Float
  totalPrice: Float
  seatNo: String
  optionGroups: [RestaOptionGroupInfoInput!]
  Field0: Float
}

input RestaTableInput {
  restaTableId: ID
  bizId: String
  branchId: String
  tableNo: String
  tableName: String
  restaTableTypeId: String
  restaAreaId: String
  child: JSONObject
  tags: String
}

input RestaAreaInput {
  restaAreaId: ID
  bizId: String
  branchId: String
  restaAreaNo: String
  restaAreaName: String
  child: JSONObject
  tags: String
}

input RestaTableTypeInput {
  restaTableTypeId: ID
  bizId: String
  branchId: String
  tableTypeNo: String
  tableTypeName: String
  numOfSeat: Float
  child: JSONObject
  tags: String
}

input RestaOptionGroupInput {
  restaOptionGroupId: ID
  bizId: String
  optionGroupNo: String
  optionGroupName: String
  optionItems: [RestaOptionItemInfoInput!]
  child: JSONObject
  tags: String
}

input RestaBranchMenuInput {
  restaBranchMenuId: ID
  bizId: String
  branchId: String
  restaMenuId: String
  menuNo: String
  menuName: String
  unitPrice: Float
  child: JSONObject
  tags: String
}